{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "Telnyx API",
    "description": "SIP trunking, SMS, MMS, Call Control and Telephony Data Services.",
    "license": {
      "name": "MIT"
    },
    "contact": {
      "email": "support@telnyx.com"
    }
  },
  "servers": [
    {
      "url": "https://api.telnyx.com/v2",
      "description": "Version 2.0.0 of the Telnyx API"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Messaging Profiles",
      "description": "Messaging profiles"
    },
    {
      "name": "Phone Numbers",
      "description": "Phone numbers"
    },
    {
      "name": "Numbers",
      "description": "Numbers"
    },
    {
      "name": "Number Search",
      "description": "Number search"
    },
    {
      "name": "Number Reservations",
      "description": "Number reservations"
    },
    {
      "name": "Messages",
      "description": "Messages"
    },
    {
      "name": "Alphanumeric Sender IDs",
      "description": "Alphanumeric sender ids"
    },
    {
      "name": "Short Codes",
      "description": "Short codes"
    },
    {
      "name": "Public Key",
      "description": "Public Key"
    },
    {
      "name": "Call Commands",
      "description": "Call control command operations"
    },
    {
      "name": "Conferences",
      "description": "Conference operations"
    },
    {
      "name": "Conference Commands",
      "description": "Conference command operations"
    },
    {
      "name": "Debugging",
      "description": "Call control debugging"
    }
  ],
  "paths": {
    "/number_orders": {
      "get": {
        "tags": [
          "Number Orders"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filter[status]",
            "description": "Filter number orders by status",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter[created_at][gt]",
            "description": "Filter number orders later than this value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter[created_at][lt]",
            "description": "Filter number orders earlier than this value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter[phone_numbers.phone_number]",
            "description": "Filter number orders having these phone numbers",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter[customer_reference]",
            "description": "Filter number orders via the customer reference set",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter[requirements_met]",
            "description": "Filter number orders by requirements met",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/NumberOrdersResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "post": {
        "tags": [
          "Number Orders"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/NumberOrdersDetailedResponse"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberOrder"
              }
            }
          }
        },
        "callbacks": {
          "numberOrderStatusUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/NumberOrder"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "The server must return a HTTP 200, otherwise we will reattempt to deliver the webhook to the failover url.\n"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/number_orders/{number_order_id}": {
      "get": {
        "tags": [
          "Number Orders"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/NumberOrderId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/NumberOrdersDetailedResponse"
          }
        }
      },
      "patch": {
        "tags": [
          "Number Orders"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/NumberOrderId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/NumberOrdersDetailedResponse"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/number_reservations": {
      "get": {
        "summary": "Retrieve multiple Number Reservations",
        "description": "Gets a paginated list of Phone Number Reservations",
        "operationId": "listNumberReservations",
        "tags": [
          "Number Reservations"
        ],
        "parameters": [
          {
            "name": "filter[status]",
            "in": "query",
            "description": "Filter number reservations by status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at][gt]",
            "in": "query",
            "description": "Filter number reservations later than this value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at][lt]",
            "in": "query",
            "description": "Filter number reservations earlier than this value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[phone_numbers.phone_number]",
            "in": "query",
            "description": "Filter number reservations having these phone numbers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[customer_reference]",
            "in": "query",
            "description": "Filter number reservations via the customer reference set",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListNumberReservationsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "post": {
        "summary": "Create Phone Number Reservation",
        "description": "Creates a Phone Number Reservation for multiple numbers",
        "operationId": "createNumberReservations",
        "tags": [
          "Number Reservations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberReservation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/NumberReservationCreatedResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/number_reservations/{number_reservation_id}": {
      "get": {
        "summary": "Retrieve a Single Phone Number Reservation",
        "description": "Gets a single Phone Number Reservation",
        "operationId": "retrieveNumberReservation",
        "tags": [
          "Number Reservations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/NumberReservationId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveNumberReservationResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/number_reservations/{number_reservation_id}/actions/extend": {
      "post": {
        "summary": "Extend a Phone Number Reservation",
        "description": "Extends reservation expiry time on all phone numbers",
        "operationId": "extendNumberReservationExpiryTime",
        "tags": [
          "Number Reservations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/NumberReservationId"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveNumberReservationResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/messaging_profiles": {
      "get": {
        "summary": "List all messaging profiles",
        "operationId": "listMessagingProfiles",
        "tags": [
          "Messaging Profiles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListMessagingProfilesResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "post": {
        "summary": "Create a messaging profile",
        "operationId": "createMessagingProfile",
        "tags": [
          "Messaging Profiles"
        ],
        "requestBody": {
          "description": "New Messaging Profile object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMessagingProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateMessagingProfileResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        },
        "callbacks": {
          "inboundMessage": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/InboundMessageEvent"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          },
          "deliveryUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/OutboundMessageEvent"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messaging_profiles/{id}": {
      "get": {
        "summary": "Retrieve a messaging profile",
        "operationId": "retrieveMessagingProfile",
        "tags": [
          "Messaging Profiles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/MessagingProfileId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveMessagingProfileResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "patch": {
        "summary": "Update a messaging profile",
        "operationId": "updateMessagingProfile",
        "tags": [
          "Messaging Profiles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/MessagingProfileId"
          }
        ],
        "requestBody": {
          "description": "New Messaging Profile object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessagingProfileUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateMessagingProfileResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete a messaging profile",
        "operationId": "deleteMessagingProfile",
        "tags": [
          "Messaging Profiles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/MessagingProfileId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteMessagingProfileResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/messaging_profiles/{id}/phone_numbers": {
      "get": {
        "summary": "List all phone numbers associated with a messaging profile",
        "operationId": "listMessagingProfilePhoneNumbers",
        "tags": [
          "Messaging Profiles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "$ref": "#/components/parameters/MessagingProfileId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveMessagingProfilePhoneNumbersResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/messaging_profiles/{id}/short_codes": {
      "get": {
        "summary": "List all short codes associated with a messaging profile",
        "operationId": "listMessagingProfileShortCodes",
        "tags": [
          "Messaging Profiles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "$ref": "#/components/parameters/MessagingProfileId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveMessagingProfileShortCodesResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/messaging_profiles/{id}/alphanumeric_sender_ids": {
      "get": {
        "summary": "List all alphanumeric sender IDs associated with a messaging profile",
        "operationId": "listMessagingProfileAlphanumericSenderIds",
        "tags": [
          "Messaging Profiles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "$ref": "#/components/parameters/MessagingProfileId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveMessagingProfileAlphanumericSenderIdsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/messaging_phone_numbers": {
      "get": {
        "summary": "List all messaging capable phone numbers",
        "operationId": "listMessagingPhoneNumbers",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "name": "filter[messaging_profile_id]",
            "in": "query",
            "description": "Filter by Messaging Profile ID. Use the string `null` for phone numbers without assigned profiles. A synonym for the `/messaging_profiles/{id}/phone_number` endpoint when querying about an extant profile.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[phone_number]",
            "in": "query",
            "description": "A comma separated list of phone numbers to return",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListMessagingPhoneNumbersResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/messaging_phone_numbers/{id}": {
      "get": {
        "summary": "Retrieve a messaging phone number",
        "operationId": "retrieveMessagingPhoneNumber",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/MessagingPhoneNumberId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveMessagingPhoneNumberResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "patch": {
        "summary": "Update a messaging phone number",
        "operationId": "updateMessagingPhoneNumber",
        "description": "Update the settings for a specific number. To unbind a number from, a profile, set the `messaging_profile_id` to `null` or an empty string.",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/MessagingPhoneNumberId"
          }
        ],
        "requestBody": {
          "description": "Messaging Phone Number Update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessagingPhoneNumberUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateMessagingPhoneNumberResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/short_codes": {
      "get": {
        "summary": "List all short codes",
        "operationId": "listShortCodes",
        "tags": [
          "Short Codes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "name": "filter[messaging_profile_id]",
            "in": "query",
            "description": "Filter by Messaging Profile ID. Use the string `null` for phone numbers without assigned profiles. A synonym for the `/messaging_profiles/{id}/short_codes` endpoint when querying about an extant profile.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListShortCodesResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/short_codes/{id}": {
      "get": {
        "summary": "Retrieve a short code",
        "operationId": "retrieveShortCode",
        "tags": [
          "Short Codes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ShortCodeId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveShortCodeResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "patch": {
        "summary": "Update short code",
        "operationId": "updateShortCode",
        "description": "Update the settings for a specific short code. To unbind a short code from a profile, set the `messaging_profile_id` to `null` or an empty string.",
        "tags": [
          "Short Codes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ShortCodeId"
          }
        ],
        "requestBody": {
          "description": "Short code update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShortCodeUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateShortCodeResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/alphanumeric_sender_ids": {
      "post": {
        "summary": "Create an alphanumeric sender ID",
        "operationId": "createAlphanumericSenderId",
        "tags": [
          "Alphanumeric Sender IDs"
        ],
        "requestBody": {
          "description": "New alphanumeric sender ID",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAlphanumericSenderId"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/CreateAlphanumericSenderIdResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "get": {
        "summary": "List all alphanumeric sender IDs",
        "operationId": "listAlphanumericSenderIds",
        "tags": [
          "Alphanumeric Sender IDs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "name": "filter[messaging_profile_id]",
            "in": "query",
            "description": "Filter by Messaging Profile ID. Use the string `null` for phone numbers without assigned profiles. A synonym for the `/messaging_profiles/{id}/alphanumeric_sender_ids` endpoint when querying about an extant profile.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListAlphanumericSenderIdsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/alphanumeric_sender_ids/{id}": {
      "get": {
        "summary": "Retrieve an alphanumeric sender ID",
        "operationId": "retrieveAlphanumericSenderId",
        "tags": [
          "Alphanumeric Sender IDs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AlphanumericSenderId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveAlphanumericSenderIdResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete an alphanumeric sender ID",
        "operationId": "deleteAlphanumericSenderId",
        "description": "Delete a specific alphanumeric sender ID.",
        "tags": [
          "Alphanumeric Sender IDs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AlphanumericSenderId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteAlphanumericSenderIdResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/messages": {
      "post": {
        "summary": "Send a message",
        "operationId": "createMessage",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "description": "Message payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateMessageResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        },
        "callbacks": {
          "deliveryUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/OutboundMessage"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/alphanumeric_sender_id": {
      "post": {
        "summary": "Send a message using an alphanumeric sender ID",
        "operationId": "createAlphanumericSenderIdMessage",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "description": "Message payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAlphanumericSenderIdMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateMessageResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        },
        "callbacks": {
          "deliveryUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/OutboundMessage"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/number_pool": {
      "post": {
        "summary": "Send a message using Number Pool",
        "operationId": "createNumberPoolMessage",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "description": "Message payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewNumberPoolMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateMessageResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        },
        "callbacks": {
          "deliveryUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/OutboundMessage"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/{id}": {
      "get": {
        "summary": "Retrieve a message",
        "operationId": "retrieveMessage",
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the message",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveMessageResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/available_phone_numbers": {
      "get": {
        "summary": "List available phone numbers",
        "operationId": "listAvailablePhoneNumbers",
        "tags": [
          "Number Search"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "phone_number": {
                  "type": "object",
                  "properties": {
                    "contains": {
                      "type": "string"
                    },
                    "ends_with": {
                      "type": "string"
                    },
                    "starts_with": {
                      "type": "string"
                    }
                  }
                },
                "locality": {
                  "type": "string"
                },
                "administrative_area": {
                  "type": "string"
                },
                "country_code": {
                  "type": "string"
                },
                "national_destination_code": {
                  "type": "string"
                },
                "rate_center": {
                  "type": "string"
                },
                "number_type": {
                  "type": "string",
                  "enum": [
                    "toll-free",
                    "national",
                    "mobile",
                    "local"
                  ]
                },
                "limit": {
                  "type": "integer"
                },
                "best_effort": {
                  "type": "boolean"
                },
                "exclude_regulatory_requirements": {
                  "type": "boolean"
                },
                "features": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "sms",
                      "mms",
                      "voice",
                      "fax"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListAvailablePhoneNumbersResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/public_key": {
      "get": {
        "summary": "Retrieve public key",
        "operationId": "retrievePublicKey",
        "tags": [
          "Public Key"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PublicKeyResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/answer": {
      "post": {
        "summary": "Answer call",
        "description": "Answer an incoming call.\n\n\n**Expected Webhooks:**\n- [Call answered](/docs/v1/call-control/Call%20Webhooks#call-answered)\n",
        "operationId": "CallControlAnswer",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Answer call request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/bridge": {
      "post": {
        "summary": "Bridge calls",
        "description": "Bridge two call control calls.\n\n\n**Expected Webhooks:**\n- [Call bridged](/docs/v1/call-control/Call%20Webhooks#call-bridged) for Leg A\n- [Call bridged](/docs/v1/call-control/Call%20Webhooks#call-bridged) for Leg B\n",
        "operationId": "CallControlBridge",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Bridge call request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BridgeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/fork_start": {
      "post": {
        "summary": "Forking start",
        "description": "Call forking allows you to stream the media from a call to a specific target in realtime. \nThis stream can be used to enable realtime audio analysis in support of a \nvariety of use cases, including fraud detection, or the creation of AI-generated audio responses. \nRequests must specify either the \"target\" attribute or the \"rx\" and \"tx\" attributes.\n\n**Expected Webhooks:**\n\nThere are currently no webhooks associated with the Forking start command.\n\n\n**Simple Telnyx RTP Encapsulation Protocol (STREP)**\n\n*Note: This header/encapsulation is not used when the \"rx\" and \"tx\"\nparameters have been specified; it only applies when media is forked\nusing the \"target\" attribute.*\n\nIf the destination for forked media is specified using the \"target\"\nattribute, the RTP will be encapsulated in an extra Telnyx protocol,\nwhich adds a 24 byte header to the RTP payload in each packet. The STREP\nheader includes the Call Control `call_leg_id` for stream\nidentification, along with bits that represent the direction (inbound or\noutbound) of the media. This 24-byte header sits between the UDP header\nand the RTP header.\n\nThe STREP header makes it possible to fork RTP for multiple calls (or\ntwo RTP streams for the same call) to the same IP:port, where the\nstreams can be demultiplexed by your application using the information\nin the header. Of course, it's still possible to ignore this header\ncompletely, for example, if sending forked media for different calls to\ndifferent ports or IP addresses. In this case, simply strip 24 bytes\n(or use the second byte to find the header length) from the received UDP\npayload to get the RTP (RTP header and payload).\n\n```\nSTREP Specification\n\n  0                   1                   2                   3\n  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |1 1|Version|L|D|    HeaderLen  |  reserved (2 bytes)           |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |       reserved (4 bytes, for UDP ports or anything else)      |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |               The call_leg_id                                 |\n |                   from Call Control                           |\n |                       (128 bits / 16 bytes)                   |\n |                           (this is binary data)               |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n 11\n   Static bits 11, always set to 11, so that we humans can easily\n   visually distinguish forked media from RTP (10) and T.38 media (usually 00)\n   and SIP (which begins with a capital letter, so begins with bits 01)\n   This is a magic number.\n\n Version\n   Four bits to indicate the version number of the protocol, starting at 0001.\n\n L\n   One bit to represent the leg of the call (A or B).\n   0 represents the A (first) leg of the call.\n   1 represents the B (second) leg of the call.\n\n D\n   One bit to represent the direction of this RTP stream.\n   0 represents media received by Telnyx.\n   1 represents media transmitted by Telnyx.\n\n HeaderLen (1 byte)\n   The length of the header in bytes.\n   Note that this value does not include the length of the payload. The total\n   size of the RTP can be calculated by subtracting the HeaderLen from the UDP\n   length (minus 8 for the UDP header).\n   In version 1, this value will always be 24.\n\n Reserved (6 bytes)\n   Reserved for future use and to make sure that the header is a multiple of 32 bits\n\n Call Leg ID\n   A 128-bit identifier for the call leg.\n   This is the call_leg_id from Call Control.\n```\n",
        "operationId": "CallControlForkStart",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Fork media request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartForkingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/fork_stop": {
      "post": {
        "summary": "Forking stop",
        "description": "Stop forking a call.\n\n**Expected Webhooks:**\n\nThere are currently no webhooks associated with the Forking start command.\n",
        "operationId": "CallControlForkStop",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Stop forking media request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StopForkingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/gather_using_audio": {
      "post": {
        "summary": "Gather using audio",
        "description": "The gather using audio command enables you to build interactive menus by playing back an audio file on the call until the required DTMF signals are gathered.\nYou can pass a list of valid digits along with an 'invalid_audio_url', which will be played back at the beginning of each prompt.\nPlayback will be interrupted when a DTMF signal is received.\n\n**Expected Webhooks:**\n- [Playback started](/docs/v1/call-control/Call%20Webhooks#playback-started)\n- [Playback ended](/docs/v1/call-control/Call%20Webhooks#playback-ended)\n- [DTMF](/docs/v1/call-control/Call%20Webhooks#dtmf) (you may receive many of these webhooks)\n- [Gather ended](/docs/v1/call-control/Call%20Webhooks#gather-ended)\n",
        "operationId": "CallControlGatherUsingAudio",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Gather using audio request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GatherUsingAudioRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/gather_using_speak": {
      "post": {
        "summary": "Gather using speak",
        "description": "The gather using speak command enables you to build interactive menus by converting text to speech and play it back on the call until the required DTMF signals are gathered.\nYou can pass a list of valid digits along with an 'invalid_payload', which will be played back at the beginning of each prompt.\nSpeech will be interrupted when a DTMF signal is received.\n\n**Expected Webhooks:**\n- [DTMF](/docs/v1/call-control/Call%20Webhooks#dtmf) (you may receive many of these webhooks)\n- [Gather ended](/docs/v1/call-control/Call%20Webhooks#gather-ended)\n",
        "operationId": "CallControlGatherUsingSpeak",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Gather using speak request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GatherUsingSpeakRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/hangup": {
      "post": {
        "summary": "Hangup call",
        "description": "**Expected Webhooks:**\r\n- [Call hangup](/docs/v1/call-control/Call%20Webhooks#call-hangup)\r\n- [Recording saved](/docs/v1/call-control/Call%20Webhooks#recording-saved) (applies only if a call is being recorded)\r\n",
        "operationId": "CallControlHangup",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Hangup request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HangupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/reject": {
      "post": {
        "summary": "Reject call",
        "description": "Reject an incoming call\r\n\r\n**Expected Webhooks:**\r\n- [Call hangup](/docs/v1/call-control/Call%20Webhooks#call-hangup)\r\n",
        "operationId": "CallControlReject",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Reject request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/playback_start": {
      "post": {
        "summary": "Play audio URL",
        "description": "Play an audio file on the call. If multiple play audio commands are consecutively issued,\nthe audio files will be placed in a queue awaiting playback.\n\n\n*Notes:*\n* *when 'overlay' is enabled, 'loop' is limited to 1, and 'target_legs' is limited to 'self'.*\n* *A customer cannot Play Audio with overlay=true unless there is a Play Audio with overlay=false actively playing.*\n\n**Expected Webhooks:**\n- [Playback started](/docs/v1/call-control/Call%20Webhooks#playback-started)\n- [Playback ended](/docs/v1/call-control/Call%20Webhooks#playback-ended)\n",
        "operationId": "CallControlPlaybackStart",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Play audio URL request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayAudioUrlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/playback_stop": {
      "post": {
        "summary": "Stop audio playback",
        "description": "Stops audio being played on the call.\n\n**Expected Webhooks:**\n- Either [Playback ended](/docs/v1/call-control/Call%20Webhooks#playback-ended) or [Speak ended](/docs/v1/call-control/Call%20Webhooks#speak-ended)\n\n\n\n",
        "operationId": "CallControlPlaybackStop",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Stop audio playback request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaybackStopRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/record_start": {
      "post": {
        "summary": "Recording start",
        "description": "Start recording the call. Recording will stop on call hang-up, or can be initiated via the Stop Recording command.\n\n**Expected Webhooks:**\nThere are no webhooks associated with this Command.\n\n",
        "operationId": "CallControlRecordStart",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Start recording audio request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartRecordingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/record_stop": {
      "post": {
        "summary": "Recording stop",
        "description": "Stop recording the call.\n\n**Expected Webhooks:**\n- [Recording saved](/docs/v1/call-control/Call%20Webhooks#recording-saved)\n",
        "operationId": "CallControlRecordStop",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Answer call request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StopRecordingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/send_dtmf": {
      "post": {
        "summary": "Send DTMF",
        "description": "Sends DTMF tones from this leg. DTMF tones will be heard by the other end of the call.\n\n**Expected Webhooks:**\n\nThere are no webhooks associated with this command.\n",
        "operationId": "CallControlSendDTMF",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Send DTMF request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendDTMFRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/speak": {
      "post": {
        "summary": "Speak text",
        "description": "Convert text to speech and play it back on the call.  If multiple speak text commands are issued consecutively, the audio files will be placed in a queue awaiting playback.\n\n**Expected Webhooks:**\n- [Speak started](/docs/v1/call-control/Call%20Webhooks#speak-started)\n- [Speak ended](/docs/v1/call-control/Call%20Webhooks#speak-ended)\n",
        "operationId": "CallControlSpeak",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Speak request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpeakRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/transfer": {
      "post": {
        "summary": "Transfer call",
        "description": "Transfer a call to a new destination. If the transfer is unsuccessful, a 'call_hangup' webhook will be sent indicating that the transfer could not be completed. The original call will remain active and may be issued additional commands, potentially transfering the call to an alternate destination.\n\n**Expected Webhooks:**\n- [Call initiated](docs/v1/call-control/Call%20Webhooks#call-initiated)\n- [Call bridged](docs/v1/call-control/Call%20Webhooks#call-bridged) to Leg B\n- You will receive either a [Call answered](/docs/v1/call-control/Call%20Webhooks#call-answered) webhook or a [Call hangup](/docs/v1/call-control/Call%20Webhooks#call-hangup) webhook.\n",
        "operationId": "CallControlTransfer",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Transfer call request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferCallRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls": {
      "post": {
        "summary": "Dial",
        "description": "Dial a number from a given connection. A successful response will include a `call_leg_id` which can be used to correlate the command with subsequent webhooks.\n\n**Expected Webhooks:**\n\n- [Call initiated](/docs/v1/call-control/Call%20Webhooks#call-initiated)\n- You will receive either a [Call answered](/docs/v1/call-control/Call%20Webhooks#call-answered) webhook or a [Call hangup](/docs/v1/call-control/Call%20Webhooks#call-hangup) webhook.\n\n",
        "operationId": "CallControlDial",
        "tags": [
          "Call Commands"
        ],
        "requestBody": {
          "description": "Dial request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DialRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveCallStatusResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}": {
      "get": {
        "summary": "Retrieve call status",
        "description": "Returns the status of a call.",
        "operationId": "RetrieveCallStatus",
        "tags": [
          "Call Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveCallStatusResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/status": {
      "get": {
        "summary": "Retrieve the call status",
        "description": "Returns the status of a call.",
        "operationId": "CallControlStatus",
        "tags": [
          "Call Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveCallStatusResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/call_events": {
      "get": {
        "summary": "List all call events",
        "description": "Lists all events for a given call.\n\n**Note**: input either a `call_leg_id` or a `call_session_id`. If a request has both, it will only filter by `call_leg_id`.\n",
        "operationId": "CallControlDebuggingEventList",
        "tags": [
          "Debugging"
        ],
        "parameters": [
          {
            "name": "filter[call_leg_id]",
            "in": "query",
            "description": "The unique identifier of an individual call leg.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter[call_session_id]",
            "in": "query",
            "description": "The unique identifier of the call control session. A session may include multiple call leg events.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListCallEventsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/conferences": {
      "post": {
        "summary": "Create Conference",
        "description": "Creates a conference from an existing call leg using a call_control_id and a conference name. Upon creating the conference, the call will be automatically bridged to the conference.",
        "operationId": "CreateConference",
        "tags": [
          "Conference Commands"
        ],
        "requestBody": {
          "description": "Create a conference",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConferenceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateConferenceResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "get": {
        "description": "Lists conferences. Conferences are created on demand, and will expire after all participants have left the conference or after 4 hours regardless of the number of active participants.",
        "summary": "List all conferences",
        "operationId": "GetConferences",
        "tags": [
          "Conference Commands"
        ],
        "parameters": [
          {
            "name": "filter[name]",
            "in": "query",
            "description": "If present, conferences will be filtered to those with a matching `name` attribute. Matching is case-sensitive",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListConferencesResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/conferences/{id}/actions/join": {
      "post": {
        "summary": "Join a conference",
        "description": "Joins an existing call_leg to a conference. Issue the Join Conference command with the conference ID in the path and the call_control_id of the leg you wish to join to the conference as an attribute.",
        "operationId": "JoinConference",
        "tags": [
          "Conference Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ConferenceId"
          }
        ],
        "requestBody": {
          "description": "Join Conference object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinConferenceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConferenceCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/conferences/{id}/actions/mute": {
      "post": {
        "summary": "Mute a conference participant",
        "description": "Mute a list of participants in a conference call",
        "operationId": "MuteConference",
        "tags": [
          "Conference Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ConferenceId"
          }
        ],
        "requestBody": {
          "description": "Mute participants Conference object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConferenceMuteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConferenceCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/conferences/{id}/actions/unmute": {
      "post": {
        "summary": "Unmute a conference participant",
        "description": "Unmute a list of participants in a conference call",
        "operationId": "UnmuteConference",
        "tags": [
          "Conference Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ConferenceId"
          }
        ],
        "requestBody": {
          "description": "Unute participants Conference object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConferenceMuteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConferenceCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/conferences/{id}/actions/hold": {
      "post": {
        "summary": "Hold a conference participant",
        "description": "Hold a list of participants in a conference call",
        "operationId": "HoldConference",
        "tags": [
          "Conference Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ConferenceId"
          }
        ],
        "requestBody": {
          "description": "Hold participants Conference object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConferenceHoldRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConferenceCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/conferences/{id}/actions/unhold": {
      "post": {
        "summary": "Unhold a conference participant",
        "description": "Unhold a list of participants in a conference call",
        "operationId": "UnholdConference",
        "tags": [
          "Conference Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ConferenceId"
          }
        ],
        "requestBody": {
          "description": "Hold participants Conference object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConferenceHoldRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConferenceCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "PaginationMeta": {
        "properties": {
          "total_pages": {
            "type": "integer",
            "example": 3
          },
          "total_results": {
            "type": "integer",
            "example": 55
          },
          "page_number": {
            "type": "integer",
            "example": 2
          },
          "page_size": {
            "type": "integer",
            "example": 25
          },
          "next_page_token": {
            "type": "string"
          }
        }
      },
      "NumberOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The id of the number order",
            "example": "12ade33a-21c0-473b-b055-b3c836e1c292"
          },
          "record_type": {
            "type": "string",
            "example": "number_order"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            }
          },
          "phone_numbers_count": {
            "type": "integer",
            "description": "The count of phone numbers in the number order",
            "example": 1
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failure"
            ],
            "description": "The status of the order."
          },
          "customer_reference": {
            "type": "string",
            "example": "MY REF 001",
            "description": "A customer reference string for customer look ups"
          },
          "connection_id": {
            "type": "string",
            "example": "442191469269222625",
            "description": "The connection id to set the number to upon acquiring the number"
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "example": "730911e3-8488-40a8-a818-dc0a5df8bc03",
            "description": "The messaging profile id to set the number to upon acquiring the number"
          },
          "webhook_url": {
            "type": "string",
            "format": "url",
            "example": "https://webhook.test",
            "description": "A webhook url for number order status updates"
          },
          "webhook_failover_url": {
            "type": "string",
            "format": "url",
            "example": "https://webhook-failover.test",
            "description": "If above webhook url fails, this url will be used as a fail over"
          },
          "created_at": {
            "type": "string",
            "format": "datetime",
            "example": "2018-01-01T00:00:00.000000Z",
            "description": "A datetime string denoting when the number order was created"
          },
          "updated_at": {
            "type": "string",
            "format": "datetime",
            "example": "2018-01-01T00:00:00.000000Z",
            "description": "A datetime string for when the number order was updated"
          },
          "requirements_met": {
            "type": "boolean",
            "description": "True if all requirements are met for every phone number, false otherwise"
          }
        },
        "example": {
          "id": "12ade33a-21c0-473b-b055-b3c836e1c292",
          "record_type": "number_order",
          "phone_numbers_count": 1,
          "status": "pending",
          "customer_reference": "MY REF 001",
          "connection_id": "442191469269222625",
          "messaging_profile_id": "730911e3-8488-40a8-a818-dc0a5df8bc03",
          "webhook_url": "https://webhook.test",
          "webhook_failover_url": "https://webhook-failover.test",
          "created_at": "2018-01-01T00:00:00.000000Z",
          "updated_at": "2018-01-01T00:00:00.000000Z",
          "requirements_met": true
        }
      },
      "NumberOrderDetailed": {
        "type": "array",
        "$ref": "#/components/schemas/NumberOrder",
        "example": {
          "id": "12ade33a-21c0-473b-b055-b3c836e1c292",
          "record_type": "number_order",
          "phone_numbers_count": 1,
          "status": "pending",
          "customer_reference": "MY REF 001",
          "connection_id": "442191469269222625",
          "messaging_profile_id": "730911e3-8488-40a8-a818-dc0a5df8bc03",
          "webhook_url": "https://webhook.test",
          "webhook_failover_url": "https://webhook-failover.test",
          "created_at": "2018-01-01T00:00:00.000000Z",
          "updated_at": "2018-01-01T00:00:00.000000Z",
          "requirements_met": true,
          "phone_numbers": [
            {
              "regulatory_requirements": [],
              "requirements_met": true,
              "status": "success",
              "id": "621415a0-7035-42d1-bfba-0b16e43d79ed",
              "phone_number": "+13127000000",
              "record_type": "number_order_phone_number"
            },
            {
              "regulatory_requirements": [],
              "requirements_met": true,
              "status": "success",
              "id": "27be8dfc-7cc9-4541-a148-1b0185c4aa3f",
              "phone_number": "+13127000099",
              "record_type": "number_order_phone_number"
            }
          ]
        }
      },
      "NumberReservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The id of the number reservation",
            "example": "f7964e2b-a9f9-4eb6-ab16-e570ffc4bc83"
          },
          "record_type": {
            "type": "string",
            "example": "phone_number_reservation"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservedPhoneNumber"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failure"
            ],
            "description": "The status of the entire reservation"
          },
          "customer_reference": {
            "type": "string",
            "example": "MY REF 001",
            "description": "A customer reference string for customer look ups"
          },
          "created_at": {
            "type": "string",
            "format": "datetime",
            "example": "2018-01-01T00:00:00.000000Z",
            "description": "A datetime string denoting when the numbers reservation was created"
          },
          "updated_at": {
            "type": "string",
            "format": "datetime",
            "example": "2018-01-01T00:00:00.000000Z",
            "description": "A datetime string for when the number reservation was updated"
          }
        },
        "example": {
          "status": "pending",
          "created_at": "2019-06-06T17:10:37.984311Z",
          "phone_numbers": [
            {
              "expired_at": "2019-06-04T17:10:37.887000Z",
              "status": "failure",
              "phone_number": "+13122076000",
              "expired": true,
              "updated_at": "2019-06-11T19:40:01.190425Z",
              "id": "4d731178-a0e1-4145-bddd-0265120123b8",
              "created_at": "2019-06-06T17:10:37.984311Z",
              "record_type": "reserved_phone_number"
            }
          ],
          "customer_reference": "CUSTOMER_REF_1",
          "updated_at": "2019-06-06T17:10:37.984311Z",
          "user_id": "1a8752a5-63e8-4c16-9655-d2c515f42aed",
          "id": "f7964e2b-a9f9-4eb6-ab16-e570ffc4bc83",
          "record_type": "number_reservation"
        }
      },
      "ReservedPhoneNumber": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "f7964e2b-a9f9-4eb6-ab16-e570ffc4bc83"
          },
          "record_type": {
            "type": "string",
            "example": "reserved_phone_number"
          },
          "phone_number": {
            "type": "string",
            "format": "e164_phone_number",
            "example": "+13125000000"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failure"
            ],
            "description": "The status of the phone number's reservation"
          },
          "created_at": {
            "type": "string",
            "format": "datetime",
            "example": "2018-01-01T00:00:00.000000Z",
            "description": "A datetime string denoting when the individual number reservation was created"
          },
          "updated_at": {
            "type": "string",
            "format": "datetime",
            "example": "2018-01-01T00:00:00.000000Z",
            "description": "A datetime string for when the the individual number reservation was updated"
          },
          "expired_at": {
            "type": "string",
            "format": "datetime",
            "example": "2018-01-01T00:00:00.000000Z",
            "description": "A datetime string for when the individual number reservation is going to expire"
          }
        }
      },
      "NumberReservationDetailed": {
        "type": "array",
        "$ref": "#/components/schemas/NumberReservation",
        "example": {
          "id": "122644a6-aa12-4832-b353-7a88e89722fd",
          "created_at": "2019-06-06T22:32:45.075437Z",
          "customer_reference": "CUSTOMER_REF_1",
          "updated_at": "2019-06-06T22:32:51.299616Z",
          "status": "success",
          "phone_numbers": [
            {
              "expired_at": "2019-06-11T22:32:45.056436Z",
              "id": "e39ba25a-1fb2-44e2-8b07-543853ac9c29",
              "created_at": "2019-06-06T22:32:45.075437Z",
              "updated_at": "2019-06-06T22:32:51.303978Z",
              "expired": false,
              "phone_number": "+13122708609",
              "status": "success",
              "record_type": "reserved_phone_number"
            }
          ],
          "user_id": "22083c08-4e1f-4e25-be08-3e0f51f581dc",
          "record_type": "number_reservation"
        }
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494",
            "description": "The id of the number order phone number"
          },
          "record_type": {
            "type": "string",
            "example": "number_order_phone_number"
          },
          "phone_number": {
            "type": "string",
            "format": "e164_phone_number"
          },
          "regulatory_group_id": {
            "type": "string",
            "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494"
          },
          "regulatory_requirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumberRegulatoryRequirement"
            }
          },
          "requirements_met": {
            "type": "boolean",
            "description": "True if all requirements are met for a phone number, false otherwise."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failure"
            ],
            "description": "The status of the phone number in the order."
          }
        }
      },
      "NumberOrderDocument": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "387d1e31-a218-4375-8151-103f2d5e2d2c",
            "description": "The id of the number order document"
          },
          "record_type": {
            "type": "string",
            "example": "number_order_document"
          },
          "file_id": {
            "type": "string",
            "example": "1e3c5822-0362-4702-8e46-5a129f0d3976",
            "description": "The id of the file to associate as a number order document."
          },
          "requirement_id": {
            "type": "string",
            "description": "unique id for a requirement."
          },
          "customer_reference": {
            "type": "string",
            "description": "human readable description of the file."
          },
          "requirement_type": {
            "type": "string",
            "enum": [
              "identification",
              "reg_form",
              "address_proof"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "datetime",
            "description": "A datetime string denoting when the number order document was uploaded"
          }
        }
      },
      "PhoneNumberRegulatoryRequirement": {
        "type": "object",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "phone_number_regulatory_requirement"
          },
          "requirement_id": {
            "type": "string",
            "format": "uuid",
            "example": "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576",
            "description": "unique id for a requirement."
          },
          "field_value": {
            "type": "string",
            "description": "The value of the requirement, this could be an id to a resource or a string value."
          },
          "field_type": {
            "type": "string",
            "enum": [
              "string",
              "datetime",
              "address_id",
              "number_order_document_id"
            ],
            "example": "address_id"
          }
        }
      },
      "RegulatoryRequirement": {
        "type": "object",
        "properties": {
          "requirement_id": {
            "type": "string",
            "format": "uuid",
            "example": "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576",
            "description": "unique id for a requirement."
          },
          "record_type": {
            "type": "string",
            "example": "regulatory_requirement"
          },
          "label": {
            "type": "string",
            "example": "Proof of Address"
          },
          "field_type": {
            "type": "string",
            "enum": [
              "string",
              "datetime",
              "address_id",
              "number_order_document_id"
            ],
            "example": "address_id"
          },
          "description": {
            "type": "string",
            "example": "A bill or whatever that is less than 6 months old."
          }
        }
      },
      "PhoneNumberRegulatoryGroup": {
        "type": "object",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "phone_number_regulatory_group"
          },
          "phone_number": {
            "type": "string"
          },
          "regulatory_group_id": {
            "type": "string",
            "format": "uuid",
            "example": "d70873cd-7c98-401a-81b6-b1ae08246995"
          },
          "regulatory_requirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegulatoryRequirement"
            }
          }
        }
      },
      "RegulatoryRequirementCriteria": {
        "type": "object",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "phone_number_regulatory_requirement_criteria"
          },
          "criteria_type": {
            "type": "string",
            "enum": [
              "country",
              "phone_number_type"
            ]
          },
          "criteria_value": {
            "type": "string",
            "example": "AU"
          }
        }
      },
      "Metadata": {
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer"
          },
          "page_size": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_results": {
            "type": "integer"
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "title"
        ],
        "properties": {
          "code": {
            "type": "string",
            "format": "int"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "source": {
            "type": "object",
            "properties": {
              "pointer": {
                "description": "JSON pointer (RFC6901) to the offending entity",
                "type": "string",
                "format": "json-pointer"
              },
              "parameter": {
                "description": "Indicates which query parameter caused the error",
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object"
          }
        }
      },
      "Errors": {
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "MessagingFeatureSet": {
        "type": "object",
        "nullable": true,
        "default": null,
        "required": [
          "domestic_two_way",
          "international_inbound",
          "international_outbound"
        ],
        "description": "The set of features available for a specific messaging use case (SMS or MMS). Features\ncan vary depending on the characteristics the phone number, as well as its current\nproduct configuration.\n",
        "properties": {
          "domestic_two_way": {
            "type": "boolean",
            "description": "Send messages to and receive messages from numbers in the same country."
          },
          "international_inbound": {
            "type": "boolean",
            "description": "Receive messages from numbers in other countries."
          },
          "international_outbound": {
            "type": "boolean",
            "description": "Send messages to numbers in other countries."
          }
        }
      },
      "NumberPoolSettings": {
        "type": "object",
        "default": null,
        "required": [
          "toll_free_weight",
          "long_code_weight",
          "skip_unhealthy",
          "geomatch"
        ],
        "description": "Number Pool allows you to send messages from a pool of numbers of different types, assigning\nweights to each type.\nThe pool consists of all the Long Code and Toll Free numbers assigned\nto the Messaging profile.\n",
        "properties": {
          "toll_free_weight": {
            "type": "number",
            "example": 10.0,
            "description": "Defines the probability weight for a Toll Free number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100. Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
          },
          "long_code_weight": {
            "type": "number",
            "example": 1.0,
            "description": "Defines the probability weight for a Long Code number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100.  Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
          },
          "skip_unhealthy": {
            "type": "boolean",
            "example": true,
            "description": "If set to true all unhealthy numbers will be automatically removed from the pool.\nHealth metrics  per number are calculated on a regular basis, taking into account the deliverability\nrate and the amount of messages marked as spam by upstream carriers.\nNumbers with a deliverability rate below 25% or spam ratio over 75% will be considered unhealthy.\n"
          },
          "sticky_sender": {
            "type": "boolean",
            "example": true,
            "description": "If set to true, Number Pool will try to choose the same sending number for all messages to a particular\nrecipient. If the sending number becomes unhealthy and `skip_unhealthy` is set to `true`, a new\nnumber will be chosen.\n"
          },
          "geomatch": {
            "type": "boolean",
            "example": true,
            "description": "If set to true, Number Pool will try to choose a sending number with the same area code as the destination\nnumber. If there are no such numbers available, a nunber with a different area code will be chosen. Currently\nonly NANP numbers are supported.\n"
          }
        }
      },
      "ShortCodeInfo": {
        "description": "This information is attached to messages that are sent from short codes. It includes carrier information, which can influence billing.",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "short_code_info_blob",
            "enum": [
              "short_code_info_blob"
            ],
            "description": "Identifies the type of the resource."
          },
          "om_carrier": {
            "type": "string"
          },
          "om_normalized_carrier": {
            "type": "string"
          }
        }
      },
      "AlphanumericSenderIdInfo": {
        "description": "This information is attached to messages that are sent from alphanumeric sender IDs.",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "alphanumeric_sender_id_info_blob",
            "enum": [
              "alphanumeric_sender_id_info_blob"
            ],
            "description": "Identifies the type of the resource."
          },
          "hni": {
            "description": "HNI (Home Network Identity) of the recipient's phone.",
            "type": "string"
          }
        }
      },
      "NewMessagingProfile": {
        "properties": {
          "name": {
            "type": "string",
            "description": "A user friendly name for the messaging profile."
          },
          "webhook_url": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "default": null,
            "description": "The URL where webhooks related to this messaging profile will be sent."
          },
          "webhook_failover_url": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "default": null,
            "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails."
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Whether the messaging profile is enabled or not."
          },
          "webhook_api_version": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "default": "2",
            "description": "Determines which webhook format will be used, API V1 or API V2."
          },
          "number_pool_settings": {
            "$ref": "#/components/schemas/NumberPoolSettings"
          }
        }
      },
      "MessagingProfile": {
        "type": "object",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "messaging_profile",
            "enum": [
              "messaging_profile"
            ],
            "description": "Identifies the type of the resource."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object."
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the organization that owns the resource."
          },
          "name": {
            "description": "A user friendly name for the messaging profile",
            "type": "string",
            "format": "string"
          },
          "webhook_url": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "description": "The URL where webhooks related to this messaging profile will be sent."
          },
          "webhook_failover_url": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails."
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies whether the messaging profile is enabled or not."
          },
          "whitelisted_destinations": {
            "type": "array",
            "description": "Destinations to which the messaging profile is allowed to send.",
            "items": {
              "type": "string",
              "description": "ISO 3166-1 alpha-2 country code.",
              "pattern": "^(([A-Z]{2}))$"
            }
          },
          "webhook_api_version": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "description": "Determines which webhook format will be used, API V1 or API V2."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          },
          "number_pool_settings": {
            "$ref": "#/components/schemas/NumberPoolSettings"
          }
        },
        "example": {
          "record_type": "messaging_profile",
          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "name": "Profile for Messages",
          "webhook_url": null,
          "webhook_failover_url": null,
          "enabled": true,
          "whitelisted_destinations": [
            "US"
          ],
          "webhook_api_version": "2",
          "created_at": "2019-01-23T18:10:02.574Z",
          "updated_at": "2019-01-23T18:10:02.574Z"
        }
      },
      "MessagingProfileUpdate": {
        "properties": {
          "name": {
            "description": "A user friendly name for the messaging profile",
            "type": "string",
            "format": "string"
          },
          "webhook_url": {
            "description": "The URL where webhooks related to this messaging profile will be sent.",
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "webhook_failover_url": {
            "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.",
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "enabled": {
            "description": "Specifies whether the messaging profile is enabled or not.",
            "type": "boolean"
          },
          "whitelisted_destinations": {
            "type": "array",
            "description": "Destinations to which the messaging profile is allowed to send.",
            "items": {
              "type": "string",
              "description": "ISO 3166-1 alpha-2 country code.",
              "pattern": "^(([A-Z]{2}))$"
            }
          },
          "webhook_api_version": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "description": "Determines which webhook format will be used, API V1 or API V2."
          },
          "number_pool_settings": {
            "$ref": "#/components/schemas/NumberPoolSettings"
          }
        }
      },
      "MessagingPhoneNumber": {
        "type": "object",
        "example": {
          "record_type": "messaging_phone_number",
          "phone_number": "+18005550001",
          "id": "+18665550001",
          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "created_at": "2019-01-23T18:10:02.574Z",
          "updated_at": "2019-01-23T18:10:02.574Z",
          "type": "toll-free",
          "country_code": "US",
          "traffic_type": "P2P",
          "messaging_product": "P2P"
        },
        "properties": {
          "record_type": {
            "type": "string",
            "example": "messaging_phone_number",
            "enum": [
              "messaging_phone_number"
            ],
            "description": "Identifies the type of the resource."
          },
          "phone_number": {
            "type": "string",
            "format": "e164",
            "description": "+E.164 formatted phone number."
          },
          "id": {
            "type": "string",
            "description": "Uniquely identifies the resource or object."
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the organization that owns the resource."
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Unique identifier for a messaging profile."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          },
          "type": {
            "type": "string",
            "description": "The type of the phone number",
            "enum": [
              "long-code",
              "toll-free",
              "short-code"
            ]
          },
          "country_code": {
            "type": "string",
            "description": "ISO 3166-1 alpha-2 country code.",
            "pattern": "^(([A-Z]{2}))$",
            "example": "US"
          },
          "traffic_type": {
            "type": "string",
            "description": "The messaging traffic or use case for which the number is currently configured.",
            "example": "P2P"
          },
          "messaging_product": {
            "type": "string",
            "description": "The messaging product that the number is registered to use",
            "example": "P2P"
          },
          "eligible_messaging_products": {
            "type": "array",
            "description": "The messaging products that this number can be registered to use",
            "items": {
              "type": "string"
            }
          },
          "features": {
            "type": "object",
            "properties": {
              "sms": {
                "$ref": "#/components/schemas/MessagingFeatureSet"
              },
              "mms": {
                "$ref": "#/components/schemas/MessagingFeatureSet"
              }
            }
          }
        }
      },
      "MessagingPhoneNumberListElement": {
        "type": "object",
        "example": {
          "record_type": "messaging_phone_number",
          "phone_number": "+18005550001",
          "id": "+18665550001",
          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "created_at": "2019-01-23T18:10:02.574Z",
          "updated_at": "2019-01-23T18:10:02.574Z",
          "type": "toll-free",
          "country_code": "US"
        },
        "properties": {
          "record_type": {
            "type": "string",
            "example": "messaging_phone_number",
            "enum": [
              "messaging_phone_number"
            ],
            "description": "Identifies the type of the resource."
          },
          "phone_number": {
            "type": "string",
            "format": "e164",
            "description": "+E.164 formatted phone number."
          },
          "id": {
            "type": "string",
            "description": "Uniquely identifies the resource or object."
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the organization that owns the resource."
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Unique identifier for a messaging profile."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          },
          "type": {
            "type": "string",
            "description": "The type of the phone number",
            "enum": [
              "long-code",
              "toll-free",
              "short-code"
            ]
          },
          "country_code": {
            "type": "string",
            "description": "ISO 3166-1 alpha-2 country code.",
            "pattern": "^(([A-Z]{2}))$",
            "example": "US"
          }
        }
      },
      "MessagingPhoneNumberUpdate": {
        "type": "object",
        "properties": {
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Unique identifier for a messaging profile."
          },
          "messaging_product": {
            "type": "string",
            "description": "The requested messaging product the number should be on",
            "nullable": true,
            "example": "P2P"
          }
        }
      },
      "ShortCode": {
        "type": "object",
        "example": {
          "record_type": "short_code",
          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "short_code": "12345",
          "country_code": "US",
          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "created_at": "2019-01-23T18:10:02.574Z",
          "updated_at": "2019-01-23T18:10:02.574Z"
        },
        "properties": {
          "record_type": {
            "type": "string",
            "example": "short_code",
            "enum": [
              "short_code"
            ],
            "description": "Identifies the type of the resource."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object."
          },
          "short_code": {
            "type": "string",
            "description": "Short digit sequence used to address messages."
          },
          "country_code": {
            "type": "string",
            "description": "ISO 3166-1 alpha-2 country code.",
            "pattern": "^(([A-Z]{2}))$",
            "example": "US"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the organization that owns the resource."
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Unique identifier for a messaging profile."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          }
        }
      },
      "ShortCodeUpdate": {
        "type": "object",
        "properties": {
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Unique identifier for a messaging profile."
          }
        }
      },
      "NewAlphanumericSenderId": {
        "type": "object",
        "properties": {
          "alphanumeric_sender_id": {
            "type": "string",
            "description": "Alphanumeric sender ID."
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a messaging profile."
          }
        }
      },
      "AlphanumericSenderId": {
        "type": "object",
        "example": {
          "record_type": "alphanumeric_sender_id",
          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "alphanumeric_sender_id": "TelnyxID",
          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "created_at": "2019-01-23T18:10:02.574Z",
          "updated_at": "2019-01-23T18:10:02.574Z"
        },
        "properties": {
          "record_type": {
            "type": "string",
            "example": "alphanumeric_sender_id",
            "enum": [
              "alphanumeric_sender_id"
            ],
            "description": "Identifies the type of the resource."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object."
          },
          "alphanumeric_sender_id": {
            "type": "string",
            "description": "Alphanumeric sender ID."
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the organization that owns the resource."
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a messaging profile."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          }
        }
      },
      "NewMessage": {
        "type": "object",
        "required": [
          "to"
        ],
        "properties": {
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a messaging profile."
          },
          "from": {
            "type": "string",
            "format": "address",
            "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)"
          },
          "to": {
            "oneOf": [
              {
                "type": "string",
                "format": "address",
                "description": "Receiving address (+E.164 formatted phone number)"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "address",
                  "description": "Receiving address (+E.164 formatted phone number)"
                }
              }
            ]
          },
          "text": {
            "type": "string",
            "description": "Message body (i.e., content) as a non-empty string"
          },
          "subject": {
            "type": "string",
            "description": "Subject of multimedia message"
          },
          "media_urls": {
            "description": "A list of media URLs. The total media size must be less than 1 MB.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "url"
            }
          },
          "webhook_url": {
            "description": "The URL where webhooks related to this message will be sent.",
            "type": "string",
            "format": "url"
          },
          "webhook_failover_url": {
            "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.",
            "type": "string",
            "format": "url"
          },
          "use_profile_webhooks": {
            "type": "boolean",
            "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile.",
            "default": true
          },
          "validity_period_secs": {
            "type": "number",
            "description": "If the message is not pulled off the queue and sending attempted within this amount of time, sending will be aborted and the message will be marked as expired."
          },
          "ignore_wire_type": {
            "type": "boolean",
            "description": "Typically, if the LRN dip indicates that the phone number is a land-line, the request will be rejected. However, some landlines can receive SMS, so that behavior can be overridden by setting this value to `true`"
          }
        }
      },
      "NewAlphanumericSenderIdMessage": {
        "type": "object",
        "required": [
          "from",
          "to",
          "messaging_profile_id"
        ],
        "properties": {
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a messaging profile."
          },
          "from": {
            "type": "string",
            "format": "address",
            "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)"
          },
          "to": {
            "oneOf": [
              {
                "type": "string",
                "format": "address",
                "description": "Receiving address (+E.164 formatted phone number)"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "address",
                  "description": "Receiving address (+E.164 formatted phone number)"
                }
              }
            ]
          },
          "text": {
            "type": "string",
            "description": "Message body (i.e., content) as a non-empty string"
          },
          "webhook_url": {
            "description": "The URL where webhooks related to this message will be sent.",
            "type": "string",
            "format": "url"
          },
          "webhook_failover_url": {
            "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.",
            "type": "string",
            "format": "url"
          },
          "use_profile_webhooks": {
            "type": "boolean",
            "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile.",
            "default": true
          },
          "validity_period_secs": {
            "type": "number",
            "description": "If the message is not pulled off the queue and sending attempted within this amount of time, sending will be aborted and the message will be marked as expired."
          },
          "ignore_wire_type": {
            "type": "boolean",
            "description": "Typically, if the LRN dip indicates that the phone number is a land-line, the request will be rejected. However, some landlines can receive SMS, so that behavior can be overridden by setting this value to `true`"
          }
        }
      },
      "NewNumberPoolMessage": {
        "type": "object",
        "required": [
          "to",
          "messaging_profile_id"
        ],
        "properties": {
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a messaging profile."
          },
          "to": {
            "oneOf": [
              {
                "type": "string",
                "format": "address",
                "description": "Receiving address (+E.164 formatted phone number)"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "address",
                  "description": "Receiving address (+E.164 formatted phone number)"
                }
              }
            ]
          },
          "text": {
            "type": "string",
            "description": "Message body (i.e., content) as a non-empty string"
          },
          "subject": {
            "type": "string",
            "description": "Subject of multimedia message"
          },
          "media_urls": {
            "description": "A list of media URLs. The total media size must be less than 1 MB.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "url"
            }
          },
          "webhook_url": {
            "description": "The URL where webhooks related to this message will be sent.",
            "type": "string",
            "format": "url"
          },
          "webhook_failover_url": {
            "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.",
            "type": "string",
            "format": "url"
          },
          "use_profile_webhooks": {
            "type": "boolean",
            "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile.",
            "default": true
          },
          "validity_period_secs": {
            "type": "number",
            "description": "If the message is not pulled off the queue and sending attempted within this amount of time, sending will be aborted and the message will be marked as expired."
          },
          "ignore_wire_type": {
            "type": "boolean",
            "description": "Typically, if the LRN dip indicates that the phone number is a land-line, the request will be rejected. However, some landlines can receive SMS, so that behavior can be overridden by setting this value to `true`"
          }
        }
      },
      "MessageQueueInfo": {
        "type": "object",
        "properties": {
          "queue_lengths": {
            "description": "Approximate lengths of the user's queues",
            "type": "object",
            "properties": {
              "account": {
                "type": "integer",
                "description": "Length of the account queue."
              },
              "messaging_profile": {
                "type": "integer",
                "description": "Length of the messaging profile queue."
              },
              "phone_number": {
                "type": "integer",
                "description": "Length of the phone number queue."
              }
            }
          }
        }
      },
      "OutboundMessage": {
        "type": "object",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "message",
            "enum": [
              "message"
            ],
            "description": "Identifies the type of the resource."
          },
          "direction": {
            "type": "string",
            "example": "outbound",
            "enum": [
              "outbound"
            ],
            "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object."
          },
          "type": {
            "type": "string",
            "enum": [
              "sms",
              "mms"
            ],
            "description": "The type of message. This value can be either 'sms' or 'mms'."
          },
          "from": {
            "type": "string",
            "format": "address",
            "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)"
          },
          "to": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "format": "address"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "queued",
                    "sending",
                    "sent",
                    "delivered",
                    "sending_failed",
                    "delivery_failed",
                    "delivery_unconfirmed"
                  ]
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "ISO 8601 formatted date indicating when the resource was updated."
                }
              }
            }
          },
          "text": {
            "type": "string",
            "description": "Message body (i.e., content) as a non-empty string"
          },
          "media": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "url"
                },
                "content_type": {
                  "type": "string",
                  "format": "mime-type",
                  "nullable": true
                }
              }
            }
          },
          "webhook_url": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "description": "The URL where webhooks related to this message will be sent."
          },
          "webhook_failover_url": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails."
          },
          "use_profile_webhooks": {
            "type": "boolean",
            "default": false,
            "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
          },
          "cost": {
            "type": "object",
            "nullable": true,
            "properties": {
              "amount": {
                "type": "string",
                "format": "decimal",
                "description": "The amount deducted from your account."
              },
              "currency": {
                "type": "string",
                "format": "iso4217",
                "description": "The ISO 4217 currency identifier."
              }
            }
          },
          "parts": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10,
            "description": "Number of parts into which the message's body must be split."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          },
          "valid_until": {
            "type": "string",
            "description": "Message must be out of the queue by this time or else it will be discarded and marked as 'sending_failed'. Once the message moves out of the queue, this field will be nulled",
            "format": "date-time",
            "nullable": true
          },
          "info_blob_fieldname": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShortCodeInfo"
              },
              {
                "$ref": "#/components/schemas/AlphanumericSenderIdInfo"
              }
            ]
          },
          "errors": {
            "type": "array",
            "description": "These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "carrier": {
            "type": "string",
            "nullable": true,
            "description": "The carrier of the receiver."
          },
          "line_type": {
            "type": "string",
            "enum": [
              "Wireline",
              "Wireless",
              "VoWiFi",
              "VoIP",
              "Pre-Paid Wireless"
            ],
            "nullable": true,
            "description": "The line-type of the receiver."
          }
        },
        "example": {
          "record_type": "message",
          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "direction": "outbound",
          "type": "sms",
          "from": "+18445550001",
          "to": [
            {
              "address": "+18665550001",
              "status": "queued",
              "updated_at": "2019-01-23T18:10:02.574Z"
            }
          ],
          "text": "Hello, World!",
          "webhook_url": "https://www.example.com/hooks",
          "webhook_failover_url": "https://www.example.com/callbacks",
          "use_profile_webhooks": false,
          "cost": {
            "amount": "1.23",
            "currency": "USD"
          },
          "parts": 1,
          "created_at": "2019-01-23T18:10:02.574Z",
          "updated_at": "2019-01-23T18:10:02.574Z",
          "valid_until": "2019-01-23T18:10:02.574Z",
          "errors": [],
          "carrier": "Verizon",
          "line_type": "Wireless"
        }
      },
      "OutboundMessageEvent": {
        "properties": {
          "record_type": {
            "type": "string",
            "example": "event",
            "enum": [
              "event"
            ],
            "description": "Identifies the type of the resource."
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "event_type": {
            "type": "string",
            "example": "message.delivery_update"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "payload": {
            "$ref": "#/components/schemas/OutboundMessage"
          }
        }
      },
      "InboundMessage": {
        "properties": {
          "record_type": {
            "type": "string",
            "example": "message",
            "enum": [
              "message"
            ],
            "description": "Identifies the type of the resource."
          },
          "direction": {
            "type": "string",
            "example": "inbound",
            "enum": [
              "inbound"
            ],
            "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object."
          },
          "type": {
            "type": "string",
            "enum": [
              "sms",
              "mms"
            ],
            "description": "The type of message. This value can be either 'sms' or 'mms'."
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a messaging profile."
          },
          "from": {
            "type": "string",
            "format": "address",
            "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)"
          },
          "to": {
            "type": "string",
            "format": "address",
            "description": "Receiving address (+E.164 formatted phone number)"
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "address"
            }
          },
          "text": {
            "type": "string",
            "description": "Message body (i.e., content) as a non-empty string"
          },
          "media": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "url"
                },
                "content_type": {
                  "type": "string",
                  "format": "mime-type"
                },
                "size": {
                  "type": "integer"
                },
                "hash_sha256": {
                  "type": "string",
                  "minLength": 32,
                  "maxLength": 32
                }
              }
            }
          },
          "cost": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "format": "decimal",
                "description": "The amount deducted from your account."
              },
              "currency": {
                "type": "string",
                "format": "iso4217",
                "description": "The ISO 4217 currency identifier."
              }
            }
          },
          "parts": {
            "type": "integer",
            "example": 1,
            "description": "The ISO 4217 currency identifier."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          },
          "carrier": {
            "type": "string",
            "nullable": true,
            "description": "The carrier of the sender."
          },
          "line_type": {
            "type": "string",
            "enum": [
              "Wireline",
              "Wireless",
              "VoWiFi",
              "VoIP",
              "Pre-Paid Wireless"
            ],
            "nullable": true,
            "description": "The line-type of the sender."
          }
        }
      },
      "InboundMessageEvent": {
        "type": "object",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "event",
            "enum": [
              "event"
            ],
            "description": "Identifies the type of the resource."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object."
          },
          "event_type": {
            "type": "string",
            "example": "message.received",
            "enum": [
              "message.received"
            ],
            "description": "The type of event being delivered."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "payload": {
            "$ref": "#/components/schemas/InboundMessage"
          }
        }
      },
      "RegionInformation": {
        "properties": {
          "region_type": {
            "type": "string",
            "example": "country_code",
            "enum": [
              "country_code",
              "rate_center",
              "state",
              "location"
            ]
          },
          "region_name": {
            "type": "string",
            "example": "US"
          }
        }
      },
      "CostInformation": {
        "type": "object",
        "properties": {
          "upfront_cost": {
            "type": "string",
            "example": "3.21"
          },
          "monthly_cost": {
            "type": "string",
            "example": "6.54"
          },
          "currency": {
            "type": "string",
            "description": "The ISO 4217 code for the currency",
            "example": "USD"
          }
        }
      },
      "AvailablePhoneNumber": {
        "type": "object",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "available_phone_number",
            "enum": [
              "available_phone_number"
            ]
          },
          "phone_number": {
            "type": "string",
            "example": "+17735035030"
          },
          "vanity_format": {
            "type": "string"
          },
          "best_effort": {
            "type": "boolean",
            "example": false
          },
          "region_information": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionInformation"
            }
          },
          "cost_information": {
            "$ref": "#/components/schemas/CostInformation"
          },
          "regulatory_requirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegulatoryRequirement"
            }
          }
        },
        "example": {
          "record_type": "available_phone_number",
          "phone_number": "+17735035030",
          "vanity_format": "",
          "best_effort": false,
          "region_information": [
            {
              "region_type": "country_code",
              "region_name": "US"
            }
          ],
          "cost_information": {
            "upfront_cost": "3.21",
            "monthly_cost": "6.54",
            "currency": "USD"
          }
        }
      },
      "AvailablePhoneNumbersMetadata": {
        "type": "object",
        "example": {
          "total_results": 100,
          "best_effort_results": 50
        },
        "properties": {
          "total_results": {
            "type": "integer",
            "example": 1
          },
          "best_effort_results": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "PublicKey": {
        "type": "object",
        "description": "Public key used to verify webhooks",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "public_key",
            "enum": [
              "public_key"
            ]
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "public": {
            "type": "string",
            "description": "The public key for the private key used to sign webhooks associated with your organization."
          }
        },
        "example": {
          "record_type": "public_key",
          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "public": "-----BEGIN RSA PUBLIC KEY-----\nMIIBCgKCAQEA0fLzNgQ0YwweiG8HSwIUw2D7vsdyOXyOZUBJc55VAFGF2LrCmneF\nnpRTqPf2qQ1OdV5ZnndqsskJMX2251bvIj73+ehbdJxETpJiqAqzPieL5GI2EVaQ\nC/1V2BKistKdF82/VavR7pds2rjPkimbE8GQRgfSs1WGfWjaVbMD+U7rAIDzuhpf\n/cvRQB/G7S4FCSZ/Wd2QvkVd1Mi5e3n3VS0L+FD5BcblmBnjYyxw9N1cZi3ujwoj\nCubd3ZTZ96+vojS4gOOt1ojj9GhcBqK6AuBclbnLW/MBoX5LplzB3cterJdOjibe\nnyAsOXUdwW7Xoz353qYPxY6o5/kcG9DseQIDAQAB\n-----END RSA PUBLIC KEY-----"
        }
      },
      "AnswerRequest": {
        "type": "object",
        "title": "Answer request",
        "properties": {
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "StartForkingRequest": {
        "type": "object",
        "title": "Start Forking request",
        "properties": {
          "target": {
            "description": "The network target, <udp:ip_address:port>, where the call's RTP media packets should be forwarded. Both incoming and outgoing media packets will be delivered to the specified target, and information about the stream will be included in the encapsulation protocol header, including the direction (0 = inbound; 1 = outbound), leg (0 = A-leg; 1 = B-leg), and call_leg_id.",
            "type": "string",
            "example": "udp:192.0.2.1:9000"
          },
          "rx": {
            "description": "The network target, <udp:ip_address:port>, where the call's incoming RTP media packets should be forwarded.",
            "type": "string",
            "example": "192.0.2.1:9000"
          },
          "tx": {
            "description": "The network target, <udp:ip_address:port>, where the call's outgoing RTP media packets should be forwarded.",
            "type": "string",
            "example": "192.0.2.1:9001"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "StopForkingRequest": {
        "type": "object",
        "title": "Stop Forking request",
        "properties": {
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "RejectRequest": {
        "type": "object",
        "title": "Reject request",
        "properties": {
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "GatherUsingAudioRequest": {
        "type": "object",
        "title": "Gather using audio with all parameters request",
        "required": [
          "audio_url"
        ],
        "properties": {
          "audio_url": {
            "type": "string",
            "example": "http://example.com/message.wav",
            "description": "The URL of a file to be played back at the beginning of each prompt. The URL can point to either a WAV or MP3 file."
          },
          "invalid_audio_url": {
            "type": "string",
            "description": "The URL of a file to play when digits don't match the 'valid_digits' parameter or the number of digits is not between 'min' and 'max'. The URL can point to either a WAV or MP3 file.",
            "example": "http://example.com/invalid.wav"
          },
          "minimum_digits": {
            "description": "The minimum number of digits to fetch. This parameter has a minimum value of 1.",
            "default": 1,
            "type": "integer",
            "example": 1,
            "format": "int32"
          },
          "maximum_digits": {
            "description": "The maximum number of digits to fetch. This parameter has a maximum value of 128.",
            "default": 128,
            "type": "integer",
            "example": 10,
            "format": "int32"
          },
          "maximum_tries": {
            "description": "The maximum number of times the file should be played if there is no input from the user on the call.",
            "default": 3,
            "type": "integer",
            "example": 3,
            "format": "int32"
          },
          "timeout_millis": {
            "description": "The number of milliseconds to wait for a DTMF response after file playback ends before a replaying the sound file.",
            "default": 60000,
            "type": "integer",
            "example": 60000,
            "format": "int32"
          },
          "terminating_digit": {
            "description": "The digit used to terminate input if fewer than \"max\" digits have been gathered.",
            "default": "#",
            "type": "string",
            "example": "#"
          },
          "valid_digits": {
            "description": "A list of all digits accepted as valid.",
            "default": "0123456789#*",
            "type": "string",
            "example": "123"
          },
          "inter_digit_timeout_millis": {
            "description": "The number of milliseconds to wait for input between digits.",
            "default": 5000,
            "type": "integer",
            "example": 10000,
            "format": "int32"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "GatherUsingSpeakRequest": {
        "type": "object",
        "title": "Gather using speak with all parameters request",
        "required": [
          "voice",
          "language",
          "payload"
        ],
        "properties": {
          "payload": {
            "description": "The text or SSML to be converted into speech. There is a 5,000 character limit.",
            "type": "string",
            "example": "Say this on the call"
          },
          "invalid_payload": {
            "description": "The text or SSML to be converted into speech when digits don't match the 'valid_digits' parameter or the number of digits is not between 'min' and 'max'. There is a 5,000 character limit.",
            "type": "string",
            "example": "Say this on the call"
          },
          "payload_type": {
            "description": "The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).",
            "default": "text",
            "type": "string",
            "enum": [
              "text",
              "ssml"
            ],
            "example": "ssml"
          },
          "service_level": {
            "description": "This parameter impacts speech quality, language options and payload types. When using 'basic', only the 'en-US' language and payload type 'text' are allowed.",
            "default": "premium",
            "type": "string",
            "enum": [
              "basic",
              "premium"
            ],
            "example": "premium"
          },
          "voice": {
            "description": "The gender of the voice used to speak back the text.",
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "example": "female"
          },
          "language": {
            "description": "The language you want spoken.",
            "type": "string",
            "enum": [
              "de-DE",
              "en-AU",
              "en-GB",
              "en-US",
              "es-ES",
              "fr-CA",
              "fr-FR",
              "it-IT",
              "ja-JP",
              "ko-KR",
              "nl-NL",
              "pt-BR",
              "sv-SE",
              "tr-TR"
            ],
            "example": "en-US"
          },
          "minimum_digits": {
            "description": "The minimum number of digits to fetch. This parameter has a minimum value of 1.",
            "default": 1,
            "type": "integer",
            "example": 1,
            "format": "int32"
          },
          "maximum_digits": {
            "description": "The maximum number of digits to fetch. This parameter has a maximum value of 128.",
            "default": 128,
            "type": "integer",
            "example": 10,
            "format": "int32"
          },
          "maximum_tries": {
            "description": "The maximum number of times that a file should be played back if there is no input from the user on the call.",
            "default": 3,
            "type": "integer",
            "example": 3,
            "format": "int32"
          },
          "timeout_millis": {
            "description": "The number of milliseconds to wait for a DTMF response after speak ends before a replaying the sound file.",
            "default": 60000,
            "type": "integer",
            "example": 60000,
            "format": "int32"
          },
          "terminating_digit": {
            "description": "The digit used to terminate input if fewer than \"max\" digits have been gathered.",
            "default": "#",
            "type": "string",
            "example": "#"
          },
          "valid_digits": {
            "description": "A list of all digits accepted as valid.",
            "default": "0123456789#*",
            "type": "string",
            "example": "123"
          },
          "inter_digit_timeout_millis": {
            "description": "The number of milliseconds to wait for input between digits.",
            "default": 5000,
            "type": "integer",
            "example": 10000,
            "format": "int32"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "PlayAudioUrlRequest": {
        "type": "object",
        "title": "Play Audio URL request",
        "required": [
          "audio_url"
        ],
        "properties": {
          "audio_url": {
            "description": "The URL of the file to be played back on the call. The URL can point to either a WAV or MP3 file.",
            "type": "string",
            "example": "http://www.example.com/sounds/greeting.wav"
          },
          "loop": {
            "description": "The number of times the audio file should be played. If supplied, the value must be an integer between 1 and 100, or the special string 'infinity' for an endless loop.",
            "type": "string",
            "example": "infinity",
            "default": 1
          },
          "overlay": {
            "description": "When enabled, audio will be mixed on top of any other audio that is actively being played back. Note that `overlay: true` will only work if there is another audio file already being played on the call.",
            "type": "boolean",
            "example": "true",
            "default": "false"
          },
          "stop": {
            "description": "When specified, it stops the current audio being played.  Specify 'current' to stop the current audio being played, and to play the next file in the queue. Specify 'all' to stop the current audio file being played and to also clear all audio files from the queue.",
            "type": "string",
            "default": null,
            "example": "current"
          },
          "target_legs": {
            "description": "Specifies the leg or legs on which audio will be played. If supplied, the value must be either 'self', 'opposite' or 'both'.",
            "type": "string",
            "default": "self",
            "example": "self"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "PlaybackStopRequest": {
        "type": "object",
        "title": "Playback Stop request",
        "properties": {
          "stop": {
            "description": "Use 'current' to stop only the current audio or 'all' to stop all audios in the queue.",
            "type": "string",
            "default": "all",
            "example": "current"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "StartRecordingRequest": {
        "type": "object",
        "title": "Start Recording request",
        "required": [
          "format",
          "channels"
        ],
        "properties": {
          "format": {
            "description": "The audio file format used when storing the call recording. Can be either 'mp3' or 'wav'.",
            "type": "string",
            "enum": [
              "wav",
              "mp3"
            ],
            "example": "mp3"
          },
          "channels": {
            "description": "When 'dual', final audio file will be stereo recorded with the first leg on channel A, and the rest on channel B.",
            "enum": [
              "single",
              "dual"
            ],
            "type": "string",
            "example": "single"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          },
          "play_beep": {
            "description": "If enabled, a beep sound will be played at the start of a recording.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "StopRecordingRequest": {
        "type": "object",
        "title": "Strop Recording request",
        "properties": {
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "SendDTMFRequest": {
        "type": "object",
        "title": "Send DTMF request",
        "required": [
          "digits"
        ],
        "properties": {
          "digits": {
            "description": "DTMF digits to send. Valid digits are 0-9, A-D, *, and #. Pauses can be added using w (0.5s) and W (1s).",
            "type": "string",
            "example": "1www2WABCDw9"
          },
          "duration_millis": {
            "description": "Specifies for how many milliseconds each digit will be played in the audio stream. Ranges from 100 to 500ms",
            "type": "integer",
            "format": "int32",
            "example": 500,
            "default": 250
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "CallControlCommandResult": {
        "type": "object",
        "example": {
          "result": "ok"
        },
        "properties": {
          "result": {
            "type": "string",
            "example": "ok"
          }
        }
      },
      "CallEvent": {
        "type": "object",
        "required": [
          "record_type",
          "call_leg_id",
          "call_session_id",
          "event_timestamp",
          "name",
          "type",
          "metadata"
        ],
        "properties": {
          "record_type": {
            "type": "string",
            "enum": [
              "call_event"
            ]
          },
          "call_leg_id": {
            "type": "string",
            "description": "The unique identifier of an individual call leg."
          },
          "call_session_id": {
            "type": "string",
            "description": "The unique identifier of the call control session. A session may include multiple call leg events."
          },
          "event_timestamp": {
            "type": "string",
            "description": "Event timestamp"
          },
          "name": {
            "type": "string",
            "description": "Event name"
          },
          "type": {
            "type": "string",
            "description": "Event type",
            "enum": [
              "command",
              "webhook"
            ]
          },
          "metadata": {
            "type": "object",
            "description": "Event metadata, which includes raw event, and extra information based on event type"
          }
        },
        "example": {
          "record_type": "call_event",
          "call_leg_id": "308fe500-5213-11e9-ace7-02420a0f0668",
          "call_session_id": "308fec30-5213-11e9-9d3f-02420a0f0668",
          "event_timestamp": "2019-03-29T11:10:19.127783Z",
          "name": "call_hangup",
          "type": "webhook",
          "metadata": {}
        }
      },
      "CallControlInvalidParamsResponse": {
        "type": "object",
        "title": "Invalid command parameters response",
        "required": [
          "code",
          "title",
          "detail"
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": "90015"
          },
          "title": {
            "type": "string",
            "example": "Invalid Call Control ID"
          },
          "detail": {
            "type": "string",
            "example": "The call_control_id provided was not valid."
          }
        }
      },
      "Call": {
        "type": "object",
        "required": [
          "record_type",
          "call_control_id",
          "call_leg_id",
          "call_session_id",
          "is_alive"
        ],
        "example": {
          "record_type": "call",
          "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
          "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
          "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ==",
          "is_alive": true
        },
        "properties": {
          "record_type": {
            "type": "string",
            "enum": [
              "call"
            ]
          },
          "call_session_id": {
            "description": "ID that is unique to the call session and can be used to correlate webhook events",
            "type": "string",
            "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1"
          },
          "call_leg_id": {
            "description": "ID that is unique to the call and can be used to correlate webhook events",
            "type": "string",
            "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1"
          },
          "call_control_id": {
            "description": "Unique identifier and token for controlling the call. For Dial command it will always be null (dialing is asynchronous).",
            "type": "string",
            "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ=="
          },
          "is_alive": {
            "description": "Indicates whether the call is alive or not. For Dial command it will always be false (dialing is asynchronous).",
            "type": "boolean",
            "example": true
          }
        }
      },
      "TransferCallRequest": {
        "type": "object",
        "title": "Transfer call request",
        "required": [
          "to"
        ],
        "properties": {
          "to": {
            "description": "The DID or SIP URI to dial out and bridge to the given call.",
            "type": "string",
            "example": "+18005550100 or SIP:username@sip.telnyx.com"
          },
          "from": {
            "description": "The 'from' number to be used as the caller id presented to the destination ('to' number). The number should be in +E164 format. This attribute will default to the 'from' number of the original call if omitted.",
            "type": "string",
            "example": "+18005550101"
          },
          "audio_url": {
            "description": "The URL of a file to be played back to the callee before bridging the call. The URL can point to either a WAV or MP3 file.",
            "type": "string",
            "example": "http://www.example.com/sounds/greeting.wav"
          },
          "timeout_secs": {
            "description": "The number of seconds that Telnyx will wait for the call to be answered by the destination to which it is being transferred. If the timeout is reached before an answer is received, the call will hangup and a 'call_hangup' webhook with a 'hangup_cause' of 'timeout' will be sent. Minimum value is 5 seconds. Maximum value is 120 seconds.",
            "default": 30,
            "type": "integer",
            "example": 60,
            "format": "int32"
          },
          "time_limit_secs": {
            "description": "Sets the maximum duration of a Call Control Leg in seconds. If the time limit is reached, the call will hangup and a 'call_hangup' webhook with a 'hangup_cause' of 'time_limit' will be sent. For example, by setting a time limit of 120 seconds, a Call Leg will be automatically terminated two minutes after being answered. The default time limit is 14400 seconds or 4 hours and this is also the maximum allowed call length.",
            "default": 14400,
            "type": "integer",
            "example": 600,
            "format": "int32"
          },
          "answering_machine_detection": {
            "description": "Enables Answering Machine Detection. When a call is answered, Telnyx determines whether it was picked up by a human or a machine and sends an 'answering_machine_detection_result' webhook with the analysis result.",
            "default": false,
            "type": "boolean"
          },
          "custom_headers": {
            "description": "Custom headers to be added to the SIP INVITE.",
            "type": "array",
            "example": [
              {
                "name": "head_1",
                "value": "val_1"
              },
              {
                "name": "head_2",
                "value": "val_2"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomSipHeader"
            }
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          },
          "sip_auth_username": {
            "description": "SIP Authentication username used for SIP challenges.",
            "type": "string"
          },
          "sip_auth_password": {
            "description": "SIP Authentication password used for SIP challenges.",
            "type": "string"
          }
        }
      },
      "DialRequest": {
        "type": "object",
        "title": "Dial request",
        "required": [
          "connection_id",
          "to",
          "from"
        ],
        "properties": {
          "to": {
            "description": "The DID or SIP URI to dial out to.",
            "type": "string",
            "example": "+18005550100 or SIP:username@sip.telnyx.com"
          },
          "from": {
            "description": "The 'from' number to be used as the caller id presented to the destination ('to' number). The number should be in +E164 format. This attribute will default to the 'from' number of the original call if omitted.",
            "type": "string",
            "example": "+18005550101"
          },
          "connection_id": {
            "type": "string",
            "description": "The ID of the connection to be used when dialing the destination."
          },
          "audio_url": {
            "type": "string",
            "example": "http://example.com/message.wav",
            "description": "The URL of a file to be played back to the callee when the call is answered. The URL can point to either a WAV or MP3 file."
          },
          "timeout_secs": {
            "description": "The number of seconds that Telnyx will wait for the call to be answered by the destination to which it is being called. If the timeout is reached before an answer is received, the call will hangup and a 'call_hangup' webhook with a 'hangup_cause' of 'timeout' will be sent. Minimum value is 5 seconds. Maximum value is 120 seconds.",
            "default": 30,
            "type": "integer",
            "example": 60,
            "format": "int32"
          },
          "time_limit_secs": {
            "description": "Sets the maximum duration of a Call Control Leg in seconds. If the time limit is reached, the call will hangup and a 'call_hangup' webhook with a 'hangup_cause' of 'time_limit' will be sent. For example, by setting a time limit of 120 seconds, a Call Leg will be automatically terminated two minutes after being answered. The default time limit is 14400 seconds or 4 hours and this is also the maximum allowed call length.",
            "default": 14400,
            "type": "integer",
            "example": 600,
            "format": "int32"
          },
          "answering_machine_detection": {
            "description": "Enables Answering Machine Detection. When a call gets answered, Telnyx runs an algorithm to determine whether it was picked up by a human or a machine and sends an 'answering_machine_detection_result' webhook with the analysis result.",
            "default": false,
            "type": "boolean"
          },
          "custom_headers": {
            "description": "Custom headers to be added to the SIP INVITE.",
            "type": "array",
            "example": [
              {
                "name": "head_1",
                "value": "val_1"
              },
              {
                "name": "head_2",
                "value": "val_2"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomSipHeader"
            }
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          },
          "link_to": {
            "description": "Use another call's control id for sharing the same call session id",
            "type": "string",
            "example": "ilditnZK_eVysupV21KzmzN_sM29ygfauQojpm4BgFtfX5hXAcjotg=="
          },
          "sip_auth_username": {
            "description": "SIP Authentication username used for SIP challenges.",
            "type": "string"
          },
          "sip_auth_password": {
            "description": "SIP Authentication password used for SIP challenges.",
            "type": "string"
          }
        }
      },
      "SpeakRequest": {
        "type": "object",
        "title": "Speak request",
        "required": [
          "payload",
          "voice",
          "language"
        ],
        "properties": {
          "payload": {
            "description": "The text or SSML to be converted into speech. There is a 5,000 character limit.",
            "type": "string",
            "example": "Say this on the call"
          },
          "payload_type": {
            "description": "The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).",
            "default": "text",
            "type": "string",
            "enum": [
              "text",
              "ssml"
            ],
            "example": "ssml"
          },
          "service_level": {
            "description": "This parameter impacts speech quality, language options and payload types. When using 'basic', only the 'en-US' language and payload type 'text' are allowed.",
            "default": "premium",
            "type": "string",
            "enum": [
              "basic",
              "premium"
            ],
            "example": "premium"
          },
          "stop": {
            "description": "When specified, it stops the current audio being played.  Specify 'current' to stop the current audio being played, and to play the next file in the queue. Specify 'all' to stop the current audio file being played and to also clear all audio files from the queue.",
            "type": "string",
            "default": null,
            "example": "current"
          },
          "voice": {
            "description": "The gender of the voice used to speak back the text.",
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "example": "female"
          },
          "language": {
            "description": "The language you want spoken.",
            "type": "string",
            "enum": [
              "de-DE",
              "en-AU",
              "en-GB",
              "en-US",
              "es-ES",
              "fr-CA",
              "fr-FR",
              "it-IT",
              "ja-JP",
              "ko-KR",
              "nl-NL",
              "pt-BR",
              "sv-SE",
              "tr-TR"
            ],
            "example": "en-US"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "BridgeRequest": {
        "type": "object",
        "title": "Bridge request",
        "required": [
          "call_control_id"
        ],
        "properties": {
          "call_control_id": {
            "description": "The call control id of the call you want to bridge with.",
            "type": "string",
            "example": "c8ac9611-25c3-494a-b8b4-2f036a18a6b2"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          },
          "park_after_unbridge": {
            "description": "Specifies behavior after the bridge ends (i.e. the opposite leg either hangs up or is transferred). If supplied with the value 'self', the current leg will be parked after unbridge. If not set, the default behavior is to hang up the leg.",
            "type": "string",
            "example": "self"
          }
        }
      },
      "CustomSipHeader": {
        "type": "object",
        "title": "Custom SIP header",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "description": "The name of the header to add.",
            "type": "string",
            "example": "head_1"
          },
          "value": {
            "description": "The value of the header.",
            "type": "string",
            "example": "val_1"
          }
        }
      },
      "HangupRequest": {
        "type": "object",
        "title": "Hangup request",
        "properties": {
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "Conference": {
        "type": "object",
        "required": [
          "record_type",
          "id",
          "name",
          "created_at",
          "expires_at"
        ],
        "properties": {
          "record_type": {
            "type": "string",
            "enum": [
              "conference"
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the conference"
          },
          "name": {
            "type": "string",
            "description": "Name of the conference"
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 formatted date of when the conference was created"
          },
          "expires_at": {
            "type": "string",
            "description": "ISO 8601 formatted date of when the conference will expire"
          }
        },
        "example": {
          "record_type": "conference",
          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "name": "All hands meeting",
          "created_at": "2019-01-23T18:10:02.574Z",
          "expires_at": "2019-01-23T18:10:02.574Z"
        }
      },
      "CreateConferenceRequest": {
        "required": [
          "call_control_id",
          "name"
        ],
        "type": "object",
        "title": "Create conference request",
        "properties": {
          "call_control_id": {
            "description": "Unique identifier and token for controlling the call",
            "type": "string",
            "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ=="
          },
          "name": {
            "description": "Name of the conference",
            "type": "string",
            "example": "Business"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "JoinConferenceRequest": {
        "required": [
          "call_control_id"
        ],
        "type": "object",
        "title": "Join a conference request",
        "properties": {
          "call_control_id": {
            "description": "Unique identifier and token for controlling the call",
            "type": "string",
            "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ=="
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "ConferenceMuteRequest": {
        "type": "object",
        "title": "Mute Conference participants request",
        "properties": {
          "call_control_ids": {
            "description": "List of unique identifiers and tokens for controlling the call. When empty all participants will be muted.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ConferenceHoldRequest": {
        "type": "object",
        "title": "Hold Conference participants request",
        "properties": {
          "call_control_ids": {
            "description": "List of unique identifiers and tokens for controlling the call. When empty all participants will be placed on hold.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "audio_url": {
            "type": "string",
            "example": "http://example.com/message.wav",
            "description": "The URL of a file to be played back at the beginning of each prompt. The URL can point to either a WAV or MP3 file."
          }
        }
      },
      "ConferenceUnholdRequest": {
        "type": "object",
        "title": "Unhold Conference participants request",
        "properties": {
          "call_control_ids": {
            "description": "List of unique identifiers and tokens for controlling the call. When empty all participants will be unhold.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ConferenceCommandResult": {
        "type": "object",
        "title": "Command result",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "string",
            "example": "ok"
          }
        },
        "example": {
          "result": "ok"
        }
      }
    },
    "responses": {
      "GenericErrorResponse": {
        "description": "unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Errors"
            }
          }
        }
      },
      "ListMessagingProfilesResponse": {
        "description": "A paginated array of Messaging Profiles",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessagingProfile"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "CreateMessagingProfileResponse": {
        "description": "Expected messaging profile response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/MessagingProfile"
                }
              }
            }
          }
        }
      },
      "RetrieveMessagingProfileResponse": {
        "description": "Expected messaging profile response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/MessagingProfile"
                }
              }
            }
          }
        }
      },
      "UpdateMessagingProfileResponse": {
        "description": "Expected messaging profile response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/MessagingProfile"
                }
              }
            }
          }
        }
      },
      "DeleteMessagingProfileResponse": {
        "description": "Expected messaging profile response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/MessagingProfile"
                }
              }
            }
          }
        }
      },
      "RetrieveMessagingProfilePhoneNumbersResponse": {
        "description": "Paginated array of phone numbers associated with the messaging profile",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessagingPhoneNumber"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "RetrieveMessagingProfileShortCodesResponse": {
        "description": "Paginated array of short codes associated with the messaging profile",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShortCode"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "RetrieveMessagingProfileAlphanumericSenderIdsResponse": {
        "description": "Paginated array of alphanumeric sender IDs associated with the messaging profile",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlphanumericSenderId"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "ListMessagingPhoneNumbersResponse": {
        "description": "A paginated array of the phone numbers",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessagingPhoneNumberListElement"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "RetrieveMessagingPhoneNumberResponse": {
        "description": "Expected phone number response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/MessagingPhoneNumber"
                }
              }
            }
          }
        }
      },
      "UpdateMessagingPhoneNumberResponse": {
        "description": "Expected update response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/MessagingPhoneNumber"
                }
              }
            }
          }
        }
      },
      "ListShortCodesResponse": {
        "description": "A paginated array of the short codes",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShortCode"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "RetrieveShortCodeResponse": {
        "description": "Expected short code detail response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/ShortCode"
                }
              }
            }
          }
        }
      },
      "UpdateShortCodeResponse": {
        "description": "Expected update response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/ShortCode"
                }
              }
            }
          }
        }
      },
      "CreateAlphanumericSenderIdResponse": {
        "description": "The created alphanumeric sender ID",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/AlphanumericSenderId"
                }
              }
            }
          }
        }
      },
      "ListAlphanumericSenderIdsResponse": {
        "description": "A paginated array of the alphanumeric sender IDs",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlphanumericSenderId"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "RetrieveAlphanumericSenderIdResponse": {
        "description": "The requested alphanumeric sender ID record",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/AlphanumericSenderId"
                }
              }
            }
          }
        }
      },
      "DeleteAlphanumericSenderIdResponse": {
        "description": "The deleted alphanumeric sender ID record",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/AlphanumericSenderId"
                }
              }
            }
          }
        }
      },
      "CreateMessageResponse": {
        "description": "Detailed message object",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/OutboundMessage"
                },
                "statistics": {
                  "$ref": "#/components/schemas/MessageQueueInfo"
                }
              }
            }
          }
        }
      },
      "RetrieveMessageResponse": {
        "description": "Detailed message object",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/OutboundMessage"
                }
              }
            }
          }
        }
      },
      "NumberOrdersResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NumberOrder"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "ListNumberReservationsResponse": {
        "description": "Returns a list of number reservations",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NumberReservation"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "NumberReservationCreatedResponse": {
        "description": "Number reservation has been created successfully.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/NumberReservation"
                }
              }
            }
          }
        }
      },
      "NumberOrdersDetailedResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/NumberOrderDetailed"
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "NumberReservationsResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/NumberReservation"
                }
              }
            }
          }
        }
      },
      "RetrieveNumberReservationResponse": {
        "description": "Number reservation was found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/NumberReservation"
                }
              }
            }
          }
        }
      },
      "NumberReservationsDetailedResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NumberReservationDetailed"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "NumberReservationActionsExtendResponse": {
        "description": "Number reservation was extended",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/NumberReservation"
                }
              }
            }
          }
        }
      },
      "ListAvailablePhoneNumbersResponse": {
        "description": "A paginated array of Phone Numbers",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailablePhoneNumber"
                  }
                },
                "metadata": {
                  "$ref": "#/components/schemas/AvailablePhoneNumbersMetadata"
                }
              }
            }
          }
        }
      },
      "PublicKeyResponse": {
        "description": "Successful response from public key endpoint",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/PublicKey"
                }
              }
            }
          }
        }
      },
      "CallControlCommandResponse": {
        "description": "Command response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/CallControlCommandResult"
                }
              }
            }
          }
        }
      },
      "RetrieveCallStatusResponse": {
        "description": "Retrieve call status response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          }
        }
      },
      "ListCallEventsResponse": {
        "description": "An array of call events",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallEvent"
                  }
                }
              }
            }
          }
        }
      },
      "CreateConferenceResponse": {
        "description": "Expected response to successful conference creation",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/Conference"
                }
              }
            }
          }
        }
      },
      "ListConferencesResponse": {
        "description": "A paginated array of conferences",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Conference"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "ConferenceCommandResponse": {
        "description": "Conference command response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/ConferenceCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "PageSize": {
        "name": "page[size]",
        "in": "query",
        "description": "The size of the page",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 250,
          "default": 20
        }
      },
      "PageNumber": {
        "name": "page[number]",
        "in": "query",
        "description": "The page number to load",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "PageToken": {
        "name": "page[token]",
        "in": "query",
        "description": "Token to receive the next page. For guaranteed pagination that will not skip elements, use the token provided in a previous request.\n",
        "schema": {
          "type": "string"
        }
      },
      "AlphanumericSenderId": {
        "name": "id",
        "in": "path",
        "description": "The unique ID of the alphanumeric sender ID to retrieve",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "MessagingProfileId": {
        "name": "id",
        "in": "path",
        "description": "The id of the messaging profile to retrieve",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "NumberOrderId": {
        "in": "path",
        "name": "number_order_id",
        "description": "The number order id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NumberReservationId": {
        "name": "number_reservation_id",
        "in": "path",
        "description": "The number reservation id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "MessagingPhoneNumberId": {
        "name": "id",
        "in": "path",
        "description": "The id of the phone number",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ShortCodeId": {
        "name": "id",
        "in": "path",
        "description": "The id of the short code",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "CallControlId": {
        "name": "call_control_id",
        "description": "Unique identifier and token for controlling the call",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ConferenceId": {
        "name": "id",
        "description": "Unique identifier of the conference",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "examples": {},
    "links": {},
    "requestBodies": {}
  }
}
