{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "Telnyx API",
    "description": "SIP trunking, SMS, MMS, Call Control and Telephony Data Services.",
    "license": {
      "name": "MIT"
    },
    "contact": {
      "email": "support@telnyx.com"
    }
  },
  "servers": [
    {
      "url": "https://api.telnyx.com/v2",
      "description": "Version 2.0.0 of the Telnyx API"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Messaging Profiles",
      "description": "Messaging profiles"
    },
    {
      "name": "Phone Numbers",
      "description": "Phone numbers"
    },
    {
      "name": "Numbers",
      "description": "Numbers"
    },
    {
      "name": "Number Search",
      "description": "Number search"
    },
    {
      "name": "Number Reservations",
      "description": "Number reservations"
    },
    {
      "name": "Messages",
      "description": "Messages"
    },
    {
      "name": "Alphanumeric Sender IDs",
      "description": "Alphanumeric sender ids"
    },
    {
      "name": "Short Codes",
      "description": "Short codes"
    },
    {
      "name": "Public Key",
      "description": "Public Key"
    },
    {
      "name": "Call Commands",
      "description": "Call control command operations"
    },
    {
      "name": "Conferences",
      "description": "Conference operations"
    },
    {
      "name": "Conference Commands",
      "description": "Conference command operations"
    },
    {
      "name": "Debugging",
      "description": "Call control debugging"
    },
    {
      "name": "SIM Cards",
      "description": "SIM Cards operations"
    },
    {
      "name": "Billing Groups",
      "description": "Billing groups operations"
    },
    {
      "name": "IP Connections",
      "description": "IP connection operations"
    },
    {
      "name": "Credential Connections",
      "description": "Credential connection operations"
    },
    {
      "name": "IPs",
      "description": "IP operations"
    },
    {
      "name": "FQDN Connections",
      "description": "FQDN connection operations"
    },
    {
      "name": "Number Order Regulatory Requirements",
      "description": "Number order regulatory requirements"
    },
    {
      "name": "Number Order Documents",
      "description": "Number order documents"
    }
  ],
  "paths": {
    "/number_orders": {
      "get": {
        "tags": [
          "Number Orders"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filter[status]",
            "description": "Filter number orders by status",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter[created_at][gt]",
            "description": "Filter number orders later than this value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter[created_at][lt]",
            "description": "Filter number orders earlier than this value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter[phone_numbers.phone_number]",
            "description": "Filter number orders having these phone numbers",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter[customer_reference]",
            "description": "Filter number orders via the customer reference set",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter[requirements_met]",
            "description": "Filter number orders by requirements met",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/NumberOrdersResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "post": {
        "tags": [
          "Number Orders"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/NumberOrdersDetailedResponse"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberOrder"
              }
            }
          }
        },
        "callbacks": {
          "numberOrderStatusUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/NumberOrder"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "The server must return a HTTP 200, otherwise we will reattempt to deliver the webhook to the failover url.\n"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/number_orders/{number_order_id}": {
      "get": {
        "tags": [
          "Number Orders"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/NumberOrderId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/NumberOrdersDetailedResponse"
          }
        }
      },
      "patch": {
        "tags": [
          "Number Orders"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/NumberOrderId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/NumberOrdersDetailedResponse"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/number_reservations": {
      "get": {
        "summary": "Retrieve multiple Number Reservations",
        "description": "Gets a paginated list of Phone Number Reservations",
        "operationId": "listNumberReservations",
        "tags": [
          "Number Reservations"
        ],
        "parameters": [
          {
            "name": "filter[status]",
            "in": "query",
            "description": "Filter number reservations by status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at][gt]",
            "in": "query",
            "description": "Filter number reservations later than this value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at][lt]",
            "in": "query",
            "description": "Filter number reservations earlier than this value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[phone_numbers.phone_number]",
            "in": "query",
            "description": "Filter number reservations having these phone numbers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[customer_reference]",
            "in": "query",
            "description": "Filter number reservations via the customer reference set",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListNumberReservationsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "post": {
        "summary": "Create Phone Number Reservation",
        "description": "Creates a Phone Number Reservation for multiple numbers",
        "operationId": "createNumberReservations",
        "tags": [
          "Number Reservations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberReservation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/NumberReservationCreatedResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/number_reservations/{number_reservation_id}": {
      "get": {
        "summary": "Retrieve a Single Phone Number Reservation",
        "description": "Gets a single Phone Number Reservation",
        "operationId": "retrieveNumberReservation",
        "tags": [
          "Number Reservations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/NumberReservationId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveNumberReservationResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/number_reservations/{number_reservation_id}/actions/extend": {
      "post": {
        "summary": "Extend a Phone Number Reservation",
        "description": "Extends reservation expiry time on all phone numbers",
        "operationId": "extendNumberReservationExpiryTime",
        "tags": [
          "Number Reservations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/NumberReservationId"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveNumberReservationResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/messaging_profiles": {
      "get": {
        "summary": "List all messaging profiles",
        "operationId": "listMessagingProfiles",
        "tags": [
          "Messaging Profiles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListMessagingProfilesResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "post": {
        "summary": "Create a messaging profile",
        "operationId": "createMessagingProfile",
        "tags": [
          "Messaging Profiles"
        ],
        "requestBody": {
          "description": "New Messaging Profile object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMessagingProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateMessagingProfileResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        },
        "callbacks": {
          "inboundMessage": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/InboundMessageEvent"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          },
          "deliveryUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/OutboundMessageEvent"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messaging_profiles/{id}": {
      "get": {
        "summary": "Retrieve a messaging profile",
        "operationId": "retrieveMessagingProfile",
        "tags": [
          "Messaging Profiles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/MessagingProfileId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveMessagingProfileResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "patch": {
        "summary": "Update a messaging profile",
        "operationId": "updateMessagingProfile",
        "tags": [
          "Messaging Profiles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/MessagingProfileId"
          }
        ],
        "requestBody": {
          "description": "New Messaging Profile object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessagingProfileUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateMessagingProfileResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete a messaging profile",
        "operationId": "deleteMessagingProfile",
        "tags": [
          "Messaging Profiles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/MessagingProfileId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteMessagingProfileResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/messaging_profiles/{id}/phone_numbers": {
      "get": {
        "summary": "List all phone numbers associated with a messaging profile",
        "operationId": "listMessagingProfilePhoneNumbers",
        "tags": [
          "Messaging Profiles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "$ref": "#/components/parameters/MessagingProfileId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveMessagingProfilePhoneNumbersResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/messaging_profiles/{id}/short_codes": {
      "get": {
        "summary": "List all short codes associated with a messaging profile",
        "operationId": "listMessagingProfileShortCodes",
        "tags": [
          "Messaging Profiles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "$ref": "#/components/parameters/MessagingProfileId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveMessagingProfileShortCodesResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/messaging_profiles/{id}/alphanumeric_sender_ids": {
      "get": {
        "summary": "List all alphanumeric sender IDs associated with a messaging profile",
        "operationId": "listMessagingProfileAlphanumericSenderIds",
        "tags": [
          "Messaging Profiles"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "$ref": "#/components/parameters/MessagingProfileId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveMessagingProfileAlphanumericSenderIdsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/messaging_phone_numbers": {
      "get": {
        "summary": "List all messaging capable phone numbers",
        "operationId": "listMessagingPhoneNumbers",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "name": "filter[messaging_profile_id]",
            "in": "query",
            "description": "Filter by Messaging Profile ID. Use the string `null` for phone numbers without assigned profiles. A synonym for the `/messaging_profiles/{id}/phone_number` endpoint when querying about an extant profile.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[phone_number]",
            "in": "query",
            "description": "A comma separated list of phone numbers to return",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListMessagingPhoneNumbersResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/messaging_phone_numbers/{id}": {
      "get": {
        "summary": "Retrieve a messaging phone number",
        "operationId": "retrieveMessagingPhoneNumber",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/MessagingPhoneNumberId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveMessagingPhoneNumberResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "patch": {
        "summary": "Update a messaging phone number",
        "operationId": "updateMessagingPhoneNumber",
        "description": "Update the settings for a specific number. To unbind a number from, a profile, set the `messaging_profile_id` to `null` or an empty string.",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/MessagingPhoneNumberId"
          }
        ],
        "requestBody": {
          "description": "Messaging Phone Number Update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessagingPhoneNumberUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateMessagingPhoneNumberResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/short_codes": {
      "get": {
        "summary": "List all short codes",
        "operationId": "listShortCodes",
        "tags": [
          "Short Codes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "name": "filter[messaging_profile_id]",
            "in": "query",
            "description": "Filter by Messaging Profile ID. Use the string `null` for phone numbers without assigned profiles. A synonym for the `/messaging_profiles/{id}/short_codes` endpoint when querying about an extant profile.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListShortCodesResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/short_codes/{id}": {
      "get": {
        "summary": "Retrieve a short code",
        "operationId": "retrieveShortCode",
        "tags": [
          "Short Codes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ShortCodeId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveShortCodeResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "patch": {
        "summary": "Update short code",
        "operationId": "updateShortCode",
        "description": "Update the settings for a specific short code. To unbind a short code from a profile, set the `messaging_profile_id` to `null` or an empty string.",
        "tags": [
          "Short Codes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ShortCodeId"
          }
        ],
        "requestBody": {
          "description": "Short code update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShortCodeUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateShortCodeResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/alphanumeric_sender_ids": {
      "post": {
        "summary": "Create an alphanumeric sender ID",
        "operationId": "createAlphanumericSenderId",
        "tags": [
          "Alphanumeric Sender IDs"
        ],
        "requestBody": {
          "description": "New alphanumeric sender ID",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAlphanumericSenderId"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/CreateAlphanumericSenderIdResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "get": {
        "summary": "List all alphanumeric sender IDs",
        "operationId": "listAlphanumericSenderIds",
        "tags": [
          "Alphanumeric Sender IDs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/PageToken"
          },
          {
            "name": "filter[messaging_profile_id]",
            "in": "query",
            "description": "Filter by Messaging Profile ID. Use the string `null` for phone numbers without assigned profiles. A synonym for the `/messaging_profiles/{id}/alphanumeric_sender_ids` endpoint when querying about an extant profile.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListAlphanumericSenderIdsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/alphanumeric_sender_ids/{id}": {
      "get": {
        "summary": "Retrieve an alphanumeric sender ID",
        "operationId": "retrieveAlphanumericSenderId",
        "tags": [
          "Alphanumeric Sender IDs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AlphanumericSenderId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveAlphanumericSenderIdResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete an alphanumeric sender ID",
        "operationId": "deleteAlphanumericSenderId",
        "description": "Delete a specific alphanumeric sender ID.",
        "tags": [
          "Alphanumeric Sender IDs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AlphanumericSenderId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteAlphanumericSenderIdResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/messages": {
      "post": {
        "summary": "Send a message",
        "operationId": "createMessage",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "description": "Message payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateMessageResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        },
        "callbacks": {
          "deliveryUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/OutboundMessage"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/alphanumeric_sender_id": {
      "post": {
        "summary": "Send a message using an alphanumeric sender ID",
        "operationId": "createAlphanumericSenderIdMessage",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "description": "Message payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAlphanumericSenderIdMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateMessageResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        },
        "callbacks": {
          "deliveryUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/OutboundMessage"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/number_pool": {
      "post": {
        "summary": "Send a message using Number Pool",
        "operationId": "createNumberPoolMessage",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "description": "Message payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewNumberPoolMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateMessageResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        },
        "callbacks": {
          "deliveryUpdate": {
            "{$request.body#/webhook_url}": {
              "post": {
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/OutboundMessage"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/{id}": {
      "get": {
        "summary": "Retrieve a message",
        "operationId": "retrieveMessage",
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the message",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveMessageResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/available_phone_numbers": {
      "get": {
        "summary": "List available phone numbers",
        "operationId": "listAvailablePhoneNumbers",
        "tags": [
          "Number Search"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "object",
              "properties": {
                "phone_number": {
                  "type": "object",
                  "properties": {
                    "contains": {
                      "type": "string"
                    },
                    "ends_with": {
                      "type": "string"
                    },
                    "starts_with": {
                      "type": "string"
                    }
                  }
                },
                "locality": {
                  "type": "string"
                },
                "administrative_area": {
                  "type": "string"
                },
                "country_code": {
                  "type": "string"
                },
                "national_destination_code": {
                  "type": "string"
                },
                "rate_center": {
                  "type": "string"
                },
                "number_type": {
                  "type": "string",
                  "enum": [
                    "toll-free",
                    "national",
                    "mobile",
                    "local"
                  ]
                },
                "limit": {
                  "type": "integer"
                },
                "best_effort": {
                  "type": "boolean"
                },
                "exclude_regulatory_requirements": {
                  "type": "boolean"
                },
                "features": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "sms",
                      "mms",
                      "voice",
                      "fax"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListAvailablePhoneNumbersResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/public_key": {
      "get": {
        "summary": "Retrieve public key",
        "operationId": "retrievePublicKey",
        "tags": [
          "Public Key"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PublicKeyResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/answer": {
      "post": {
        "summary": "Answer call",
        "description": "Answer an incoming call.\n\n\n**Expected Webhooks:**\n- [Call answered](/docs/v1/call-control/Call%20Webhooks#call-answered)\n",
        "operationId": "CallControlAnswer",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Answer call request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/bridge": {
      "post": {
        "summary": "Bridge calls",
        "description": "Bridge two call control calls.\n\n\n**Expected Webhooks:**\n- [Call bridged](/docs/v1/call-control/Call%20Webhooks#call-bridged) for Leg A\n- [Call bridged](/docs/v1/call-control/Call%20Webhooks#call-bridged) for Leg B\n",
        "operationId": "CallControlBridge",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Bridge call request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BridgeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/fork_start": {
      "post": {
        "summary": "Forking start",
        "description": "Call forking allows you to stream the media from a call to a specific target in realtime. \nThis stream can be used to enable realtime audio analysis in support of a \nvariety of use cases, including fraud detection, or the creation of AI-generated audio responses. \nRequests must specify either the \"target\" attribute or the \"rx\" and \"tx\" attributes.\n\n**Expected Webhooks:**\n\nThere are currently no webhooks associated with the Forking start command.\n\n\n**Simple Telnyx RTP Encapsulation Protocol (STREP)**\n\n*Note: This header/encapsulation is not used when the \"rx\" and \"tx\"\nparameters have been specified; it only applies when media is forked\nusing the \"target\" attribute.*\n\nIf the destination for forked media is specified using the \"target\"\nattribute, the RTP will be encapsulated in an extra Telnyx protocol,\nwhich adds a 24 byte header to the RTP payload in each packet. The STREP\nheader includes the Call Control `call_leg_id` for stream\nidentification, along with bits that represent the direction (inbound or\noutbound) of the media. This 24-byte header sits between the UDP header\nand the RTP header.\n\nThe STREP header makes it possible to fork RTP for multiple calls (or\ntwo RTP streams for the same call) to the same IP:port, where the\nstreams can be demultiplexed by your application using the information\nin the header. Of course, it's still possible to ignore this header\ncompletely, for example, if sending forked media for different calls to\ndifferent ports or IP addresses. In this case, simply strip 24 bytes\n(or use the second byte to find the header length) from the received UDP\npayload to get the RTP (RTP header and payload).\n\n```\nSTREP Specification\n\n  0                   1                   2                   3\n  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |1 1|Version|L|D|    HeaderLen  |  reserved (2 bytes)           |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |       reserved (4 bytes, for UDP ports or anything else)      |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |               The call_leg_id                                 |\n |                   from Call Control                           |\n |                       (128 bits / 16 bytes)                   |\n |                           (this is binary data)               |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n 11\n   Static bits 11, always set to 11, so that we humans can easily\n   visually distinguish forked media from RTP (10) and T.38 media (usually 00)\n   and SIP (which begins with a capital letter, so begins with bits 01)\n   This is a magic number.\n\n Version\n   Four bits to indicate the version number of the protocol, starting at 0001.\n\n L\n   One bit to represent the leg of the call (A or B).\n   0 represents the A (first) leg of the call.\n   1 represents the B (second) leg of the call.\n\n D\n   One bit to represent the direction of this RTP stream.\n   0 represents media received by Telnyx.\n   1 represents media transmitted by Telnyx.\n\n HeaderLen (1 byte)\n   The length of the header in bytes.\n   Note that this value does not include the length of the payload. The total\n   size of the RTP can be calculated by subtracting the HeaderLen from the UDP\n   length (minus 8 for the UDP header).\n   In version 1, this value will always be 24.\n\n Reserved (6 bytes)\n   Reserved for future use and to make sure that the header is a multiple of 32 bits\n\n Call Leg ID\n   A 128-bit identifier for the call leg.\n   This is the call_leg_id from Call Control.\n```\n",
        "operationId": "CallControlForkStart",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Fork media request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartForkingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/fork_stop": {
      "post": {
        "summary": "Forking stop",
        "description": "Stop forking a call.\n\n**Expected Webhooks:**\n\nThere are currently no webhooks associated with the Forking start command.\n",
        "operationId": "CallControlForkStop",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Stop forking media request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StopForkingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/gather_using_audio": {
      "post": {
        "summary": "Gather using audio",
        "description": "The gather using audio command enables you to build interactive menus by playing back an audio file on the call until the required DTMF signals are gathered.\nYou can pass a list of valid digits along with an 'invalid_audio_url', which will be played back at the beginning of each prompt.\nPlayback will be interrupted when a DTMF signal is received.\n\n**Expected Webhooks:**\n- [Playback started](/docs/v1/call-control/Call%20Webhooks#playback-started)\n- [Playback ended](/docs/v1/call-control/Call%20Webhooks#playback-ended)\n- [DTMF](/docs/v1/call-control/Call%20Webhooks#dtmf) (you may receive many of these webhooks)\n- [Gather ended](/docs/v1/call-control/Call%20Webhooks#gather-ended)\n",
        "operationId": "CallControlGatherUsingAudio",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Gather using audio request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GatherUsingAudioRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/gather_using_speak": {
      "post": {
        "summary": "Gather using speak",
        "description": "The gather using speak command enables you to build interactive menus by converting text to speech and play it back on the call until the required DTMF signals are gathered.\nYou can pass a list of valid digits along with an 'invalid_payload', which will be played back at the beginning of each prompt.\nSpeech will be interrupted when a DTMF signal is received.\n\n**Expected Webhooks:**\n- [DTMF](/docs/v1/call-control/Call%20Webhooks#dtmf) (you may receive many of these webhooks)\n- [Gather ended](/docs/v1/call-control/Call%20Webhooks#gather-ended)\n",
        "operationId": "CallControlGatherUsingSpeak",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Gather using speak request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GatherUsingSpeakRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/hangup": {
      "post": {
        "summary": "Hangup call",
        "description": "**Expected Webhooks:**\r\n- [Call hangup](/docs/v1/call-control/Call%20Webhooks#call-hangup)\r\n- [Recording saved](/docs/v1/call-control/Call%20Webhooks#recording-saved) (applies only if a call is being recorded)\r\n",
        "operationId": "CallControlHangup",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Hangup request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HangupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/reject": {
      "post": {
        "summary": "Reject call",
        "description": "Reject an incoming call\r\n\r\n**Expected Webhooks:**\r\n- [Call hangup](/docs/v1/call-control/Call%20Webhooks#call-hangup)\r\n",
        "operationId": "CallControlReject",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Reject request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/playback_start": {
      "post": {
        "summary": "Play audio URL",
        "description": "Play an audio file on the call. If multiple play audio commands are consecutively issued,\nthe audio files will be placed in a queue awaiting playback.\n\n\n*Notes:*\n* *when 'overlay' is enabled, 'loop' is limited to 1, and 'target_legs' is limited to 'self'.*\n* *A customer cannot Play Audio with overlay=true unless there is a Play Audio with overlay=false actively playing.*\n\n**Expected Webhooks:**\n- [Playback started](/docs/v1/call-control/Call%20Webhooks#playback-started)\n- [Playback ended](/docs/v1/call-control/Call%20Webhooks#playback-ended)\n",
        "operationId": "CallControlPlaybackStart",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Play audio URL request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayAudioUrlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/playback_stop": {
      "post": {
        "summary": "Stop audio playback",
        "description": "Stops audio being played on the call.\n\n**Expected Webhooks:**\n- Either [Playback ended](/docs/v1/call-control/Call%20Webhooks#playback-ended) or [Speak ended](/docs/v1/call-control/Call%20Webhooks#speak-ended)\n\n\n\n",
        "operationId": "CallControlPlaybackStop",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Stop audio playback request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaybackStopRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/record_start": {
      "post": {
        "summary": "Recording start",
        "description": "Start recording the call. Recording will stop on call hang-up, or can be initiated via the Stop Recording command.\n\n**Expected Webhooks:**\nThere are no webhooks associated with this Command.\n\n",
        "operationId": "CallControlRecordStart",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Start recording audio request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartRecordingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/record_stop": {
      "post": {
        "summary": "Recording stop",
        "description": "Stop recording the call.\n\n**Expected Webhooks:**\n- [Recording saved](/docs/v1/call-control/Call%20Webhooks#recording-saved)\n",
        "operationId": "CallControlRecordStop",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Answer call request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StopRecordingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/send_dtmf": {
      "post": {
        "summary": "Send DTMF",
        "description": "Sends DTMF tones from this leg. DTMF tones will be heard by the other end of the call.\n\n**Expected Webhooks:**\n\nThere are no webhooks associated with this command.\n",
        "operationId": "CallControlSendDTMF",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Send DTMF request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendDTMFRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/speak": {
      "post": {
        "summary": "Speak text",
        "description": "Convert text to speech and play it back on the call.  If multiple speak text commands are issued consecutively, the audio files will be placed in a queue awaiting playback.\n\n**Expected Webhooks:**\n- [Speak started](/docs/v1/call-control/Call%20Webhooks#speak-started)\n- [Speak ended](/docs/v1/call-control/Call%20Webhooks#speak-ended)\n",
        "operationId": "CallControlSpeak",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Speak request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpeakRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/actions/transfer": {
      "post": {
        "summary": "Transfer call",
        "description": "Transfer a call to a new destination. If the transfer is unsuccessful, a 'call_hangup' webhook will be sent indicating that the transfer could not be completed. The original call will remain active and may be issued additional commands, potentially transfering the call to an alternate destination.\n\n**Expected Webhooks:**\n- [Call initiated](docs/v1/call-control/Call%20Webhooks#call-initiated)\n- [Call bridged](docs/v1/call-control/Call%20Webhooks#call-bridged) to Leg B\n- You will receive either a [Call answered](/docs/v1/call-control/Call%20Webhooks#call-answered) webhook or a [Call hangup](/docs/v1/call-control/Call%20Webhooks#call-hangup) webhook.\n",
        "operationId": "CallControlTransfer",
        "tags": [
          "Call Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "requestBody": {
          "description": "Transfer call request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferCallRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CallControlCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls": {
      "post": {
        "summary": "Dial",
        "description": "Dial a number from a given connection. A successful response will include a `call_leg_id` which can be used to correlate the command with subsequent webhooks.\n\n**Expected Webhooks:**\n\n- [Call initiated](/docs/v1/call-control/Call%20Webhooks#call-initiated)\n- You will receive either a [Call answered](/docs/v1/call-control/Call%20Webhooks#call-answered) webhook or a [Call hangup](/docs/v1/call-control/Call%20Webhooks#call-hangup) webhook.\n\n",
        "operationId": "CallControlDial",
        "tags": [
          "Call Commands"
        ],
        "requestBody": {
          "description": "Dial request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DialRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveCallStatusResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}": {
      "get": {
        "summary": "Retrieve call status",
        "description": "Returns the status of a call.",
        "operationId": "RetrieveCallStatus",
        "tags": [
          "Call Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveCallStatusResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/calls/{call_control_id}/status": {
      "get": {
        "summary": "Retrieve the call status",
        "description": "Returns the status of a call.",
        "operationId": "CallControlStatus",
        "tags": [
          "Call Information"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CallControlId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveCallStatusResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/call_events": {
      "get": {
        "summary": "List all call events",
        "description": "Lists all events for a given call.\n\n**Note**: input either a `call_leg_id` or a `call_session_id`. If a request has both, it will only filter by `call_leg_id`.\n",
        "operationId": "CallControlDebuggingEventList",
        "tags": [
          "Debugging"
        ],
        "parameters": [
          {
            "name": "filter[call_leg_id]",
            "in": "query",
            "description": "The unique identifier of an individual call leg.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter[call_session_id]",
            "in": "query",
            "description": "The unique identifier of the call control session. A session may include multiple call leg events.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListCallEventsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/conferences": {
      "post": {
        "summary": "Create Conference",
        "description": "Creates a conference from an existing call leg using a call_control_id and a conference name. Upon creating the conference, the call will be automatically bridged to the conference.",
        "operationId": "CreateConference",
        "tags": [
          "Conference Commands"
        ],
        "requestBody": {
          "description": "Create a conference",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConferenceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateConferenceResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "get": {
        "description": "Lists conferences. Conferences are created on demand, and will expire after all participants have left the conference or after 4 hours regardless of the number of active participants.",
        "summary": "List all conferences",
        "operationId": "GetConferences",
        "tags": [
          "Conference Commands"
        ],
        "parameters": [
          {
            "name": "filter[name]",
            "in": "query",
            "description": "If present, conferences will be filtered to those with a matching `name` attribute. Matching is case-sensitive",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListConferencesResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/conferences/{id}/actions/join": {
      "post": {
        "summary": "Join a conference",
        "description": "Joins an existing call_leg to a conference. Issue the Join Conference command with the conference ID in the path and the call_control_id of the leg you wish to join to the conference as an attribute.",
        "operationId": "JoinConference",
        "tags": [
          "Conference Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ConferenceId"
          }
        ],
        "requestBody": {
          "description": "Join Conference object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinConferenceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConferenceCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/conferences/{id}/actions/mute": {
      "post": {
        "summary": "Mute a conference participant",
        "description": "Mute a list of participants in a conference call",
        "operationId": "MuteConference",
        "tags": [
          "Conference Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ConferenceId"
          }
        ],
        "requestBody": {
          "description": "Mute participants Conference object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConferenceMuteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConferenceCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/conferences/{id}/actions/unmute": {
      "post": {
        "summary": "Unmute a conference participant",
        "description": "Unmute a list of participants in a conference call",
        "operationId": "UnmuteConference",
        "tags": [
          "Conference Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ConferenceId"
          }
        ],
        "requestBody": {
          "description": "Unute participants Conference object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConferenceMuteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConferenceCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/conferences/{id}/actions/hold": {
      "post": {
        "summary": "Hold a conference participant",
        "description": "Hold a list of participants in a conference call",
        "operationId": "HoldConference",
        "tags": [
          "Conference Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ConferenceId"
          }
        ],
        "requestBody": {
          "description": "Hold participants Conference object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConferenceHoldRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConferenceCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/conferences/{id}/actions/unhold": {
      "post": {
        "summary": "Unhold a conference participant",
        "description": "Unhold a list of participants in a conference call",
        "operationId": "UnholdConference",
        "tags": [
          "Conference Commands"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ConferenceId"
          }
        ],
        "requestBody": {
          "description": "Hold participants Conference object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConferenceHoldRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConferenceCommandResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/sim_cards": {
      "get": {
        "summary": "Get all SIM cards",
        "description": "Get all SIM cards belonging to the user that match the given filters.",
        "operationId": "SimCardsGet",
        "tags": [
          "SIM Cards"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "name": "filter[tags]",
            "description": "A list of SIM card tags to filter on.<br/><br/>\nIf the SIM card contains <b><i>all</i></b> of the given <code>tags</code> they will be found.<br/><br/>\nFor example, if the SIM cards have the following tags: <ul>\n  <li><code>['customers', 'staff', 'test']</code>\n  <li><code>['test']</code></li>\n  <li><code>['customers']</code></li>\n</ul>\nSearching for <code>['customers', 'test']</code> returns only the first because it's the only one with both tags.<br/> Searching for <code>test</code> returns the first two SIMs, because both of them have such tag.<br/> Searching for <code>customers</code> returns the first and last SIMs.<br/>\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "personal",
                "customers",
                "active-customers"
              ]
            }
          },
          {
            "name": "filter[iccid]",
            "description": "A search string to partially match for the SIM card's ICCID.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "89310410106543789301"
            }
          },
          {
            "name": "filter[sim_card_group_id]",
            "description": "A valid SIM card group ID.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SearchSimCardsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/sim_cards/{id}": {
      "get": {
        "summary": "Get SIM card",
        "description": "Returns the details regarding a specific SIM card.",
        "operationId": "SimCardGet",
        "tags": [
          "SIM Cards"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/WirelessId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetSimCardResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "patch": {
        "summary": "Update a SIM card",
        "description": "Updates a SIM card's group and tags",
        "operationId": "SimCardUpdate",
        "tags": [
          "SIM Cards"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/WirelessId"
          },
          {
            "name": "tags",
            "description": "The list of tags for the given SIM card.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "personal",
                "customers",
                "active-customers"
              ]
            }
          },
          {
            "name": "sim_card_group_id",
            "description": "The SIM card group associated with the SIM card.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
            }
          }
        ],
        "requestBody": {
          "description": "Updated sim card",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SIMCardUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateSimCardResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/sim_cards/{id}/actions/activate": {
      "post": {
        "summary": "Request a SIM card activation",
        "description": "The SIM card will be able to connect to the network once the activation is complete, thus making it possible to consume data with it.<br/>\nIn order for a SIM card to be activated, it must be be associated with a SIM card group that has a data plan.<br/>\nTransitioning to the active state may take a period of time. Until the transition is completed, the SIM card status will be <code>activating</code>.\n",
        "operationId": "SimCardActivate",
        "tags": [
          "SIM Cards"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/WirelessId"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/ActivateSimCardResponse"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/sim_cards/{id}/actions/deactivate": {
      "post": {
        "summary": "Request a SIM card deactivation",
        "description": "The SIM card won't be able to connect to the network after the deactivation is completed, thus making it impossible consume data with it.<br/>\nTransitioning to the inactive state may take a period of time. Until the transition is completed, the SIM card status will be <code>inactivating</code>.\n",
        "operationId": "SimCardDeactivate",
        "tags": [
          "SIM Cards"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/WirelessId"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/DeactivateSimCardResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/actions/register/sim_cards": {
      "post": {
        "summary": "Register SIM cards",
        "description": "Register the SIM cards associated with the provided registration codes to the current user's account.<br/><br/>\nIf <code>sim_card_group_id</code> is provided, the SIM cards will be associated with that group. Otherwise, the default group for the current user, which is associated with the default free data plan, will be used.<br/><br/>\n",
        "operationId": "SimCardRegister",
        "tags": [
          "SIM Cards"
        ],
        "parameters": [
          {
            "name": "registration_codes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "0000000001",
                "0000000002",
                "0000000003"
              ]
            }
          },
          {
            "name": "sim_card_group_id",
            "description": "The ID of the SIM card group to which attach the SIM cards.",
            "in": "body",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
            }
          },
          {
            "name": "tags",
            "description": "The list of tags for SIM cards.",
            "in": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "personal",
                "customers",
                "active-customers"
              ]
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/RegisterSimCardsResponse"
          }
        }
      }
    },
    "/phone_numbers": {
      "get": {
        "summary": "List all phone numbers",
        "operationId": "findPhoneNumbers",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "name": "filter[tag]",
            "in": "query",
            "description": "Filter by phone number tags",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[phone_number]",
            "in": "query",
            "description": "Filter by phone number. Requires at least three digits.\n             Non-numerical characters will result in no values being returned.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[status]",
            "in": "query",
            "description": "Filter by phone number status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "purchase_pending",
                "purchase_failed",
                "port_pending",
                "active",
                "deleted",
                "port_failed",
                "emergency_only",
                "ported_out",
                "port_out_pending"
              ],
              "example": "active"
            }
          },
          {
            "name": "filter[voice.connection_name][contains]",
            "in": "query",
            "description": "Filter contains connection name. Requires at least three characters",
            "required": false,
            "schema": {
              "type": "string",
              "example": "test"
            }
          },
          {
            "name": "filter[voice.connection_name][starts_with]",
            "in": "query",
            "description": "Filter starts with connection name. Requires at least three characters",
            "required": false,
            "schema": {
              "type": "string",
              "example": "test"
            }
          },
          {
            "name": "filter[voice.connection_name][ends_with]",
            "in": "query",
            "description": "Filter ends with connection name. Requires at least three characters",
            "required": false,
            "schema": {
              "type": "string",
              "example": "test"
            }
          },
          {
            "name": "filter[voice.connection_name][eq]",
            "in": "query",
            "description": "Filter by connection name",
            "required": false,
            "schema": {
              "type": "string",
              "example": "test"
            }
          },
          {
            "name": "filter[usage_payment_method]",
            "in": "query",
            "description": "Filter by usage_payment_method.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pay-per-minute",
                "channel"
              ],
              "example": "channel"
            }
          },
          {
            "name": "filter[messaging.messaging_profile_name][contains]",
            "in": "query",
            "description": "Filter contains messaging profile name. Requires at least three characters",
            "required": false,
            "schema": {
              "type": "string",
              "example": "test"
            }
          },
          {
            "name": "filter[messaging.messaging_profile_name][starts_with]",
            "in": "query",
            "description": "Filter starts with messaging profile name. Requires at least three characters",
            "required": false,
            "schema": {
              "type": "string",
              "example": "test"
            }
          },
          {
            "name": "filter[messaging.messaging_profile_name][ends_with]",
            "in": "query",
            "description": "Filter ends with messaging profile name. Requires at least three characters",
            "required": false,
            "schema": {
              "type": "string",
              "example": "test"
            }
          },
          {
            "name": "filter[voice.messaging_profile_name][eq]",
            "in": "query",
            "description": "Filter by messaging profile name",
            "required": false,
            "schema": {
              "type": "string",
              "example": "test"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the sort order for results. If not given, results are sorted by created_at in descending order",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "purchased_at",
                "phone_number",
                "connection_name",
                "usage_payment_method"
              ],
              "example": "connection-name"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListPhoneNumbersResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/phone_numbers/{id}": {
      "patch": {
        "summary": "Update the settings for a phone number",
        "operationId": "updatePhoneNumber",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Uniquely identifies the resource or object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated settings for the phone number",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneNumberUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrievePhoneNumberResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete a phone number",
        "operationId": "deletePhoneNumber",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifies the type of resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeletePhoneNumberResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/phone_numbers/{id}/voice": {
      "get": {
        "summary": "Retrieve the voice settings for a phone number",
        "operationId": "retrievePhoneNumberVoice",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Uniquely identifies the resource or object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrievePhoneNumberVoiceResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "patch": {
        "summary": "Update the voice settings for a phone number",
        "operationId": "updatePhoneNumberVoice",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Uniquely identifies the resource or object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated voice settings for the phone number",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoiceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrievePhoneNumberVoiceResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/phone_numbers/{id}/messaging": {
      "get": {
        "summary": "Retrieve the messaging settings for a phone number",
        "operationId": "retrievePhoneNumberMessagingSettings",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Uniquely identifies the resource or object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveMessagingSettingsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "patch": {
        "summary": "Update the messaging settings for a phone number",
        "operationId": "updatePhoneNumberMessagingSettings",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Uniquely identifies the resource or object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated messaging settings for the phone number",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessagingPhoneNumberUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveMessagingSettingsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/phone_numbers/messaging": {
      "get": {
        "summary": "List all phone numbers' messaging settings",
        "operationId": "listPhoneNumberMessagingSettings",
        "tags": [
          "Phone Numbers"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListMessagingSettingsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/phone_numbers/voice": {
      "get": {
        "summary": "List voice settings for multiple phone numbers",
        "operationId": "findPhoneNumberVoices",
        "tags": [
          "Phone Numbers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "name": "filter[phone_number]",
            "in": "query",
            "description": "Filter by phone number. Requires at least three digits.\n             Non-numerical characters will result in no values being returned.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[connection_name][contains]",
            "in": "query",
            "description": "Filter contains connection name. Requires at least three characters",
            "required": false,
            "schema": {
              "type": "string",
              "example": "test"
            }
          },
          {
            "name": "filter[usage_payment_method]",
            "in": "query",
            "description": "Filter by usage_payment_method.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pay-per-minute",
                "channel"
              ],
              "example": "channel"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the sort order for results. If not given, results are sorted by created_at in descending order",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "purchased_at",
                "phone_number",
                "connection_name",
                "usage_payment_method"
              ],
              "example": "connection_name"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListPhoneNumberVoicesResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/billing_groups": {
      "get": {
        "summary": "List all billing groups",
        "operationId": "listBillingGroups",
        "tags": [
          "Billing Groups"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListBillingGroupsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "post": {
        "summary": "Create a billing group",
        "operationId": "createBillingGroup",
        "tags": [
          "Billing Groups"
        ],
        "requestBody": {
          "description": "New billing group object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBillingGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateBillingGroupResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/billing_groups/{id}": {
      "get": {
        "summary": "Retrieve a billing group",
        "operationId": "retrieveBillingGroup",
        "tags": [
          "Billing Groups"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/BillingGroupId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveBillingGroupResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "patch": {
        "summary": "Update a billing group",
        "operationId": "updateBillingGroup",
        "tags": [
          "Billing Groups"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/BillingGroupId"
          }
        ],
        "requestBody": {
          "description": "Update billing group object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBillingGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateBillingGroupResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete a billing group",
        "operationId": "deleteBillingGroup",
        "tags": [
          "Billing Groups"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/BillingGroupId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteBillingGroupResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/ip_connections": {
      "get": {
        "description": "Returns a list of your connections.",
        "summary": "List all connections",
        "operationId": "findConnections",
        "tags": [
          "IP Connections"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/FilterConnectionName"
          },
          {
            "$ref": "#/components/parameters/Sort"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetAllIPConnectionResponse"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "post": {
        "description": "Creates an IP connection.",
        "summary": "Creates an IP connection",
        "operationId": "CreateIPConnection",
        "tags": [
          "IP Connections"
        ],
        "parameters": [],
        "requestBody": {
          "description": "Parameters that can be defined during IP connection creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPConnectionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/IPConnectionResponse"
          },
          "422": {
            "description": "Bad request"
          }
        }
      }
    },
    "/ip_connections/{id}": {
      "get": {
        "description": "Retrieves the details of an existing ip connection.",
        "summary": "Retrieve a connection",
        "operationId": "getIPConnection",
        "tags": [
          "IP Connections"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "IP Connection ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/IPConnectionResponse"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Bad request"
          }
        }
      },
      "patch": {
        "description": "Updates settings of an existing IP connection.",
        "summary": "Updates an IP connection",
        "operationId": "UpdateIPConnection",
        "tags": [
          "IP Connections"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifies the type of resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Parameters that can be updated in a IP connection",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPConnectionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/IPConnectionResponse"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "description": "Deletes an existing IP connection.",
        "summary": "Deletes an IP connection",
        "operationId": "DeleteIPConnection",
        "tags": [
          "IP Connections"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifies the type of resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/IPConnectionResponse"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Bad request"
          }
        }
      }
    },
    "/credential_connections/{id}": {
      "get": {
        "description": "Retrieves the details of an existing credential connection.",
        "summary": "Retrieve a connection",
        "operationId": "getCredentialConnection",
        "tags": [
          "Credential Connections"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CredentialConnectionResponse"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "patch": {
        "description": "Updates settings of an existing credential connection.",
        "summary": "Updates a credential connection",
        "operationId": "UpdateCredentialConnection",
        "tags": [
          "Credential Connections"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Parameters that can be updated in a credential connection",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialConnectionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CredentialConnectionResponse"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "description": "Deletes an existing credential connection.",
        "summary": "Deletes a credential connection",
        "operationId": "DeleteCredentialConnection",
        "tags": [
          "Credential Connections"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CredentialConnectionResponse"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Bad request"
          }
        }
      }
    },
    "/credential_connections": {
      "get": {
        "description": "Returns a list of your credential connections.",
        "summary": "List all credential connections",
        "operationId": "findCredentialConnections",
        "tags": [
          "Credential Connections"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/FilterConnectionName"
          },
          {
            "$ref": "#/components/parameters/Sort"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetAllCredentialConnectionResponse"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "post": {
        "description": "Creates a credential connection.",
        "summary": "Creates a credential connection",
        "operationId": "CreateCredentialConnection",
        "tags": [
          "Credential Connections"
        ],
        "parameters": [],
        "requestBody": {
          "description": "Parameters that can be defined during credential connection creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialConnectionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CredentialConnectionResponse"
          },
          "422": {
            "description": "Bad request"
          }
        }
      }
    },
    "/ips": {
      "get": {
        "summary": "Get all IPs",
        "description": "Get all IPs belonging to the user that match the given filters.",
        "operationId": "IPsGet",
        "tags": [
          "IPs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "name": "filter[connection_id]",
            "description": "ID of the IPConnection to which this IP should be attached.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[ip_address]",
            "description": "IP adddress represented by this resource.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "192.168.0.0"
            }
          },
          {
            "name": "filter[port]",
            "description": "Port to use when connecting to this IP.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 5060
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/IPSearchSuccessfulResponse"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "description": "Create a new IP object.",
        "summary": "Create an IP",
        "operationId": "addIP",
        "tags": [
          "IPs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPWritableSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/IPSuccessfulResponse"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/ips/{id}": {
      "get": {
        "description": "Return the details regarding a specific IP.",
        "summary": "Get IP",
        "operationId": "getIPDetails",
        "tags": [
          "IPs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/IPId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/IPSuccessfulResponse"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "patch": {
        "description": "Update the details of a specific IP.",
        "summary": "Update IP",
        "operationId": "updateIP",
        "tags": [
          "IPs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/IPId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPWritableSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/IPSuccessfulResponse"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "description": "Delete an IP.",
        "summary": "Delete an IP",
        "operationId": "deleteIP",
        "tags": [
          "IPs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/IPId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/IPSuccessfulResponse"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/fqdn_connections": {
      "get": {
        "description": "Returns a list of your FQDN connections.",
        "summary": "List all FQDN connections",
        "operationId": "findFQDNConnections",
        "tags": [
          "FQDN Connections"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/PageNumber"
          },
          {
            "$ref": "#/components/parameters/PageSize"
          },
          {
            "$ref": "#/components/parameters/FilterConnectionName"
          },
          {
            "$ref": "#/components/parameters/Sort"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetAllFQDNConnectionResponse"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "post": {
        "description": "Creates a FQDN connection.",
        "summary": "Creates an FQDN connection",
        "operationId": "CreateFQDNConnection",
        "tags": [
          "FQDN Connections"
        ],
        "parameters": [],
        "requestBody": {
          "description": "Parameters that can be defined during FQDN connection creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FQDNConnectionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/FQDNConnectionResponse"
          },
          "422": {
            "description": "Bad request"
          }
        }
      }
    },
    "/fqdn_connections/{id}": {
      "get": {
        "description": "Retrieves the details of an existing FQDN connection.",
        "summary": "Retrieve a connection",
        "operationId": "getFQDNConnection",
        "tags": [
          "FQDN Connections"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "FQDN Connection ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/FQDNConnectionResponse"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Bad request"
          }
        }
      },
      "patch": {
        "description": "Updates settings of an existing FQDN connection.",
        "summary": "Update a FQDN connection",
        "operationId": "UpdateFQDNConnection",
        "tags": [
          "FQDN Connections"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "FQDN Connection ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Parameters that can be updated in a FQDN connection",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FQDNConnectionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/FQDNConnectionResponse"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
              "description": "Deletes an FQDN connection.",
              "summary": "Deletes an FQDN connection",
              "operationId": "DeleteFQDNConnection",
              "tags": [
                  "FQDN Connections"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "FQDN Connection ID",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "$ref": "#/components/responses/FQDNConnectionResponse"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "404": {
                      "description": "Resource not found"
                  },
                  "422": {
                      "description": "Bad request"
                  }
              }
       }
    },
    "/regulatory_requirements": {
      "get": {
        "summary": "Get list of Number Order Regulatory Requirements",
        "description": "Gets a paginated list of Number Order Regulatory Requirements",
        "operationId": "listNumberOrderRegulatoryRequirements",
        "tags": [
          "Number Order Regulatory Requirements"
        ],
        "parameters": [
          {
            "name": "filter[requirement_id]",
            "in": "query",
            "description": "Filter number order regulatory requirements by requirement_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[field_type]",
            "in": "query",
            "description": "Filter number order regulatory requirements by field_type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[requirement_type]",
            "in": "query",
            "description": "Filter number order regulatory requirements by requirement_type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListNumberOrderRegulatoryRequirementsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/regulatory_requirements/{requirement_id}": {
      "get": {
        "summary": "Get Detailed Number Order Regulatory Requirement",
        "description": "Gets a single Number Order Regulatory Requirement",
        "operationId": "retrieveNumberOrderRegulatoryRequirement",
        "tags": [
          "Number Order Regulatory Requirements"
        ],
        "parameters": [
          {
            "name": "requirement_id",
            "in": "path",
            "description": "The number order regulatory requirement id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveNumberOrderRegulatoryRequirementResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/phone_number_regulatory_requirements": {
      "get": {
        "summary": "Get Regulatory Requirements Per Number",
        "description": "Gets a paginated list of Phone Number Regulatory Requirements",
        "operationId": "listPhoneNumberRegulatoryRequirements",
        "tags": [
          "Number Order Regulatory Requirements"
        ],
        "parameters": [
          {
            "name": "filter[phone_number]",
            "in": "query",
            "description": "The list of phone numbers to retrieve regulatory requirements for",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListPhoneNumberRegulatoryRequirementsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/number_order_documents": {
      "get": {
        "summary": "Get Uploaded Number Order Documents",
        "description": "Gets a paginated list of Number Order Documents",
        "operationId": "listNumberOrderDocuments",
        "tags": [
          "Number Order Documents"
        ],
        "parameters": [
          {
            "name": "filter[requirement_id]",
            "in": "query",
            "description": "Filter number order documents by requirement_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at][gt]",
            "in": "query",
            "description": "Filter number order documents after this datetime",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[created_at][lt]",
            "in": "query",
            "description": "Filter number order documents from before this datetime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListNumberOrderDocumentsResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "post": {
        "summary": "Upload Number Order Document",
        "description": "Upload a Phone Number Order Document",
        "operationId": "createNumberOrderDocument",
        "tags": [
          "Number Order Documents"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberOrderDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateNumberOrderDocumentResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    },
    "/number_order_documents/{number_order_document_id}": {
      "patch": {
        "summary": "Update Number Order Document",
        "description": "Updates a Number Order Document",
        "operationId": "updateNumberOrderDocument",
        "tags": [
          "Number Order Documents"
        ],
        "parameters": [
          {
            "name": "number_order_document_id",
            "in": "path",
            "description": "The number order document id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberOrderDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateNumberOrderDocumentResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      },
      "get": {
        "summary": "Retrieve a Single Number Order Document",
        "description": "Gets a single Number Order Document",
        "operationId": "retrieveNumberOrderDocument",
        "tags": [
          "Number Order Documents"
        ],
        "parameters": [
          {
            "name": "number_order_document_id",
            "in": "path",
            "description": "The number order document id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RetrieveNumberOrderDocumentResponse"
          },
          "default": {
            "$ref": "#/components/responses/GenericErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "PaginationMeta": {
        "properties": {
          "total_pages": {
            "type": "integer",
            "example": 3
          },
          "total_results": {
            "type": "integer",
            "example": 55
          },
          "page_number": {
            "type": "integer",
            "example": 2
          },
          "page_size": {
            "type": "integer",
            "example": 25
          },
          "next_page_token": {
            "type": "string"
          }
        }
      },
      "NumberOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The id of the number order",
            "example": "12ade33a-21c0-473b-b055-b3c836e1c292"
          },
          "record_type": {
            "type": "string",
            "example": "number_order"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            }
          },
          "phone_numbers_count": {
            "type": "integer",
            "description": "The count of phone numbers in the number order",
            "example": 1
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failure"
            ],
            "description": "The status of the order."
          },
          "customer_reference": {
            "type": "string",
            "example": "MY REF 001",
            "description": "A customer reference string for customer look ups"
          },
          "connection_id": {
            "type": "string",
            "example": "442191469269222625",
            "description": "The connection id to set the number to upon acquiring the number"
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "example": "730911e3-8488-40a8-a818-dc0a5df8bc03",
            "description": "The messaging profile id to set the number to upon acquiring the number"
          },
          "webhook_url": {
            "type": "string",
            "format": "url",
            "example": "https://webhook.test",
            "description": "A webhook url for number order status updates"
          },
          "webhook_failover_url": {
            "type": "string",
            "format": "url",
            "example": "https://webhook-failover.test",
            "description": "If above webhook url fails, this url will be used as a fail over"
          },
          "created_at": {
            "type": "string",
            "format": "datetime",
            "example": "2018-01-01T00:00:00.000000Z",
            "description": "A datetime string denoting when the number order was created"
          },
          "updated_at": {
            "type": "string",
            "format": "datetime",
            "example": "2018-01-01T00:00:00.000000Z",
            "description": "A datetime string for when the number order was updated"
          },
          "requirements_met": {
            "type": "boolean",
            "description": "True if all requirements are met for every phone number, false otherwise"
          }
        },
        "example": {
          "id": "12ade33a-21c0-473b-b055-b3c836e1c292",
          "record_type": "number_order",
          "phone_numbers_count": 1,
          "status": "pending",
          "customer_reference": "MY REF 001",
          "connection_id": "442191469269222625",
          "messaging_profile_id": "730911e3-8488-40a8-a818-dc0a5df8bc03",
          "webhook_url": "https://webhook.test",
          "webhook_failover_url": "https://webhook-failover.test",
          "created_at": "2018-01-01T00:00:00.000000Z",
          "updated_at": "2018-01-01T00:00:00.000000Z",
          "requirements_met": true
        }
      },
      "NumberOrderDetailed": {
        "type": "array",
        "$ref": "#/components/schemas/NumberOrder",
        "example": {
          "id": "12ade33a-21c0-473b-b055-b3c836e1c292",
          "record_type": "number_order",
          "phone_numbers_count": 1,
          "status": "pending",
          "customer_reference": "MY REF 001",
          "connection_id": "442191469269222625",
          "messaging_profile_id": "730911e3-8488-40a8-a818-dc0a5df8bc03",
          "webhook_url": "https://webhook.test",
          "webhook_failover_url": "https://webhook-failover.test",
          "created_at": "2018-01-01T00:00:00.000000Z",
          "updated_at": "2018-01-01T00:00:00.000000Z",
          "requirements_met": true,
          "phone_numbers": [
            {
              "regulatory_requirements": [],
              "requirements_met": true,
              "status": "success",
              "id": "621415a0-7035-42d1-bfba-0b16e43d79ed",
              "phone_number": "+13127000000",
              "record_type": "number_order_phone_number"
            },
            {
              "regulatory_requirements": [],
              "requirements_met": true,
              "status": "success",
              "id": "27be8dfc-7cc9-4541-a148-1b0185c4aa3f",
              "phone_number": "+13127000099",
              "record_type": "number_order_phone_number"
            }
          ]
        }
      },
      "NumberReservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The id of the number reservation",
            "example": "f7964e2b-a9f9-4eb6-ab16-e570ffc4bc83"
          },
          "record_type": {
            "type": "string",
            "example": "phone_number_reservation"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservedPhoneNumber"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failure"
            ],
            "description": "The status of the entire reservation"
          },
          "customer_reference": {
            "type": "string",
            "example": "MY REF 001",
            "description": "A customer reference string for customer look ups"
          },
          "created_at": {
            "type": "string",
            "format": "datetime",
            "example": "2018-01-01T00:00:00.000000Z",
            "description": "A datetime string denoting when the numbers reservation was created"
          },
          "updated_at": {
            "type": "string",
            "format": "datetime",
            "example": "2018-01-01T00:00:00.000000Z",
            "description": "A datetime string for when the number reservation was updated"
          }
        },
        "example": {
          "status": "pending",
          "created_at": "2019-06-06T17:10:37.984311Z",
          "phone_numbers": [
            {
              "expired_at": "2019-06-04T17:10:37.887000Z",
              "status": "failure",
              "phone_number": "+13122076000",
              "expired": true,
              "updated_at": "2019-06-11T19:40:01.190425Z",
              "id": "4d731178-a0e1-4145-bddd-0265120123b8",
              "created_at": "2019-06-06T17:10:37.984311Z",
              "record_type": "reserved_phone_number"
            }
          ],
          "customer_reference": "CUSTOMER_REF_1",
          "updated_at": "2019-06-06T17:10:37.984311Z",
          "user_id": "1a8752a5-63e8-4c16-9655-d2c515f42aed",
          "id": "f7964e2b-a9f9-4eb6-ab16-e570ffc4bc83",
          "record_type": "number_reservation"
        }
      },
      "ReservedPhoneNumber": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "f7964e2b-a9f9-4eb6-ab16-e570ffc4bc83"
          },
          "record_type": {
            "type": "string",
            "example": "reserved_phone_number"
          },
          "phone_number": {
            "type": "string",
            "format": "e164_phone_number",
            "example": "+13125000000"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failure"
            ],
            "description": "The status of the phone number's reservation"
          },
          "created_at": {
            "type": "string",
            "format": "datetime",
            "example": "2018-01-01T00:00:00.000000Z",
            "description": "A datetime string denoting when the individual number reservation was created"
          },
          "updated_at": {
            "type": "string",
            "format": "datetime",
            "example": "2018-01-01T00:00:00.000000Z",
            "description": "A datetime string for when the the individual number reservation was updated"
          },
          "expired_at": {
            "type": "string",
            "format": "datetime",
            "example": "2018-01-01T00:00:00.000000Z",
            "description": "A datetime string for when the individual number reservation is going to expire"
          }
        }
      },
      "NumberReservationDetailed": {
        "type": "array",
        "$ref": "#/components/schemas/NumberReservation",
        "example": {
          "id": "122644a6-aa12-4832-b353-7a88e89722fd",
          "created_at": "2019-06-06T22:32:45.075437Z",
          "customer_reference": "CUSTOMER_REF_1",
          "updated_at": "2019-06-06T22:32:51.299616Z",
          "status": "success",
          "phone_numbers": [
            {
              "expired_at": "2019-06-11T22:32:45.056436Z",
              "id": "e39ba25a-1fb2-44e2-8b07-543853ac9c29",
              "created_at": "2019-06-06T22:32:45.075437Z",
              "updated_at": "2019-06-06T22:32:51.303978Z",
              "expired": false,
              "phone_number": "+13122708609",
              "status": "success",
              "record_type": "reserved_phone_number"
            }
          ],
          "user_id": "22083c08-4e1f-4e25-be08-3e0f51f581dc",
          "record_type": "number_reservation"
        }
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494",
            "description": "The id of the number order phone number"
          },
          "record_type": {
            "type": "string",
            "example": "number_order_phone_number"
          },
          "phone_number": {
            "type": "string",
            "format": "e164_phone_number"
          },
          "regulatory_group_id": {
            "type": "string",
            "example": "dc8e4d67-33a0-4cbb-af74-7b58f05bd494"
          },
          "regulatory_requirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumberRegulatoryRequirement"
            }
          },
          "requirements_met": {
            "type": "boolean",
            "description": "True if all requirements are met for a phone number, false otherwise."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failure"
            ],
            "description": "The status of the phone number in the order."
          }
        }
      },
      "NumberOrderDocument": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "387d1e31-a218-4375-8151-103f2d5e2d2c"
          },
          "record_type": {
            "type": "string",
            "example": "number_order_document"
          },
          "file_id": {
            "type": "string",
            "description": "The id of the file to associate as a number order document"
          },
          "requirements_id": {
            "type": "string",
            "description": "Unique id for a requirement"
          },
          "customer_reference": {
            "type": "string",
            "description": "A customer reference string for customer look ups"
          },
          "requirement_type": {
            "type": "string",
            "enum": [
              "address_proof",
              "identification",
              "reg_form"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "datetime",
            "description": "An ISO 8901 datetime string denoting when the number order document was uploaded"
          }
        },
        "example": {
          "id": "387d1e31-a218-4375-8151-103f2d5e2d2c",
          "record_type": "number_order_document",
          "file_id": "1e3c5822-0362-4702-8e46-5a129f0d3976",
          "requirements_id": "36aaf27d-986b-493c-bd1b-de16af2e4292",
          "customer_reference": "MY REF 001",
          "requirement_type": "address_proof",
          "created_at": "2018-01-01T00:00:00.000000Z"
        }
      },
      "PhoneNumberRegulatoryRequirement": {
        "type": "object",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "phone_number_regulatory_requirement"
          },
          "requirement_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique id for a requirement",
            "example": "8ffb3622-7c6b-4ccc-b65f-7a3dc0099576"
          },
          "field_value": {
            "type": "string",
            "description": "The value of the requirement, this could be an id to a resource or a string value",
            "example": "45f45a04-b4be-4592-95b1-9306b9db2b21"
          },
          "field_type": {
            "type": "string",
            "enum": [
              "string",
              "datetime",
              "address_id",
              "number_order_document_id"
            ],
            "example": "address_id"
          }
        }
      },
      "RegulatoryRequirement": {
        "type": "object",
        "properties": {
          "requirement_type": {
            "type": "string",
            "enum": [
              "end user proof of address",
              "entity identification",
              "end user address"
            ]
          },
          "label": {
            "type": "string",
            "example": "Proof of Address"
          },
          "field_type": {
            "type": "string",
            "enum": [
              "file upload",
              "text field",
              "address",
              "datetime"
            ]
          },
          "description": {
            "type": "string",
            "example": "Requirement for providing Proof of Address"
          }
        },
        "example": {
          "requirement_type": "end user proof of address",
          "label": "Proof of Address",
          "field_type": "file upload",
          "description": "Requirement for providing Proof of Address"
        }
      },
      "PhoneNumberRegulatoryGroup": {
        "type": "object",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "phone_number_regulatory_group"
          },
          "phone_number": {
            "type": "string",
            "format": "e164_phone_number",
            "example": "+19705555098"
          },
          "regulatory_group_id": {
            "type": "string",
            "format": "uuid",
            "example": "d70873cd-7c98-401a-81b6-b1ae08246995"
          },
          "regulatory_requirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegulatoryRequirement"
            }
          }
        },
        "example": {
          "record_type": "phone_number_regulatory_group",
          "phone_number": "+19705555098",
          "regulatory_group_id": "d70873cd-7c98-401a-81b6-b1ae08246995",
          "regulatory_requirements": [
            {
              "requirement_type": "end user proof of address",
              "label": "Proof of Address",
              "field_type": "file upload",
              "description": "Requirement for providing Proof of Address"
            }
          ]
        }
      },
      "RegulatoryRequirementCriteria": {
        "properties": {
          "record_type": {
            "type": "string",
            "example": "phone_number_regulatory_requirement_criteria"
          },
          "criteria_type": {
            "type": "string",
            "enum": [
              "country",
              "phone_number_type"
            ]
          },
          "criteria_value": {
            "type": "string",
            "example": "AU"
          }
        }
      },
      "Metadata": {
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer"
          },
          "page_size": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_results": {
            "type": "integer"
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "title"
        ],
        "properties": {
          "code": {
            "type": "string",
            "format": "int"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "source": {
            "type": "object",
            "properties": {
              "pointer": {
                "description": "JSON pointer (RFC6901) to the offending entity",
                "type": "string",
                "format": "json-pointer"
              },
              "parameter": {
                "description": "Indicates which query parameter caused the error",
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object"
          }
        }
      },
      "Errors": {
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Empty": {
        "type": "string",
        "example": ""
      },
      "MessagingFeatureSet": {
        "type": "object",
        "nullable": true,
        "default": null,
        "required": [
          "domestic_two_way",
          "international_inbound",
          "international_outbound"
        ],
        "description": "The set of features available for a specific messaging use case (SMS or MMS). Features\ncan vary depending on the characteristics the phone number, as well as its current\nproduct configuration.\n",
        "properties": {
          "domestic_two_way": {
            "type": "boolean",
            "description": "Send messages to and receive messages from numbers in the same country."
          },
          "international_inbound": {
            "type": "boolean",
            "description": "Receive messages from numbers in other countries."
          },
          "international_outbound": {
            "type": "boolean",
            "description": "Send messages to numbers in other countries."
          }
        }
      },
      "NumberPoolSettings": {
        "type": "object",
        "default": null,
        "required": [
          "toll_free_weight",
          "long_code_weight",
          "skip_unhealthy",
          "geomatch"
        ],
        "description": "Number Pool allows you to send messages from a pool of numbers of different types, assigning\nweights to each type.\nThe pool consists of all the Long Code and Toll Free numbers assigned\nto the Messaging profile.\n",
        "properties": {
          "toll_free_weight": {
            "type": "number",
            "example": 10.0,
            "description": "Defines the probability weight for a Toll Free number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100. Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
          },
          "long_code_weight": {
            "type": "number",
            "example": 1.0,
            "description": "Defines the probability weight for a Long Code number to be selected when sending a message.\nThe higher the weight the higher the probability. The sum of the weights for all number types\ndoes not necessarily need to add to 100.  Weight must be a non-negative number, and when equal\nto zero it will remove the number type from the pool.\n"
          },
          "skip_unhealthy": {
            "type": "boolean",
            "example": true,
            "description": "If set to true all unhealthy numbers will be automatically removed from the pool.\nHealth metrics  per number are calculated on a regular basis, taking into account the deliverability\nrate and the amount of messages marked as spam by upstream carriers.\nNumbers with a deliverability rate below 25% or spam ratio over 75% will be considered unhealthy.\n"
          },
          "sticky_sender": {
            "type": "boolean",
            "example": true,
            "description": "If set to true, Number Pool will try to choose the same sending number for all messages to a particular\nrecipient. If the sending number becomes unhealthy and `skip_unhealthy` is set to `true`, a new\nnumber will be chosen.\n"
          },
          "geomatch": {
            "type": "boolean",
            "example": true,
            "description": "If set to true, Number Pool will try to choose a sending number with the same area code as the destination\nnumber. If there are no such numbers available, a nunber with a different area code will be chosen. Currently\nonly NANP numbers are supported.\n"
          }
        }
      },
      "ShortCodeInfo": {
        "description": "This information is attached to messages that are sent from short codes. It includes carrier information, which can influence billing.",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "short_code_info_blob",
            "enum": [
              "short_code_info_blob"
            ],
            "description": "Identifies the type of the resource."
          },
          "om_carrier": {
            "type": "string"
          },
          "om_normalized_carrier": {
            "type": "string"
          }
        }
      },
      "AlphanumericSenderIdInfo": {
        "description": "This information is attached to messages that are sent from alphanumeric sender IDs.",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "alphanumeric_sender_id_info_blob",
            "enum": [
              "alphanumeric_sender_id_info_blob"
            ],
            "description": "Identifies the type of the resource."
          },
          "hni": {
            "description": "HNI (Home Network Identity) of the recipient's phone.",
            "type": "string"
          }
        }
      },
      "NumberHealthMetrics": {
        "type": "object",
        "nullable": false,
        "required": [
          "message_count",
          "inbound_outbound_ratio",
          "success_ratio",
          "spam_ratio"
        ],
        "description": "High level health metrics about the number and it's messaging sending patterns.\n",
        "properties": {
          "message_count": {
            "type": "integer",
            "description": "The number of messages analyzed for the health metrics."
          },
          "inbound_outbound_ratio": {
            "type": "number",
            "format": "float",
            "description": "The ratio of messages received to the number of messages sent."
          },
          "success_ratio": {
            "type": "number",
            "format": "float",
            "description": "The ratio of messages sucessfully delivered to the number of messages attempted."
          },
          "spam_ratio": {
            "type": "number",
            "format": "float",
            "description": "The ratio of messages blocked for spam to the number of messages attempted."
          }
        }
      },
      "NewMessagingProfile": {
        "properties": {
          "name": {
            "type": "string",
            "description": "A user friendly name for the messaging profile."
          },
          "webhook_url": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "default": null,
            "description": "The URL where webhooks related to this messaging profile will be sent."
          },
          "webhook_failover_url": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "default": null,
            "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails."
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Whether the messaging profile is enabled or not."
          },
          "webhook_api_version": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "default": "2",
            "description": "Determines which webhook format will be used, API V1 or API V2."
          },
          "number_pool_settings": {
            "$ref": "#/components/schemas/NumberPoolSettings"
          }
        }
      },
      "MessagingProfile": {
        "type": "object",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "messaging_profile",
            "enum": [
              "messaging_profile"
            ],
            "description": "Identifies the type of the resource."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object."
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the organization that owns the resource."
          },
          "name": {
            "description": "A user friendly name for the messaging profile",
            "type": "string",
            "format": "string"
          },
          "webhook_url": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "description": "The URL where webhooks related to this messaging profile will be sent."
          },
          "webhook_failover_url": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails."
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies whether the messaging profile is enabled or not."
          },
          "whitelisted_destinations": {
            "type": "array",
            "description": "Destinations to which the messaging profile is allowed to send.",
            "items": {
              "type": "string",
              "description": "ISO 3166-1 alpha-2 country code.",
              "pattern": "^(([A-Z]{2}))$"
            }
          },
          "webhook_api_version": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "description": "Determines which webhook format will be used, API V1 or API V2."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          },
          "number_pool_settings": {
            "$ref": "#/components/schemas/NumberPoolSettings"
          }
        },
        "example": {
          "record_type": "messaging_profile",
          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "name": "Profile for Messages",
          "webhook_url": null,
          "webhook_failover_url": null,
          "enabled": true,
          "whitelisted_destinations": [
            "US"
          ],
          "webhook_api_version": "2",
          "created_at": "2019-01-23T18:10:02.574Z",
          "updated_at": "2019-01-23T18:10:02.574Z"
        }
      },
      "MessagingProfileUpdate": {
        "properties": {
          "name": {
            "description": "A user friendly name for the messaging profile",
            "type": "string",
            "format": "string"
          },
          "webhook_url": {
            "description": "The URL where webhooks related to this messaging profile will be sent.",
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "webhook_failover_url": {
            "description": "The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.",
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "enabled": {
            "description": "Specifies whether the messaging profile is enabled or not.",
            "type": "boolean"
          },
          "whitelisted_destinations": {
            "type": "array",
            "description": "Destinations to which the messaging profile is allowed to send.",
            "items": {
              "type": "string",
              "description": "ISO 3166-1 alpha-2 country code.",
              "pattern": "^(([A-Z]{2}))$"
            }
          },
          "webhook_api_version": {
            "type": "string",
            "enum": [
              "1",
              "2"
            ],
            "description": "Determines which webhook format will be used, API V1 or API V2."
          },
          "number_pool_settings": {
            "$ref": "#/components/schemas/NumberPoolSettings"
          }
        }
      },
      "MessagingPhoneNumber": {
        "type": "object",
        "example": {
          "record_type": "messaging_phone_number",
          "id": "+18665550001",
          "phone_number": "+18005550001",
          "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "created_at": "2019-01-23T18:10:02.574Z",
          "updated_at": "2019-01-23T18:10:02.574Z",
          "country_code": "US",
          "type": "toll-free",
          "health": {
            "message_count": 122,
            "inbound_outbound_ratio": 0.43,
            "success_ratio": 0.94,
            "spam_ratio": 0.06
          },
          "eligible_messaging_products": [
            "A2P"
          ],
          "traffic_type": "A2P",
          "messaging_product": "A2P",
          "features": {
            "sms": {
              "domestic_two_way": true,
              "international_inbound": true,
              "international_outbound": true
            },
            "mms": null
          }
        },
        "properties": {
          "record_type": {
            "type": "string",
            "example": "messaging_phone_number",
            "enum": [
              "messaging_phone_number"
            ],
            "description": "Identifies the type of the resource."
          },
          "id": {
            "type": "string",
            "description": "Uniquely identifies the resource or object."
          },
          "phone_number": {
            "type": "string",
            "format": "e164",
            "description": "+E.164 formatted phone number."
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Unique identifier for a messaging profile."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          },
          "country_code": {
            "type": "string",
            "description": "ISO 3166-1 alpha-2 country code.",
            "pattern": "^[A-Z]{2}$",
            "example": "US"
          },
          "type": {
            "type": "string",
            "description": "The type of the phone number",
            "enum": [
              "long-code",
              "toll-free",
              "short-code"
            ]
          },
          "health": {
            "$ref": "#/components/schemas/NumberHealthMetrics"
          },
          "eligible_messaging_products": {
            "type": "array",
            "description": "The messaging products that this number can be registered to use",
            "items": {
              "type": "string"
            }
          },
          "traffic_type": {
            "type": "string",
            "description": "The messaging traffic or use case for which the number is currently configured.",
            "example": "P2P"
          },
          "messaging_product": {
            "type": "string",
            "description": "The messaging product that the number is registered to use",
            "example": "P2P"
          },
          "features": {
            "type": "object",
            "properties": {
              "sms": {
                "$ref": "#/components/schemas/MessagingFeatureSet"
              },
              "mms": {
                "$ref": "#/components/schemas/MessagingFeatureSet"
              }
            }
          }
        }
      },
      "MessagingSettings": {
        "type": "object",
        "example": {
          "record_type": "messaging_settings",
          "id": "+18665550001",
          "phone_number": "+18005550001",
          "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "created_at": "2019-01-23T18:10:02.574Z",
          "updated_at": "2019-01-23T18:10:02.574Z",
          "country_code": "US",
          "type": "toll-free",
          "health": {
            "message_count": 122,
            "inbound_outbound_ratio": 0.43,
            "success_ratio": 0.94,
            "spam_ratio": 0.06
          },
          "eligible_messaging_products": [
            "A2P"
          ],
          "traffic_type": "A2P",
          "messaging_product": "A2P",
          "features": {
            "sms": {
              "domestic_two_way": true,
              "international_inbound": true,
              "international_outbound": true
            },
            "mms": null
          }
        },
        "properties": {
          "record_type": {
            "type": "string",
            "example": "messaging_settings",
            "enum": [
              "messaging_settings"
            ],
            "description": "Identifies the type of the resource."
          },
          "id": {
            "type": "string",
            "description": "Uniquely identifies the resource or object."
          },
          "phone_number": {
            "type": "string",
            "format": "e164",
            "description": "+E.164 formatted phone number."
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Unique identifier for a messaging profile."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          },
          "country_code": {
            "type": "string",
            "description": "ISO 3166-1 alpha-2 country code.",
            "pattern": "^[A-Z]{2}$",
            "example": "US"
          },
          "type": {
            "type": "string",
            "description": "The type of the phone number",
            "enum": [
              "long-code",
              "toll-free",
              "short-code"
            ]
          },
          "health": {
            "$ref": "#/components/schemas/NumberHealthMetrics"
          },
          "eligible_messaging_products": {
            "type": "array",
            "description": "The messaging products that this number can be registered to use",
            "items": {
              "type": "string"
            }
          },
          "traffic_type": {
            "type": "string",
            "description": "The messaging traffic or use case for which the number is currently configured.",
            "example": "P2P"
          },
          "messaging_product": {
            "type": "string",
            "description": "The messaging product that the number is registered to use",
            "example": "P2P"
          },
          "features": {
            "type": "object",
            "properties": {
              "sms": {
                "$ref": "#/components/schemas/MessagingFeatureSet"
              },
              "mms": {
                "$ref": "#/components/schemas/MessagingFeatureSet"
              }
            }
          }
        }
      },
      "MessagingPhoneNumberListElement": {
        "type": "object",
        "example": {
          "record_type": "messaging_phone_number",
          "phone_number": "+18005550001",
          "id": "+18665550001",
          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "created_at": "2019-01-23T18:10:02.574Z",
          "updated_at": "2019-01-23T18:10:02.574Z",
          "type": "toll-free",
          "country_code": "US"
        },
        "properties": {
          "record_type": {
            "type": "string",
            "example": "messaging_phone_number",
            "enum": [
              "messaging_phone_number"
            ],
            "description": "Identifies the type of the resource."
          },
          "phone_number": {
            "type": "string",
            "format": "e164",
            "description": "+E.164 formatted phone number."
          },
          "id": {
            "type": "string",
            "description": "Uniquely identifies the resource or object."
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the organization that owns the resource."
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Unique identifier for a messaging profile."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          },
          "type": {
            "type": "string",
            "description": "The type of the phone number",
            "enum": [
              "long-code",
              "toll-free",
              "short-code"
            ]
          },
          "country_code": {
            "type": "string",
            "description": "ISO 3166-1 alpha-2 country code.",
            "pattern": "^(([A-Z]{2}))$",
            "example": "US"
          }
        }
      },
      "MessagingPhoneNumberUpdate": {
        "type": "object",
        "properties": {
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Unique identifier for a messaging profile."
          },
          "messaging_product": {
            "type": "string",
            "description": "The requested messaging product the number should be on",
            "nullable": true,
            "example": "P2P"
          }
        }
      },
      "ShortCode": {
        "type": "object",
        "example": {
          "record_type": "short_code",
          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "short_code": "12345",
          "country_code": "US",
          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "created_at": "2019-01-23T18:10:02.574Z",
          "updated_at": "2019-01-23T18:10:02.574Z"
        },
        "properties": {
          "record_type": {
            "type": "string",
            "example": "short_code",
            "enum": [
              "short_code"
            ],
            "description": "Identifies the type of the resource."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object."
          },
          "short_code": {
            "type": "string",
            "description": "Short digit sequence used to address messages."
          },
          "country_code": {
            "type": "string",
            "description": "ISO 3166-1 alpha-2 country code.",
            "pattern": "^(([A-Z]{2}))$",
            "example": "US"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the organization that owns the resource."
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Unique identifier for a messaging profile."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          }
        }
      },
      "ShortCodeUpdate": {
        "type": "object",
        "properties": {
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Unique identifier for a messaging profile."
          }
        }
      },
      "NewAlphanumericSenderId": {
        "type": "object",
        "properties": {
          "alphanumeric_sender_id": {
            "type": "string",
            "description": "Alphanumeric sender ID."
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a messaging profile."
          }
        }
      },
      "AlphanumericSenderId": {
        "type": "object",
        "example": {
          "record_type": "alphanumeric_sender_id",
          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "alphanumeric_sender_id": "TelnyxID",
          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "messaging_profile_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "created_at": "2019-01-23T18:10:02.574Z",
          "updated_at": "2019-01-23T18:10:02.574Z"
        },
        "properties": {
          "record_type": {
            "type": "string",
            "example": "alphanumeric_sender_id",
            "enum": [
              "alphanumeric_sender_id"
            ],
            "description": "Identifies the type of the resource."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object."
          },
          "alphanumeric_sender_id": {
            "type": "string",
            "description": "Alphanumeric sender ID."
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the organization that owns the resource."
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a messaging profile."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          }
        }
      },
      "NewMessage": {
        "type": "object",
        "required": [
          "to"
        ],
        "properties": {
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a messaging profile."
          },
          "from": {
            "type": "string",
            "format": "address",
            "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)"
          },
          "to": {
            "oneOf": [
              {
                "type": "string",
                "format": "address",
                "description": "Receiving address (+E.164 formatted phone number)"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "address",
                  "description": "Receiving address (+E.164 formatted phone number)"
                }
              }
            ]
          },
          "text": {
            "type": "string",
            "description": "Message body (i.e., content) as a non-empty string"
          },
          "subject": {
            "type": "string",
            "description": "Subject of multimedia message"
          },
          "media_urls": {
            "description": "A list of media URLs. The total media size must be less than 1 MB.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "url"
            }
          },
          "webhook_url": {
            "description": "The URL where webhooks related to this message will be sent.",
            "type": "string",
            "format": "url"
          },
          "webhook_failover_url": {
            "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.",
            "type": "string",
            "format": "url"
          },
          "use_profile_webhooks": {
            "type": "boolean",
            "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile.",
            "default": true
          },
          "validity_period_secs": {
            "type": "number",
            "description": "If the message is not pulled off the queue and sending attempted within this amount of time, sending will be aborted and the message will be marked as expired."
          },
          "ignore_wire_type": {
            "type": "boolean",
            "description": "Typically, if the LRN dip indicates that the phone number is a land-line, the request will be rejected. However, some landlines can receive SMS, so that behavior can be overridden by setting this value to `true`"
          }
        }
      },
      "NewAlphanumericSenderIdMessage": {
        "type": "object",
        "required": [
          "from",
          "to",
          "messaging_profile_id"
        ],
        "properties": {
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a messaging profile."
          },
          "from": {
            "type": "string",
            "format": "address",
            "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)"
          },
          "to": {
            "oneOf": [
              {
                "type": "string",
                "format": "address",
                "description": "Receiving address (+E.164 formatted phone number)"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "address",
                  "description": "Receiving address (+E.164 formatted phone number)"
                }
              }
            ]
          },
          "text": {
            "type": "string",
            "description": "Message body (i.e., content) as a non-empty string"
          },
          "webhook_url": {
            "description": "The URL where webhooks related to this message will be sent.",
            "type": "string",
            "format": "url"
          },
          "webhook_failover_url": {
            "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.",
            "type": "string",
            "format": "url"
          },
          "use_profile_webhooks": {
            "type": "boolean",
            "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile.",
            "default": true
          },
          "validity_period_secs": {
            "type": "number",
            "description": "If the message is not pulled off the queue and sending attempted within this amount of time, sending will be aborted and the message will be marked as expired."
          },
          "ignore_wire_type": {
            "type": "boolean",
            "description": "Typically, if the LRN dip indicates that the phone number is a land-line, the request will be rejected. However, some landlines can receive SMS, so that behavior can be overridden by setting this value to `true`"
          }
        }
      },
      "NewNumberPoolMessage": {
        "type": "object",
        "required": [
          "to",
          "messaging_profile_id"
        ],
        "properties": {
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a messaging profile."
          },
          "to": {
            "oneOf": [
              {
                "type": "string",
                "format": "address",
                "description": "Receiving address (+E.164 formatted phone number)"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "address",
                  "description": "Receiving address (+E.164 formatted phone number)"
                }
              }
            ]
          },
          "text": {
            "type": "string",
            "description": "Message body (i.e., content) as a non-empty string"
          },
          "subject": {
            "type": "string",
            "description": "Subject of multimedia message"
          },
          "media_urls": {
            "description": "A list of media URLs. The total media size must be less than 1 MB.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "url"
            }
          },
          "webhook_url": {
            "description": "The URL where webhooks related to this message will be sent.",
            "type": "string",
            "format": "url"
          },
          "webhook_failover_url": {
            "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails.",
            "type": "string",
            "format": "url"
          },
          "use_profile_webhooks": {
            "type": "boolean",
            "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile.",
            "default": true
          },
          "validity_period_secs": {
            "type": "number",
            "description": "If the message is not pulled off the queue and sending attempted within this amount of time, sending will be aborted and the message will be marked as expired."
          },
          "ignore_wire_type": {
            "type": "boolean",
            "description": "Typically, if the LRN dip indicates that the phone number is a land-line, the request will be rejected. However, some landlines can receive SMS, so that behavior can be overridden by setting this value to `true`"
          }
        }
      },
      "MessageQueueInfo": {
        "type": "object",
        "properties": {
          "queue_lengths": {
            "description": "Approximate lengths of the user's queues",
            "type": "object",
            "properties": {
              "account": {
                "type": "integer",
                "description": "Length of the account queue."
              },
              "messaging_profile": {
                "type": "integer",
                "description": "Length of the messaging profile queue."
              },
              "phone_number": {
                "type": "integer",
                "description": "Length of the phone number queue."
              }
            }
          }
        }
      },
      "OutboundMessage": {
        "type": "object",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "message",
            "enum": [
              "message"
            ],
            "description": "Identifies the type of the resource."
          },
          "direction": {
            "type": "string",
            "example": "outbound",
            "enum": [
              "outbound"
            ],
            "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object."
          },
          "type": {
            "type": "string",
            "enum": [
              "sms",
              "mms"
            ],
            "description": "The type of message. This value can be either 'sms' or 'mms'."
          },
          "from": {
            "type": "string",
            "format": "address",
            "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)"
          },
          "to": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "format": "address"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "queued",
                    "sending",
                    "sent",
                    "delivered",
                    "sending_failed",
                    "delivery_failed",
                    "delivery_unconfirmed"
                  ]
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "ISO 8601 formatted date indicating when the resource was updated."
                }
              }
            }
          },
          "text": {
            "type": "string",
            "description": "Message body (i.e., content) as a non-empty string"
          },
          "media": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "url"
                },
                "content_type": {
                  "type": "string",
                  "format": "mime-type",
                  "nullable": true
                }
              }
            }
          },
          "webhook_url": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "description": "The URL where webhooks related to this message will be sent."
          },
          "webhook_failover_url": {
            "type": "string",
            "format": "url",
            "nullable": true,
            "description": "The failover URL where webhooks related to this message will be sent if sending to the primary URL fails."
          },
          "use_profile_webhooks": {
            "type": "boolean",
            "default": false,
            "description": "If the profile this number is associated with has webhooks, use them for delivery notifications. If webhooks are also specified on the message itself, they will be attempted first, then those on the profile."
          },
          "cost": {
            "type": "object",
            "nullable": true,
            "properties": {
              "amount": {
                "type": "string",
                "format": "decimal",
                "description": "The amount deducted from your account."
              },
              "currency": {
                "type": "string",
                "format": "iso4217",
                "description": "The ISO 4217 currency identifier."
              }
            }
          },
          "parts": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10,
            "description": "Number of parts into which the message's body must be split."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          },
          "valid_until": {
            "type": "string",
            "description": "Message must be out of the queue by this time or else it will be discarded and marked as 'sending_failed'. Once the message moves out of the queue, this field will be nulled",
            "format": "date-time",
            "nullable": true
          },
          "info_blob_fieldname": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShortCodeInfo"
              },
              {
                "$ref": "#/components/schemas/AlphanumericSenderIdInfo"
              }
            ]
          },
          "errors": {
            "type": "array",
            "description": "These errors may point at addressees when referring to unsuccessful/unconfirmed delivery statuses.",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "carrier": {
            "type": "string",
            "nullable": true,
            "description": "The carrier of the receiver."
          },
          "line_type": {
            "type": "string",
            "enum": [
              "Wireline",
              "Wireless",
              "VoWiFi",
              "VoIP",
              "Pre-Paid Wireless"
            ],
            "nullable": true,
            "description": "The line-type of the receiver."
          }
        },
        "example": {
          "record_type": "message",
          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "direction": "outbound",
          "type": "sms",
          "from": "+18445550001",
          "to": [
            {
              "address": "+18665550001",
              "status": "queued",
              "updated_at": "2019-01-23T18:10:02.574Z"
            }
          ],
          "text": "Hello, World!",
          "webhook_url": "https://www.example.com/hooks",
          "webhook_failover_url": "https://www.example.com/callbacks",
          "use_profile_webhooks": false,
          "cost": {
            "amount": "1.23",
            "currency": "USD"
          },
          "parts": 1,
          "created_at": "2019-01-23T18:10:02.574Z",
          "updated_at": "2019-01-23T18:10:02.574Z",
          "valid_until": "2019-01-23T18:10:02.574Z",
          "errors": [],
          "carrier": "Verizon",
          "line_type": "Wireless"
        }
      },
      "OutboundMessageEvent": {
        "properties": {
          "record_type": {
            "type": "string",
            "example": "event",
            "enum": [
              "event"
            ],
            "description": "Identifies the type of the resource."
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "event_type": {
            "type": "string",
            "example": "message.delivery_update"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "payload": {
            "$ref": "#/components/schemas/OutboundMessage"
          }
        }
      },
      "InboundMessage": {
        "properties": {
          "record_type": {
            "type": "string",
            "example": "message",
            "enum": [
              "message"
            ],
            "description": "Identifies the type of the resource."
          },
          "direction": {
            "type": "string",
            "example": "inbound",
            "enum": [
              "inbound"
            ],
            "description": "The direction of the message. Inbound messages are sent to you whereas outbound messages are sent from you."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object."
          },
          "type": {
            "type": "string",
            "enum": [
              "sms",
              "mms"
            ],
            "description": "The type of message. This value can be either 'sms' or 'mms'."
          },
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for a messaging profile."
          },
          "from": {
            "type": "string",
            "format": "address",
            "description": "Sending address (+E.164 formatted phone number, alphanumeric sender ID, or short code)"
          },
          "to": {
            "type": "string",
            "format": "address",
            "description": "Receiving address (+E.164 formatted phone number)"
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "address"
            }
          },
          "text": {
            "type": "string",
            "description": "Message body (i.e., content) as a non-empty string"
          },
          "media": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "url"
                },
                "content_type": {
                  "type": "string",
                  "format": "mime-type"
                },
                "size": {
                  "type": "integer"
                },
                "hash_sha256": {
                  "type": "string",
                  "minLength": 32,
                  "maxLength": 32
                }
              }
            }
          },
          "cost": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "format": "decimal",
                "description": "The amount deducted from your account."
              },
              "currency": {
                "type": "string",
                "format": "iso4217",
                "description": "The ISO 4217 currency identifier."
              }
            }
          },
          "parts": {
            "type": "integer",
            "example": 1,
            "description": "The ISO 4217 currency identifier."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          },
          "carrier": {
            "type": "string",
            "nullable": true,
            "description": "The carrier of the sender."
          },
          "line_type": {
            "type": "string",
            "enum": [
              "Wireline",
              "Wireless",
              "VoWiFi",
              "VoIP",
              "Pre-Paid Wireless"
            ],
            "nullable": true,
            "description": "The line-type of the sender."
          }
        }
      },
      "InboundMessageEvent": {
        "type": "object",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "event",
            "enum": [
              "event"
            ],
            "description": "Identifies the type of the resource."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object."
          },
          "event_type": {
            "type": "string",
            "example": "message.received",
            "enum": [
              "message.received"
            ],
            "description": "The type of event being delivered."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "payload": {
            "$ref": "#/components/schemas/InboundMessage"
          }
        }
      },
      "RegionInformation": {
        "properties": {
          "region_type": {
            "type": "string",
            "example": "country_code",
            "enum": [
              "country_code",
              "rate_center",
              "state",
              "location"
            ]
          },
          "region_name": {
            "type": "string",
            "example": "US"
          }
        }
      },
      "CostInformation": {
        "type": "object",
        "properties": {
          "upfront_cost": {
            "type": "string",
            "example": "3.21"
          },
          "monthly_cost": {
            "type": "string",
            "example": "6.54"
          },
          "currency": {
            "type": "string",
            "description": "The ISO 4217 code for the currency",
            "example": "USD"
          }
        }
      },
      "AvailablePhoneNumber": {
        "type": "object",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "available_phone_number",
            "enum": [
              "available_phone_number"
            ]
          },
          "phone_number": {
            "type": "string",
            "example": "+17735035030"
          },
          "vanity_format": {
            "type": "string"
          },
          "best_effort": {
            "type": "boolean",
            "example": false
          },
          "region_information": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionInformation"
            }
          },
          "cost_information": {
            "$ref": "#/components/schemas/CostInformation"
          },
          "regulatory_requirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegulatoryRequirement"
            }
          }
        },
        "example": {
          "record_type": "available_phone_number",
          "phone_number": "+17735035030",
          "vanity_format": "",
          "best_effort": false,
          "region_information": [
            {
              "region_type": "country_code",
              "region_name": "US"
            }
          ],
          "cost_information": {
            "upfront_cost": "3.21",
            "monthly_cost": "6.54",
            "currency": "USD"
          }
        }
      },
      "AvailablePhoneNumbersMetadata": {
        "type": "object",
        "example": {
          "total_results": 100,
          "best_effort_results": 50
        },
        "properties": {
          "total_results": {
            "type": "integer",
            "example": 1
          },
          "best_effort_results": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "PublicKey": {
        "type": "object",
        "description": "Public key used to verify webhooks",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "public_key",
            "enum": [
              "public_key"
            ]
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "public": {
            "type": "string",
            "description": "The public key for the private key used to sign webhooks associated with your organization."
          }
        },
        "example": {
          "record_type": "public_key",
          "organization_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "public": "-----BEGIN RSA PUBLIC KEY-----\nMIIBCgKCAQEA0fLzNgQ0YwweiG8HSwIUw2D7vsdyOXyOZUBJc55VAFGF2LrCmneF\nnpRTqPf2qQ1OdV5ZnndqsskJMX2251bvIj73+ehbdJxETpJiqAqzPieL5GI2EVaQ\nC/1V2BKistKdF82/VavR7pds2rjPkimbE8GQRgfSs1WGfWjaVbMD+U7rAIDzuhpf\n/cvRQB/G7S4FCSZ/Wd2QvkVd1Mi5e3n3VS0L+FD5BcblmBnjYyxw9N1cZi3ujwoj\nCubd3ZTZ96+vojS4gOOt1ojj9GhcBqK6AuBclbnLW/MBoX5LplzB3cterJdOjibe\nnyAsOXUdwW7Xoz353qYPxY6o5/kcG9DseQIDAQAB\n-----END RSA PUBLIC KEY-----"
        }
      },
      "AnswerRequest": {
        "type": "object",
        "title": "Answer request",
        "properties": {
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "StartForkingRequest": {
        "type": "object",
        "title": "Start Forking request",
        "properties": {
          "target": {
            "description": "The network target, <udp:ip_address:port>, where the call's RTP media packets should be forwarded. Both incoming and outgoing media packets will be delivered to the specified target, and information about the stream will be included in the encapsulation protocol header, including the direction (0 = inbound; 1 = outbound), leg (0 = A-leg; 1 = B-leg), and call_leg_id.",
            "type": "string",
            "example": "udp:192.0.2.1:9000"
          },
          "rx": {
            "description": "The network target, <udp:ip_address:port>, where the call's incoming RTP media packets should be forwarded.",
            "type": "string",
            "example": "192.0.2.1:9000"
          },
          "tx": {
            "description": "The network target, <udp:ip_address:port>, where the call's outgoing RTP media packets should be forwarded.",
            "type": "string",
            "example": "192.0.2.1:9001"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "StopForkingRequest": {
        "type": "object",
        "title": "Stop Forking request",
        "properties": {
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "RejectRequest": {
        "type": "object",
        "title": "Reject request",
        "properties": {
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "GatherUsingAudioRequest": {
        "type": "object",
        "title": "Gather using audio with all parameters request",
        "required": [
          "audio_url"
        ],
        "properties": {
          "audio_url": {
            "type": "string",
            "example": "http://example.com/message.wav",
            "description": "The URL of a file to be played back at the beginning of each prompt. The URL can point to either a WAV or MP3 file."
          },
          "invalid_audio_url": {
            "type": "string",
            "description": "The URL of a file to play when digits don't match the 'valid_digits' parameter or the number of digits is not between 'min' and 'max'. The URL can point to either a WAV or MP3 file.",
            "example": "http://example.com/invalid.wav"
          },
          "minimum_digits": {
            "description": "The minimum number of digits to fetch. This parameter has a minimum value of 1.",
            "default": 1,
            "type": "integer",
            "example": 1,
            "format": "int32"
          },
          "maximum_digits": {
            "description": "The maximum number of digits to fetch. This parameter has a maximum value of 128.",
            "default": 128,
            "type": "integer",
            "example": 10,
            "format": "int32"
          },
          "maximum_tries": {
            "description": "The maximum number of times the file should be played if there is no input from the user on the call.",
            "default": 3,
            "type": "integer",
            "example": 3,
            "format": "int32"
          },
          "timeout_millis": {
            "description": "The number of milliseconds to wait for a DTMF response after file playback ends before a replaying the sound file.",
            "default": 60000,
            "type": "integer",
            "example": 60000,
            "format": "int32"
          },
          "terminating_digit": {
            "description": "The digit used to terminate input if fewer than \"max\" digits have been gathered.",
            "default": "#",
            "type": "string",
            "example": "#"
          },
          "valid_digits": {
            "description": "A list of all digits accepted as valid.",
            "default": "0123456789#*",
            "type": "string",
            "example": "123"
          },
          "inter_digit_timeout_millis": {
            "description": "The number of milliseconds to wait for input between digits.",
            "default": 5000,
            "type": "integer",
            "example": 10000,
            "format": "int32"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "GatherUsingSpeakRequest": {
        "type": "object",
        "title": "Gather using speak with all parameters request",
        "required": [
          "voice",
          "language",
          "payload"
        ],
        "properties": {
          "payload": {
            "description": "The text or SSML to be converted into speech. There is a 5,000 character limit.",
            "type": "string",
            "example": "Say this on the call"
          },
          "invalid_payload": {
            "description": "The text or SSML to be converted into speech when digits don't match the 'valid_digits' parameter or the number of digits is not between 'min' and 'max'. There is a 5,000 character limit.",
            "type": "string",
            "example": "Say this on the call"
          },
          "payload_type": {
            "description": "The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).",
            "default": "text",
            "type": "string",
            "enum": [
              "text",
              "ssml"
            ],
            "example": "ssml"
          },
          "service_level": {
            "description": "This parameter impacts speech quality, language options and payload types. When using 'basic', only the 'en-US' language and payload type 'text' are allowed.",
            "default": "premium",
            "type": "string",
            "enum": [
              "basic",
              "premium"
            ],
            "example": "premium"
          },
          "voice": {
            "description": "The gender of the voice used to speak back the text.",
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "example": "female"
          },
          "language": {
            "description": "The language you want spoken.",
            "type": "string",
            "enum": [
              "de-DE",
              "en-AU",
              "en-GB",
              "en-US",
              "es-ES",
              "fr-CA",
              "fr-FR",
              "it-IT",
              "ja-JP",
              "ko-KR",
              "nl-NL",
              "pt-BR",
              "sv-SE",
              "tr-TR"
            ],
            "example": "en-US"
          },
          "minimum_digits": {
            "description": "The minimum number of digits to fetch. This parameter has a minimum value of 1.",
            "default": 1,
            "type": "integer",
            "example": 1,
            "format": "int32"
          },
          "maximum_digits": {
            "description": "The maximum number of digits to fetch. This parameter has a maximum value of 128.",
            "default": 128,
            "type": "integer",
            "example": 10,
            "format": "int32"
          },
          "maximum_tries": {
            "description": "The maximum number of times that a file should be played back if there is no input from the user on the call.",
            "default": 3,
            "type": "integer",
            "example": 3,
            "format": "int32"
          },
          "timeout_millis": {
            "description": "The number of milliseconds to wait for a DTMF response after speak ends before a replaying the sound file.",
            "default": 60000,
            "type": "integer",
            "example": 60000,
            "format": "int32"
          },
          "terminating_digit": {
            "description": "The digit used to terminate input if fewer than \"max\" digits have been gathered.",
            "default": "#",
            "type": "string",
            "example": "#"
          },
          "valid_digits": {
            "description": "A list of all digits accepted as valid.",
            "default": "0123456789#*",
            "type": "string",
            "example": "123"
          },
          "inter_digit_timeout_millis": {
            "description": "The number of milliseconds to wait for input between digits.",
            "default": 5000,
            "type": "integer",
            "example": 10000,
            "format": "int32"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "PlayAudioUrlRequest": {
        "type": "object",
        "title": "Play Audio URL request",
        "required": [
          "audio_url"
        ],
        "properties": {
          "audio_url": {
            "description": "The URL of the file to be played back on the call. The URL can point to either a WAV or MP3 file.",
            "type": "string",
            "example": "http://www.example.com/sounds/greeting.wav"
          },
          "loop": {
            "description": "The number of times the audio file should be played. If supplied, the value must be an integer between 1 and 100, or the special string 'infinity' for an endless loop.",
            "type": "string",
            "example": "infinity",
            "default": 1
          },
          "overlay": {
            "description": "When enabled, audio will be mixed on top of any other audio that is actively being played back. Note that `overlay: true` will only work if there is another audio file already being played on the call.",
            "type": "boolean",
            "example": "true",
            "default": "false"
          },
          "stop": {
            "description": "When specified, it stops the current audio being played.  Specify 'current' to stop the current audio being played, and to play the next file in the queue. Specify 'all' to stop the current audio file being played and to also clear all audio files from the queue.",
            "type": "string",
            "default": null,
            "example": "current"
          },
          "target_legs": {
            "description": "Specifies the leg or legs on which audio will be played. If supplied, the value must be either 'self', 'opposite' or 'both'.",
            "type": "string",
            "default": "self",
            "example": "self"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "PlaybackStopRequest": {
        "type": "object",
        "title": "Playback Stop request",
        "properties": {
          "stop": {
            "description": "Use 'current' to stop only the current audio or 'all' to stop all audios in the queue.",
            "type": "string",
            "default": "all",
            "example": "current"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "StartRecordingRequest": {
        "type": "object",
        "title": "Start Recording request",
        "required": [
          "format",
          "channels"
        ],
        "properties": {
          "format": {
            "description": "The audio file format used when storing the call recording. Can be either 'mp3' or 'wav'.",
            "type": "string",
            "enum": [
              "wav",
              "mp3"
            ],
            "example": "mp3"
          },
          "channels": {
            "description": "When 'dual', final audio file will be stereo recorded with the first leg on channel A, and the rest on channel B.",
            "enum": [
              "single",
              "dual"
            ],
            "type": "string",
            "example": "single"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          },
          "play_beep": {
            "description": "If enabled, a beep sound will be played at the start of a recording.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "StopRecordingRequest": {
        "type": "object",
        "title": "Strop Recording request",
        "properties": {
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "SendDTMFRequest": {
        "type": "object",
        "title": "Send DTMF request",
        "required": [
          "digits"
        ],
        "properties": {
          "digits": {
            "description": "DTMF digits to send. Valid digits are 0-9, A-D, *, and #. Pauses can be added using w (0.5s) and W (1s).",
            "type": "string",
            "example": "1www2WABCDw9"
          },
          "duration_millis": {
            "description": "Specifies for how many milliseconds each digit will be played in the audio stream. Ranges from 100 to 500ms",
            "type": "integer",
            "format": "int32",
            "example": 500,
            "default": 250
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "CallControlCommandResult": {
        "type": "object",
        "example": {
          "result": "ok"
        },
        "properties": {
          "result": {
            "type": "string",
            "example": "ok"
          }
        }
      },
      "CallEvent": {
        "type": "object",
        "required": [
          "record_type",
          "call_leg_id",
          "call_session_id",
          "event_timestamp",
          "name",
          "type",
          "metadata"
        ],
        "properties": {
          "record_type": {
            "type": "string",
            "enum": [
              "call_event"
            ]
          },
          "call_leg_id": {
            "type": "string",
            "description": "The unique identifier of an individual call leg."
          },
          "call_session_id": {
            "type": "string",
            "description": "The unique identifier of the call control session. A session may include multiple call leg events."
          },
          "event_timestamp": {
            "type": "string",
            "description": "Event timestamp"
          },
          "name": {
            "type": "string",
            "description": "Event name"
          },
          "type": {
            "type": "string",
            "description": "Event type",
            "enum": [
              "command",
              "webhook"
            ]
          },
          "metadata": {
            "type": "object",
            "description": "Event metadata, which includes raw event, and extra information based on event type"
          }
        },
        "example": {
          "record_type": "call_event",
          "call_leg_id": "308fe500-5213-11e9-ace7-02420a0f0668",
          "call_session_id": "308fec30-5213-11e9-9d3f-02420a0f0668",
          "event_timestamp": "2019-03-29T11:10:19.127783Z",
          "name": "call_hangup",
          "type": "webhook",
          "metadata": {}
        }
      },
      "CallControlInvalidParamsResponse": {
        "type": "object",
        "title": "Invalid command parameters response",
        "required": [
          "code",
          "title",
          "detail"
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": "90015"
          },
          "title": {
            "type": "string",
            "example": "Invalid Call Control ID"
          },
          "detail": {
            "type": "string",
            "example": "The call_control_id provided was not valid."
          }
        }
      },
      "Call": {
        "type": "object",
        "required": [
          "record_type",
          "call_control_id",
          "call_leg_id",
          "call_session_id",
          "is_alive"
        ],
        "example": {
          "record_type": "call",
          "call_session_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
          "call_leg_id": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1",
          "call_control_id": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ==",
          "is_alive": true
        },
        "properties": {
          "record_type": {
            "type": "string",
            "enum": [
              "call"
            ]
          },
          "call_session_id": {
            "description": "ID that is unique to the call session and can be used to correlate webhook events",
            "type": "string",
            "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1"
          },
          "call_leg_id": {
            "description": "ID that is unique to the call and can be used to correlate webhook events",
            "type": "string",
            "example": "428c31b6-7af4-4bcb-b7f5-5013ef9657c1"
          },
          "call_control_id": {
            "description": "Unique identifier and token for controlling the call. For Dial command it will always be null (dialing is asynchronous).",
            "type": "string",
            "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ=="
          },
          "is_alive": {
            "description": "Indicates whether the call is alive or not. For Dial command it will always be false (dialing is asynchronous).",
            "type": "boolean",
            "example": true
          }
        }
      },
      "TransferCallRequest": {
        "type": "object",
        "title": "Transfer call request",
        "required": [
          "to"
        ],
        "properties": {
          "to": {
            "description": "The DID or SIP URI to dial out and bridge to the given call.",
            "type": "string",
            "example": "+18005550100 or SIP:username@sip.telnyx.com"
          },
          "from": {
            "description": "The 'from' number to be used as the caller id presented to the destination ('to' number). The number should be in +E164 format. This attribute will default to the 'from' number of the original call if omitted.",
            "type": "string",
            "example": "+18005550101"
          },
          "audio_url": {
            "description": "The URL of a file to be played back to the callee before bridging the call. The URL can point to either a WAV or MP3 file.",
            "type": "string",
            "example": "http://www.example.com/sounds/greeting.wav"
          },
          "timeout_secs": {
            "description": "The number of seconds that Telnyx will wait for the call to be answered by the destination to which it is being transferred. If the timeout is reached before an answer is received, the call will hangup and a 'call_hangup' webhook with a 'hangup_cause' of 'timeout' will be sent. Minimum value is 5 seconds. Maximum value is 120 seconds.",
            "default": 30,
            "type": "integer",
            "example": 60,
            "format": "int32"
          },
          "time_limit_secs": {
            "description": "Sets the maximum duration of a Call Control Leg in seconds. If the time limit is reached, the call will hangup and a 'call_hangup' webhook with a 'hangup_cause' of 'time_limit' will be sent. For example, by setting a time limit of 120 seconds, a Call Leg will be automatically terminated two minutes after being answered. The default time limit is 14400 seconds or 4 hours and this is also the maximum allowed call length.",
            "default": 14400,
            "type": "integer",
            "example": 600,
            "format": "int32"
          },
          "answering_machine_detection": {
            "description": "Enables Answering Machine Detection. When a call is answered, Telnyx determines whether it was picked up by a human or a machine and sends an 'answering_machine_detection_result' webhook with the analysis result.",
            "default": false,
            "type": "boolean"
          },
          "custom_headers": {
            "description": "Custom headers to be added to the SIP INVITE.",
            "type": "array",
            "example": [
              {
                "name": "head_1",
                "value": "val_1"
              },
              {
                "name": "head_2",
                "value": "val_2"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomSipHeader"
            }
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          },
          "sip_auth_username": {
            "description": "SIP Authentication username used for SIP challenges.",
            "type": "string"
          },
          "sip_auth_password": {
            "description": "SIP Authentication password used for SIP challenges.",
            "type": "string"
          }
        }
      },
      "DialRequest": {
        "type": "object",
        "title": "Dial request",
        "required": [
          "connection_id",
          "to",
          "from"
        ],
        "properties": {
          "to": {
            "description": "The DID or SIP URI to dial out to.",
            "type": "string",
            "example": "+18005550100 or SIP:username@sip.telnyx.com"
          },
          "from": {
            "description": "The 'from' number to be used as the caller id presented to the destination ('to' number). The number should be in +E164 format. This attribute will default to the 'from' number of the original call if omitted.",
            "type": "string",
            "example": "+18005550101"
          },
          "connection_id": {
            "type": "string",
            "description": "The ID of the connection to be used when dialing the destination."
          },
          "audio_url": {
            "type": "string",
            "example": "http://example.com/message.wav",
            "description": "The URL of a file to be played back to the callee when the call is answered. The URL can point to either a WAV or MP3 file."
          },
          "timeout_secs": {
            "description": "The number of seconds that Telnyx will wait for the call to be answered by the destination to which it is being called. If the timeout is reached before an answer is received, the call will hangup and a 'call_hangup' webhook with a 'hangup_cause' of 'timeout' will be sent. Minimum value is 5 seconds. Maximum value is 120 seconds.",
            "default": 30,
            "type": "integer",
            "example": 60,
            "format": "int32"
          },
          "time_limit_secs": {
            "description": "Sets the maximum duration of a Call Control Leg in seconds. If the time limit is reached, the call will hangup and a 'call_hangup' webhook with a 'hangup_cause' of 'time_limit' will be sent. For example, by setting a time limit of 120 seconds, a Call Leg will be automatically terminated two minutes after being answered. The default time limit is 14400 seconds or 4 hours and this is also the maximum allowed call length.",
            "default": 14400,
            "type": "integer",
            "example": 600,
            "format": "int32"
          },
          "answering_machine_detection": {
            "description": "Enables Answering Machine Detection. When a call gets answered, Telnyx runs an algorithm to determine whether it was picked up by a human or a machine and sends an 'answering_machine_detection_result' webhook with the analysis result.",
            "default": false,
            "type": "boolean"
          },
          "custom_headers": {
            "description": "Custom headers to be added to the SIP INVITE.",
            "type": "array",
            "example": [
              {
                "name": "head_1",
                "value": "val_1"
              },
              {
                "name": "head_2",
                "value": "val_2"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/CustomSipHeader"
            }
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          },
          "link_to": {
            "description": "Use another call's control id for sharing the same call session id",
            "type": "string",
            "example": "ilditnZK_eVysupV21KzmzN_sM29ygfauQojpm4BgFtfX5hXAcjotg=="
          },
          "sip_auth_username": {
            "description": "SIP Authentication username used for SIP challenges.",
            "type": "string"
          },
          "sip_auth_password": {
            "description": "SIP Authentication password used for SIP challenges.",
            "type": "string"
          }
        }
      },
      "SpeakRequest": {
        "type": "object",
        "title": "Speak request",
        "required": [
          "payload",
          "voice",
          "language"
        ],
        "properties": {
          "payload": {
            "description": "The text or SSML to be converted into speech. There is a 5,000 character limit.",
            "type": "string",
            "example": "Say this on the call"
          },
          "payload_type": {
            "description": "The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).",
            "default": "text",
            "type": "string",
            "enum": [
              "text",
              "ssml"
            ],
            "example": "ssml"
          },
          "service_level": {
            "description": "This parameter impacts speech quality, language options and payload types. When using 'basic', only the 'en-US' language and payload type 'text' are allowed.",
            "default": "premium",
            "type": "string",
            "enum": [
              "basic",
              "premium"
            ],
            "example": "premium"
          },
          "stop": {
            "description": "When specified, it stops the current audio being played.  Specify 'current' to stop the current audio being played, and to play the next file in the queue. Specify 'all' to stop the current audio file being played and to also clear all audio files from the queue.",
            "type": "string",
            "default": null,
            "example": "current"
          },
          "voice": {
            "description": "The gender of the voice used to speak back the text.",
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "example": "female"
          },
          "language": {
            "description": "The language you want spoken.",
            "type": "string",
            "enum": [
              "de-DE",
              "en-AU",
              "en-GB",
              "en-US",
              "es-ES",
              "fr-CA",
              "fr-FR",
              "it-IT",
              "ja-JP",
              "ko-KR",
              "nl-NL",
              "pt-BR",
              "sv-SE",
              "tr-TR"
            ],
            "example": "en-US"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "BridgeRequest": {
        "type": "object",
        "title": "Bridge request",
        "required": [
          "call_control_id"
        ],
        "properties": {
          "call_control_id": {
            "description": "The call control id of the call you want to bridge with.",
            "type": "string",
            "example": "c8ac9611-25c3-494a-b8b4-2f036a18a6b2"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          },
          "park_after_unbridge": {
            "description": "Specifies behavior after the bridge ends (i.e. the opposite leg either hangs up or is transferred). If supplied with the value 'self', the current leg will be parked after unbridge. If not set, the default behavior is to hang up the leg.",
            "type": "string",
            "example": "self"
          }
        }
      },
      "CustomSipHeader": {
        "type": "object",
        "title": "Custom SIP header",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "description": "The name of the header to add.",
            "type": "string",
            "example": "head_1"
          },
          "value": {
            "description": "The value of the header.",
            "type": "string",
            "example": "val_1"
          }
        }
      },
      "HangupRequest": {
        "type": "object",
        "title": "Hangup request",
        "properties": {
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "Conference": {
        "type": "object",
        "required": [
          "record_type",
          "id",
          "name",
          "created_at",
          "expires_at"
        ],
        "properties": {
          "record_type": {
            "type": "string",
            "enum": [
              "conference"
            ]
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the conference"
          },
          "name": {
            "type": "string",
            "description": "Name of the conference"
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 formatted date of when the conference was created"
          },
          "expires_at": {
            "type": "string",
            "description": "ISO 8601 formatted date of when the conference will expire"
          }
        },
        "example": {
          "record_type": "conference",
          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "name": "All hands meeting",
          "created_at": "2019-01-23T18:10:02.574Z",
          "expires_at": "2019-01-23T18:10:02.574Z"
        }
      },
      "CreateConferenceRequest": {
        "required": [
          "call_control_id",
          "name"
        ],
        "type": "object",
        "title": "Create conference request",
        "properties": {
          "call_control_id": {
            "description": "Unique identifier and token for controlling the call",
            "type": "string",
            "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ=="
          },
          "name": {
            "description": "Name of the conference",
            "type": "string",
            "example": "Business"
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "JoinConferenceRequest": {
        "required": [
          "call_control_id"
        ],
        "type": "object",
        "title": "Join a conference request",
        "properties": {
          "call_control_id": {
            "description": "Unique identifier and token for controlling the call",
            "type": "string",
            "example": "AgDIxmoRX6QMuaIj_uXRXnPAXP0QlNfXczRrZvZakpWxBlpw48KyZQ=="
          },
          "client_state": {
            "description": "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.",
            "type": "string",
            "example": "aGF2ZSBhIG5pY2UgZGF5ID1d"
          },
          "command_id": {
            "description": "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same \"command_id\".",
            "type": "string",
            "example": "891510ac-f3e4-11e8-af5b-de00688a4901"
          }
        }
      },
      "ConferenceMuteRequest": {
        "type": "object",
        "title": "Mute Conference participants request",
        "properties": {
          "call_control_ids": {
            "description": "List of unique identifiers and tokens for controlling the call. When empty all participants will be muted.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ConferenceHoldRequest": {
        "type": "object",
        "title": "Hold Conference participants request",
        "properties": {
          "call_control_ids": {
            "description": "List of unique identifiers and tokens for controlling the call. When empty all participants will be placed on hold.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "audio_url": {
            "type": "string",
            "example": "http://example.com/message.wav",
            "description": "The URL of a file to be played back at the beginning of each prompt. The URL can point to either a WAV or MP3 file."
          }
        }
      },
      "ConferenceUnholdRequest": {
        "type": "object",
        "title": "Unhold Conference participants request",
        "properties": {
          "call_control_ids": {
            "description": "List of unique identifiers and tokens for controlling the call. When empty all participants will be unhold.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ConferenceCommandResult": {
        "type": "object",
        "title": "Command result",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "string",
            "example": "ok"
          }
        },
        "example": {
          "result": "ok"
        }
      },
      "SIMCard": {
        "type": "object",
        "title": "SIMCard",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object.",
            "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
          },
          "record_type": {
            "type": "string",
            "description": "Identifies the type of the resource.",
            "example": "sim_card"
          },
          "status": {
            "type": "string",
            "enum": [
              "activating",
              "active",
              "inactivating",
              "inactive",
              "data_limit_exceeded"
            ],
            "description": "The current status of the SIM card. It will be one of: <br/>\n<ul>\n  <li><code>activating</code> - the card is being activated</li>\n  <li><code>active</code> - the card is active and ready for use</li>\n  <li><code>inactivating</code> - the card is being inactivated</li>\n  <li><code>inactive</code> - the card has been inactivated and cannot be used</li>\n  <li><code>data_limit_exceeded</code> - the card has exceeded its data consumption limit</li>\n</ul>\nTransitioning between the active and inactive states may take a period of time.\n",
            "example": "active"
          },
          "iccid": {
            "type": "string",
            "description": "The ICCID is the identifier of the specific SIM card/chip. Each SIM is internationally identified by its integrated circuit card identifier (ICCID). ICCIDs are stored in the SIM card's memory and are also engraved or printed on the SIM card body during a process called personalization.\n",
            "example": "89310410106543789301"
          },
          "imsi": {
            "type": "string",
            "description": "SIM cards are identified on their individual operator networks by a unique International Mobile Subscriber Identity (IMSI). <br/>\nMobile network operators connect mobile phone calls and communicate with their market SIM cards using their IMSIs. The IMSI is stored in the Subscriber Identity Module (SIM) inside the phone and is sent by the phone to the appropriate network. It is used to acquire the details of the mobile in the Home Location Register (HLR) or the Visitor Location Register (VLR).\n",
            "example": "081932214823362973"
          },
          "msisdn": {
            "type": "string",
            "description": "Mobile Station International Subscriber Directory Number (MSISDN) is a number used to identify a mobile phone number internationally. <br/>\nMSISDN is defined by the E.164 numbering plan. It includes a country code and a National Destination Code which identifies the subscriber's operator.\n",
            "example": "+13109976224"
          },
          "ipv4": {
            "type": "string",
            "description": "The SIM's address in the currently connected network. This IPv4 address is usually obtained dynamically so it may vary according to the location or new connections.\n",
            "example": "192.168.0.0"
          },
          "ipv6": {
            "type": "string",
            "description": "The SIM's address in the currently connected network. This IPv6 address is usually obtained dynamically so it may vary according to the location or new connections.\n",
            "example": "2001:cdba:0000:0000:0000:0000:3257:9652"
          },
          "sim_card_group_id": {
            "type": "string",
            "format": "uuid",
            "description": "The group SIMCardGroup identification. This attribute can be <code>null</code> when it's present in an associated resource.",
            "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
          },
          "tags": {
            "type": "array",
            "description": "Searchable tags associated with the SIM card",
            "items": {
              "type": "string"
            },
            "example": [
              "personal",
              "customers",
              "active-customers"
            ]
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was created.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "updated_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was updated.",
            "example": "2018-02-02T22:2520:27.521Z"
          }
        },
        "example": {
          "id": "6a09cdc3-8948-47f0-aa62-74ac943d6c58",
          "record_type": "sim_card",
          "status": "active",
          "iccid": "89310410106543789301",
          "imsi": "081932214823362973",
          "msisdn": "+13109976224",
          "ipv4": "192.168.0.0",
          "ipv6": "2001:cdba:0000:0000:0000:0000:3257:9652",
          "sim_card_group_id": "6a09cdc3-8948-47f0-aa62-74ac943d6c58",
          "tags": [
            "personal"
          ],
          "created_at": "2018-02-02T22:25:27.521Z",
          "updated_at": "2018-02-02T22:2520:27.521Z"
        }
      },
      "SIMCardUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object.",
            "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
          },
          "record_type": {
            "type": "string",
            "description": "Identifies the type of the resource.",
            "example": "sim_card"
          },
          "status": {
            "type": "string",
            "enum": [
              "activating",
              "active",
              "inactivating",
              "inactive",
              "data_limit_exceeded"
            ],
            "description": "The current status of the SIM card. It will be one of: <br/>\n<ul>\n  <li><code>activating</code> - the card is being activated</li>\n  <li><code>active</code> - the card is active and ready for use</li>\n  <li><code>inactivating</code> - the card is being inactivated</li>\n  <li><code>inactive</code> - the card has been inactivated and cannot be used</li>\n  <li><code>data_limit_exceeded</code> - the card has exceeded its data consumption limit</li>\n</ul>\nTransitioning between the active and inactive states may take a period of time.\n",
            "example": "active"
          },
          "iccid": {
            "type": "string",
            "description": "The ICCID is the identifier of the specific SIM card/chip. Each SIM is internationally identified by its integrated circuit card identifier (ICCID). ICCIDs are stored in the SIM card's memory and are also engraved or printed on the SIM card body during a process called personalization.\n",
            "example": "89310410106543789301"
          },
          "imsi": {
            "type": "string",
            "description": "SIM cards are identified on their individual operator networks by a unique International Mobile Subscriber Identity (IMSI). <br/>\nMobile network operators connect mobile phone calls and communicate with their market SIM cards using their IMSIs. The IMSI is stored in the Subscriber Identity Module (SIM) inside the phone and is sent by the phone to the appropriate network. It is used to acquire the details of the mobile in the Home Location Register (HLR) or the Visitor Location Register (VLR).\n",
            "example": "081932214823362973"
          },
          "msisdn": {
            "type": "string",
            "description": "Mobile Station International Subscriber Directory Number (MSISDN) is a number used to identify a mobile phone number internationally. <br/>\nMSISDN is defined by the E.164 numbering plan. It includes a country code and a National Destination Code which identifies the subscriber's operator.\n",
            "example": "+13109976224"
          },
          "ipv4": {
            "type": "string",
            "description": "The SIM's address in the currently connected network. This IPv4 address is usually obtained dynamically so it may vary according to the location or new connections.\n",
            "example": "192.168.0.0"
          },
          "ipv6": {
            "type": "string",
            "description": "The SIM's address in the currently connected network. This IPv6 address is usually obtained dynamically so it may vary according to the location or new connections.\n",
            "example": "2001:cdba:0000:0000:0000:0000:3257:9652"
          },
          "sim_card_group_id": {
            "type": "string",
            "format": "uuid",
            "description": "The group SIMCardGroup identification. This attribute can be <code>null</code> when it's present in an associated resource.",
            "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
          },
          "tags": {
            "type": "array",
            "description": "Searchable tags associated with the SIM card",
            "items": {
              "type": "string"
            },
            "example": [
              "personal",
              "customers",
              "active-customers"
            ]
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was created.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "updated_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was updated.",
            "example": "2018-02-02T22:2520:27.521Z"
          }
        }
      },
      "SimpleSIMCard": {
        "type": "object",
        "title": "SIMCard",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Uniquely identifies the resource or object.",
            "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
          },
          "record_type": {
            "type": "string",
            "description": "Identifies the type of the resource.",
            "example": "sim_card"
          },
          "status": {
            "type": "string",
            "enum": [
              "activating",
              "active",
              "inactivating",
              "inactive",
              "data_limit_exceeded"
            ],
            "description": "The current status of the SIM card. It will be one of: <br/>\n<ul>\n  <li><code>activating</code> - the card is being activated</li>\n  <li><code>active</code> - the card is active and ready for use</li>\n  <li><code>inactivating</code> - the card is being inactivated</li>\n  <li><code>inactive</code> - the card has been inactivated and cannot be used</li>\n  <li><code>data_limit_exceeded</code> - the card has exceeded its data consumption limit</li>\n</ul>\nTransitioning between the active and inactive states may take a period of time.\n",
            "example": "active"
          },
          "iccid": {
            "type": "string",
            "description": "The ICCID is the identifier of the specific SIM card/chip. Each SIM is internationally identified by its integrated circuit card identifier (ICCID). ICCIDs are stored in the SIM card's memory and are also engraved or printed on the SIM card body during a process called personalization.\n",
            "example": "89310410106543789301"
          },
          "imsi": {
            "type": "string",
            "description": "SIM cards are identified on their individual operator networks by a unique International Mobile Subscriber Identity (IMSI). <br/>\nMobile network operators connect mobile phone calls and communicate with their market SIM cards using their IMSIs. The IMSI is stored in the Subscriber Identity Module (SIM) inside the phone and is sent by the phone to the appropriate network. It is used to acquire the details of the mobile in the Home Location Register (HLR) or the Visitor Location Register (VLR).\n",
            "example": "081932214823362973"
          },
          "msisdn": {
            "type": "string",
            "description": "Mobile Station International Subscriber Directory Number (MSISDN) is a number used to identify a mobile phone number internationally. <br/>\nMSISDN is defined by the E.164 numbering plan. It includes a country code and a National Destination Code which identifies the subscriber's operator.\n",
            "example": "+13109976224"
          },
          "sim_card_group_id": {
            "type": "string",
            "format": "uuid",
            "description": "The group SIMCardGroup identification. This attribute can be <code>null</code> when it's present in an associated resource.",
            "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
          },
          "tags": {
            "type": "array",
            "description": "Searchable tags associated with the SIM card",
            "items": {
              "type": "string"
            },
            "example": [
              "personal",
              "customers",
              "active-customers"
            ]
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was created.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "updated_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was updated.",
            "example": "2018-02-02T22:2520:27.521Z"
          }
        },
        "example": {
          "id": "6a09cdc3-8948-47f0-aa62-74ac943d6c58",
          "record_type": "sim_card",
          "status": "active",
          "iccid": "89310410106543789301",
          "imsi": "081932214823362973",
          "msisdn": "+13109976224",
          "sim_card_group_id": "6a09cdc3-8948-47f0-aa62-74ac943d6c58",
          "tags": [
            "recent"
          ],
          "created_at": "2018-02-02T22:25:27.521Z",
          "updated_at": "2018-02-02T22:2520:27.521Z"
        }
      },
      "PhoneNumberResponse": {
        "type": "object",
        "example": {
          "id": "86f58db9-0fe3-4adc-9d1f-46e66e6e9323",
          "record_type": "phone_number",
          "phone_number": "+19705555098",
          "status": "active",
          "tags": [
            "tag_1",
            "tag_2"
          ],
          "address_id": "dc8f39ac-953d-4520-b93b-786ae87db0da",
          "external_pin": "1234",
          "connection_id": "44f82b2f-2eb2-443d-95dd-370d7e826f2c",
          "connection_name": "connection-name",
          "messaging_enabled": true,
          "messaging_profile_id": "abc85f64-5717-4562-b3fc-2c9600000000",
          "billing_group_id": "86f58db9-0fe3-4adc-9d1f-46e66e6e9323",
          "emergency_enabled": true,
          "call_forwarding_enabled": true,
          "cnam_listing_enabled": true,
          "caller_id_name_enabled": true,
          "call_recording_enabled": true,
          "created_at": "2019-10-23T18:10:00.000Z",
          "updated_at": "2019-10-24T18:10:00.000Z"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifies the phone number."
          },
          "record_type": {
            "type": "string",
            "example": "phone_number",
            "description": "Identifies the type of the resource."
          },
          "phone_number": {
            "type": "string",
            "description": "The +E.164-formatted phone number associated with this record"
          },
          "status": {
            "type": "string",
            "description": "The phone number's current status",
            "enum": [
              "purchase-pending",
              "purchase-failed",
              "port-pending",
              "port-failed",
              "active",
              "deleted",
              "emergency-only",
              "ported-out",
              "port-out-pending"
            ]
          },
          "tags": {
            "type": "array",
            "description": "A list of user-assigned tags to help manage the phone number.",
            "items": {
              "type": "string"
            }
          },
          "address_id": {
            "type": "string",
            "description": "Identifies the address associated with the phone number."
          },
          "external_pin": {
            "type": "string",
            "description": "If someone attempts to port your phone number away from Telnyx and\n            your phone number has an external PIN set, Telnyx will attempt to verify that you provided\n            the correct external PIN to the winning carrier. Note that not all carriers\n            cooperate with this security mechanism."
          },
          "connection_name": {
            "type": "string",
            "description": "The user-assigned name of the connection to be associated with this phone number."
          },
          "connection_id": {
            "type": "string",
            "description": "Identifies the connection associated with the phone number."
          },
          "messaging_enabled": {
            "type": "boolean",
            "description": "Indicates whether messaging services are enabled for this number."
          },
          "messaging_profile_id": {
            "type": "string",
            "description": "Identifies the messaging profile associated with the phone number."
          },
          "billing_group_id": {
            "type": "string",
            "description": "Identifies the billing group associated with the phone number."
          },
          "emergency_enabled": {
            "type": "boolean",
            "description": "Indicates whether emergency services are enabled for this number."
          },
          "call_forwarding_enabled": {
            "type": "boolean",
            "description": "Indicates whether call forwarding is enabled for this number."
          },
          "cnam_listing_enabled": {
            "type": "boolean",
            "description": "Indicates whether a CNAM listing is enabled for this number."
          },
          "caller_id_name_enabled": {
            "type": "boolean",
            "description": "Indicates whether caller ID is enabled for this number."
          },
          "call_recording_enabled": {
            "type": "boolean",
            "description": "Indicates whether call recording is enabled for this number."
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          }
        }
      },
      "PhoneNumberUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Uniquely identifies the resource or object."
          },
          "tags": {
            "type": "array",
            "description": "A list of user-assigned tags to help organize phone numbers.",
            "items": {
              "type": "string"
            }
          },
          "address_id": {
            "type": "string",
            "description": "Specifies the address to associate with the phone number."
          },
          "external_pin": {
            "type": "string",
            "description": "If someone attempts to port your phone number away from Telnyx and\n              your phone number has an external PIN set, we will attempt to verify that you provided\n              the correct external PIN to the winning carrier. Note that not all carriers\n              cooperate with this security mechanism."
          },
          "connection_id": {
            "type": "string",
            "description": "Identifies the connection associated with the phone number."
          },
          "billing_group_id": {
            "type": "string",
            "description": "Identifies the billing group associated with the phone number."
          }
        }
      },
      "MessagingResponse": {
        "type": "object",
        "properties": {
          "messaging_profile_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "Unique identifier for a messaging profile."
          },
          "messaging_profile_name": {
            "type": "string",
            "description": "Messaging profile name.",
            "example": "Test Name"
          },
          "type": {
            "type": "string",
            "description": "The type of the phone number.",
            "enum": [
              "long-code",
              "toll-free",
              "short-code"
            ]
          },
          "country_code": {
            "type": "string",
            "description": "ISO 3166-1 alpha-2 country code.",
            "pattern": "^(([A-Z]{2}))$",
            "example": "US"
          },
          "traffic_type": {
            "type": "string",
            "description": "The messaging traffic or use case for which the number is currently configured.",
            "example": "P2P"
          },
          "messaging_product": {
            "type": "string",
            "description": "The messaging product that the number is registered to use.",
            "example": "P2P"
          },
          "features": {
            "type": "object",
            "properties": {
              "sms": {
                "$ref": "#/components/schemas/MessagingFeatureSet"
              },
              "mms": {
                "$ref": "#/components/schemas/MessagingFeatureSet"
              }
            }
          }
        }
      },
      "PhoneNumberVoice": {
        "type": "object",
        "example": {
          "id": "42587e44-3a3e-46de-9255-0c9a7a1d1ec7",
          "record_type": "voice_settings",
          "connection_id": "1d0e6cb8-8668-462e-94c6-49ae0f0ed48b",
          "tech_prefix_enabled": false,
          "translated_number": "+13035559999",
          "call_forwarding": {
            "forwards_to": "+13035557777",
            "forwarding_type": "always"
          },
          "cnam_listing": {
            "cnam_listing_enabled": false,
            "cnam_listing_details": ""
          },
          "emergency": {
            "emergency_enabled": false,
            "emergency_address_id": "string"
          },
          "usage_payment_method": "pay-per-minute",
          "media_features": {
            "rtp_auto_adjust_enabled": true,
            "media_handling_mode": "default",
            "accept_any_rtp_packets_enabled": false,
            "t38_fax_gateway_enabled": false
          },
          "call_recording": {
            "inbound_call_recording_enabled": true,
            "inbound_call_recording_format": "wav",
            "inbound_call_recording_channels": "single"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "42587e44-3a3e-46de-9255-0c9a7a1d1ec7",
            "description": "Uniquely identifies the resource or object."
          },
          "record_type": {
            "type": "string",
            "example": "voice_settings",
            "description": "Identifies the type of the resource."
          },
          "connection_id": {
            "type": "string",
            "example": "1d0e6cb8-8668-462e-94c6-49ae0f0ed48b",
            "description": "Identifies the connection associated with this phone number."
          },
          "tech_prefix_enabled": {
            "type": "boolean",
            "default": false,
            "example": false,
            "description": "Controls whether a tech prefix is enabled for this phone number."
          },
          "translated_number": {
            "type": "string",
            "example": "+13035559999",
            "default": "",
            "description": "This field allows you to rewrite the destination number of an inbound call before the call is routed to you. The value of this field may be any alphanumeric value, and the value will replace the number originally dialed."
          },
          "call_forwarding": {
            "$ref": "#/components/schemas/CallForwarding"
          },
          "cnam_listing": {
            "$ref": "#/components/schemas/CNAMListing"
          },
          "emergency": {
            "$ref": "#/components/schemas/Emergency"
          },
          "usage_payment_method": {
            "type": "string",
            "enum": [
              "pay-per-minute",
              "channel"
            ],
            "default": "pay-per-minute",
            "example": "pay-per-minute",
            "description": "Controls whether a number is billed per minute or uses your concurrent channels."
          },
          "media_features": {
            "$ref": "#/components/schemas/MediaFeatures"
          },
          "call_recording": {
            "$ref": "#/components/schemas/CallRecording"
          }
        }
      },
      "VoiceUpdate": {
        "type": "object",
        "properties": {
          "tech_prefix_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether a tech prefix is enabled for this phone number."
          },
          "translated_number": {
            "type": "string",
            "description": "This field allows you to rewrite the destination number of an inbound call before the call is routed to you. The value of this field may be any alphanumeric value, and the value will replace the number originally dialed."
          },
          "call_forwarding": {
            "$ref": "#/components/schemas/CallForwarding"
          },
          "cnam_listing": {
            "$ref": "#/components/schemas/CNAMListing"
          },
          "usage_payment_method": {
            "type": "string",
            "enum": [
              "pay-per-minute",
              "channel"
            ],
            "default": "pay-per-minute",
            "description": "Controls whether a number is billed per minute or uses your concurrent channels."
          },
          "media_features": {
            "$ref": "#/components/schemas/MediaFeatures"
          },
          "call_recording": {
            "$ref": "#/components/schemas/CallRecording"
          }
        }
      },
      "CallForwarding": {
        "description": "The call forwarding settings for a phone number.",
        "type": "object",
        "properties": {
          "forwards_to": {
            "type": "string",
            "description": "The phone number to which inbound calls to this number are forwarded. Inbound calls will not be forwarded if this field is left blank. If set, must be a +E.164-formatted phone number.",
            "example": "+18665552368"
          },
          "forwarding_type": {
            "type": "string",
            "description": "Call forwarding type. 'forwards_to' must be set for this to have an effect.",
            "enum": [
              "always",
              "on_failure",
              "never"
            ],
            "example": "always"
          }
        }
      },
      "CNAMListing": {
        "description": "The CNAM listing settings for a phone number.",
        "type": "object",
        "properties": {
          "cnam_listing_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enables CNAM listings for this number. Requires cnam_listing_details to also be set.",
            "example": false
          },
          "cnam_listing_details": {
            "type": "string",
            "description": "The CNAM listing details for this number. Must be alphanumeric characters or spaces with a maximum length of 15. Requires cnam_listing_enabled to also be set to true.",
            "example": "no details"
          }
        }
      },
      "Emergency": {
        "description": "The emergency services settings for a phone number.",
        "type": "object",
        "properties": {
          "emergency_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Allows you to enable or disable emergency services on the phone number. In order to enable emergency services, you must also set an emergency_address_id.",
            "example": false
          },
          "emergency_address_id": {
            "type": "string",
            "description": "Identifies the address to be used with emergency services.",
            "example": "442191469269222625"
          }
        }
      },
      "MediaFeatures": {
        "description": "The media features settings for a phone number.",
        "type": "object",
        "properties": {
          "rtp_auto_adjust_enabled": {
            "type": "boolean",
            "default": true,
            "description": "When RTP Auto-Adjust is enabled, the destination RTP address port will be automatically changed to match the source of the incoming RTP packets.",
            "example": true
          },
          "media_handling_mode": {
            "type": "string",
            "default": "default",
            "enum": [
              "default",
              "proxy"
            ],
            "description": "Controls how media is handled for the phone number. default: media routed through Telnyx with transcode support. proxy: media routed through Telnyx with no transcode support.",
            "example": "default"
          },
          "accept_any_rtp_packets_enabled": {
            "type": "boolean",
            "default": false,
            "description": "When enabled, Telnyx will accept RTP packets from any customer-side IP address and port, not just those to which Telnyx is sending RTP.",
            "example": false
          },
          "t38_fax_gateway_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether Telnyx will accept a T.38 re-INVITE for this phone number. Note that Telnyx will not send a T.38 re-INVITE; this option only controls whether one will be accepted.",
            "example": false
          }
        }
      },
      "CallRecording": {
        "description": "The call recording settings for a phone number.",
        "type": "object",
        "properties": {
          "inbound_call_recording_enabled": {
            "type": "boolean",
            "default": false,
            "description": "When enabled, any inbound call to this number will be recorded.",
            "example": false
          },
          "inbound_call_recording_format": {
            "type": "string",
            "enum": [
              "wav",
              "mp3"
            ],
            "default": "wav",
            "description": "The audio file format for calls being recorded.",
            "example": "wav"
          },
          "inbound_call_recording_channels": {
            "type": "string",
            "enum": [
              "single",
              "dual"
            ],
            "default": "single",
            "description": "When using 'dual' channels, final audio file will be stereo recorded with the first leg on channel A, and the rest on channel B.",
            "example": "single"
          }
        }
      },
      "BillingGroup": {
        "type": "object",
        "properties": {
          "record_type": {
            "type": "string",
            "example": "billing_group",
            "enum": [
              "billing_group"
            ],
            "description": "Identifies the type of the resource."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Identifies the type of resource."
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the organization that owns the resource."
          },
          "name": {
            "type": "string",
            "format": "string",
            "description": "A name for the billing group"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 formatted date indicating when the resource was updated."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "ISO 8601 formatted date indicating when the resource was removed."
          }
        },
        "example": {
          "record_type": "billing_group",
          "id": "f5586561-8ff0-4291-a0ac-84fe544797bd",
          "organization_id": "f1486bae-f067-460c-ad43-73a92848f902",
          "name": "My billing group name",
          "created_at": "2019-10-15T10:07:15.527Z",
          "updated_at": "2019-10-15T10:07:15.527Z",
          "deleted_at": null
        }
      },
      "NewBillingGroup": {
        "properties": {
          "name": {
            "type": "string",
            "description": "A name for the billing group"
          }
        }
      },
      "UpdateBillingGroup": {
        "properties": {
          "name": {
            "type": "string",
            "description": "A name for the billing group"
          }
        }
      },
      "PaginationMetaSimple": {
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "example": 2
          },
          "page_size": {
            "type": "integer",
            "example": 25
          },
          "total_pages": {
            "type": "integer",
            "example": 3
          },
          "total_results": {
            "type": "integer",
            "example": 55
          }
        }
      },
      "IPConnection": {
        "type": "object",
        "title": "IP Connection",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Identifies the type of resource.",
            "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
          },
          "record_type": {
            "type": "string",
            "description": "Identifies the type of the resource.",
            "example": "ip_connection"
          },
          "active": {
            "type": "boolean",
            "description": "Defaults to true"
          },
          "anchorsite_override": {
            "type": "string",
            "enum": [
              "Latency",
              "Chicago, IL",
              "Ashburn, VA",
              "San Jose, CA",
              "Sydney, Australia",
              "Amsterdam, Netherlands",
              "London, UK",
              "Toronto, Canada",
              "Vancouver, Canada"
            ],
            "description": "`Latency` directs Telnyx to route media through the site with the lowest round-trip time to the user's connection. Telnyx calculates this time using ICMP ping messages. This can be disabled by specifying a site to handle all media.\n"
          },
          "connection_name": {
            "type": "string"
          },
          "sip_uri_calling_preference": {
            "type": "string",
            "default": "disabled",
            "description": "This feature enables inbound SIP URI calls to your Credential Auth Connection. If enabled for all (unrestricted) then anyone who calls the SIP URI <your-username>@telnyx.com will be connected to your Connection. You can also choose to allow only calls that are originated on any Connections under your account (internal).\n",
            "enum": [
              "disabled",
              "unrestricted",
              "internal"
            ]
          },
          "transport_protocol": {
            "type": "string",
            "description": "One of UDP, TLS, or TCP. Applies only to connections with IP authentication or FQDN authentication.\n",
            "default": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS"
            ]
          },
          "default_on_hold_comfort_noise_enabled": {
            "type": "boolean",
            "default": true,
            "description": "When enabled, Telnyx will generate comfort noise when you place the call on hold. If disabled, you will need to generate comfort noise or on hold music to avoid RTP timeout.\n"
          },
          "dtmf_type": {
            "type": "string",
            "enum": [
              "RFC 2833",
              "Inband",
              "SIP INFO"
            ],
            "default": "RFC 2833",
            "description": "Sets the type of DTMF digits sent from Telnyx to this Connection. Note that DTMF digits sent to Telnyx will be accepted in all formats.\n"
          },
          "encode_contact_header_enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Encode the SIP contact header sent by Telnyx to avoid issues for NAT or ALG scenarios.\n"
          },
          "encrypted_media": {
            "type": "string",
            "enum": [
              "SRTP",
              "ZRTP"
            ],
            "description": "Enable use of SRTP or ZRTP for encryption. Valid values are those listed or null. Cannot be set to non-null if the transport_portocol is TLS.\n"
          },
          "onnet_t38_passthrough_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable on-net T38 if you prefer the sender and receiver negotiating T38 directly if both are on the Telnyx network. If this is disabled, Telnyx will be able to use T38 on just one leg of the call depending on each leg's settings.\n"
          },
          "rtcp_settings": {
            "$ref": "#/components/schemas/ConnectionRTCPSettings"
          },
          "last_registered_ip": {
            "type": "string",
            "description": "IP from the last successful registration attempt.",
            "example": "192.0.2.1"
          },
          "sip_reply_code": {
            "type": "integer"
          },
          "sip_reply_reason": {
            "type": "string"
          },
          "registration_status": {
            "type": "integer",
            "description": "0 = Not Applicable<br/> 1 = Not Registered<br/> 2 = Failed<br/> 3 = Expired<br/> 4 = Success<br/> 5 = Unregistered\n",
            "default": 0
          },
          "registration_status_updated_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was created.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "updated_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was updated.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "inbound": {
            "$ref": "#/components/schemas/IPInbound"
          },
          "outbound": {
            "$ref": "#/components/schemas/IPOutbound"
          }
        },
        "example": {
          "id": "6a09cdc3-8948-47f0-aa62-74ac943d6c58",
          "record_type": "ip_connection",
          "active": true,
          "anchorsite_override": "Latency",
          "connection_name": "string",
          "sip_uri_calling_preference": "disabled",
          "transport_protocol": "UDP",
          "default_on_hold_comfort_noise_enabled": true,
          "dtmf_type": "RFC 2833",
          "encode_contact_header_enabled": true,
          "encrypted_media": "SRTP",
          "onnet_t38_passthrough_enabled": true,
          "rtcp_settings": {
            "port": "rtcp-mux",
            "report_enabled": true,
            "report_frequency_secs": 10
          },
          "last_registered_ip": "192.0.2.1",
          "sip_reply_code": 10,
          "sip_reply_reason": "string",
          "registration_status": 10,
          "registration_status_updated_at": "string",
          "created_at": "2018-02-02T22:25:27.521Z",
          "updated_at": "2018-02-02T22:25:27.521Z",
          "inbound": {
            "ani_number_format": "+E.164",
            "dnis_number_format": 10,
            "codecs": [
              "G722"
            ],
            "default_primary_ip_id": "string",
            "default_secondary_ip_id": "string",
            "default_tertiary_ip_id": "string",
            "default_routing_method": "sequential",
            "channel_limit": 10,
            "generate_ringback_tone": true,
            "isup_headers_enabled": true,
            "prack_enabled": true,
            "privacy_zone_enabled": true,
            "sip_compact_headers_enabled": true,
            "sip_region": "US",
            "sip_subdomain": "string",
            "sip_subdomain_receive_settings": "only_my_connections",
            "timeout_1xx_secs": 10,
            "timeout_2xx_secs": 10
          },
          "outbound": {
            "call_parking_enabled": true,
            "ani_override": "string",
            "ani_override_type": "always",
            "channel_limit": 10,
            "instant_ringback_enabled": true,
            "generate_ringback_tone": true,
            "localization": "string",
            "t38_reinvite_source": "telnyx",
            "tech_prefix": "string",
            "ip_authentication_method": "token",
            "ip_authentication_token": "string"
          }
        }
      },
      "IPConnectionCreate": {
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Defaults to true"
          },
          "anchorsite_override": {
            "type": "string",
            "enum": [
              "Latency",
              "Chicago, IL",
              "Ashburn, VA",
              "San Jose, CA",
              "Sydney, Australia",
              "Amsterdam, Netherlands",
              "London, UK",
              "Toronto, Canada",
              "Vancouver, Canada"
            ],
            "description": "`Latency` directs Telnyx to route media through the site with the lowest round-trip time to the user's connection. Telnyx calculates this time using ICMP ping messages. This can be disabled by specifying a site to handle all media.\n"
          },
          "connection_name": {
            "type": "string"
          },
          "sip_uri_calling_preference": {
            "type": "string",
            "default": "disabled",
            "description": "This feature enables inbound SIP URI calls to your Credential Auth Connection. If enabled for all (unrestricted) then anyone who calls the SIP URI <your-username>@telnyx.com will be connected to your Connection. You can also choose to allow only calls that are originated on any Connections under your account (internal).\n",
            "enum": [
              "disabled",
              "unrestricted",
              "internal"
            ]
          },
          "transport_protocol": {
            "type": "string",
            "description": "One of UDP, TLS, or TCP. Applies only to connections with IP authentication or FQDN authentication.\n",
            "default": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS"
            ]
          },
          "default_on_hold_comfort_noise_enabled": {
            "type": "boolean",
            "default": true,
            "description": "When enabled, Telnyx will generate comfort noise when you place the call on hold. If disabled, you will need to generate comfort noise or on hold music to avoid RTP timeout.\n"
          },
          "dtmf_type": {
            "type": "string",
            "enum": [
              "RFC 2833",
              "Inband",
              "SIP INFO"
            ],
            "default": "RFC 2833",
            "description": "Sets the type of DTMF digits sent from Telnyx to this Connection. Note that DTMF digits sent to Telnyx will be accepted in all formats.\n"
          },
          "encode_contact_header_enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Encode the SIP contact header sent by Telnyx to avoid issues for NAT or ALG scenarios.\n"
          },
          "encrypted_media": {
            "type": "string",
            "enum": [
              "SRTP",
              "ZRTP"
            ],
            "description": "Enable use of SRTP or ZRTP for encryption. Valid values are those listed or null. Cannot be set to non-null if the transport_portocol is TLS.\n"
          },
          "onnet_t38_passthrough_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable on-net T38 if you prefer the sender and receiver negotiating T38 directly if both are on the Telnyx network. If this is disabled, Telnyx will be able to use T38 on just one leg of the call depending on each leg's settings.\n"
          },
          "rtcp_settings": {
            "$ref": "#/components/schemas/ConnectionRTCPSettings"
          },
          "sip_reply_code": {
            "type": "integer"
          },
          "sip_reply_reason": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was created.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "updated_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was updated.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "inbound": {
            "$ref": "#/components/schemas/IPInboundCreate"
          },
          "outbound": {
            "$ref": "#/components/schemas/IPOutbound"
          }
        }
      },
      "IPConnectionUpdate": {
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Defaults to true"
          },
          "anchorsite_override": {
            "type": "string",
            "enum": [
              "Latency",
              "Chicago, IL",
              "Ashburn, VA",
              "San Jose, CA",
              "Sydney, Australia",
              "Amsterdam, Netherlands",
              "London, UK",
              "Toronto, Canada",
              "Vancouver, Canada"
            ],
            "description": "`Latency` directs Telnyx to route media through the site with the lowest round-trip time to the user's connection. Telnyx calculates this time using ICMP ping messages. This can be disabled by specifying a site to handle all media.\n"
          },
          "connection_name": {
            "type": "string"
          },
          "sip_uri_calling_preference": {
            "type": "string",
            "default": "disabled",
            "description": "This feature enables inbound SIP URI calls to your Credential Auth Connection. If enabled for all (unrestricted) then anyone who calls the SIP URI <your-username>@telnyx.com will be connected to your Connection. You can also choose to allow only calls that are originated on any Connections under your account (internal).\n",
            "enum": [
              "disabled",
              "unrestricted",
              "internal"
            ]
          },
          "transport_protocol": {
            "type": "string",
            "description": "One of UDP, TLS, or TCP. Applies only to connections with IP authentication or FQDN authentication.\n",
            "default": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS"
            ]
          },
          "default_on_hold_comfort_noise_enabled": {
            "type": "boolean",
            "default": true,
            "description": "When enabled, Telnyx will generate comfort noise when you place the call on hold. If disabled, you will need to generate comfort noise or on hold music to avoid RTP timeout.\n"
          },
          "dtmf_type": {
            "type": "string",
            "enum": [
              "RFC 2833",
              "Inband",
              "SIP INFO"
            ],
            "default": "RFC 2833",
            "description": "Sets the type of DTMF digits sent from Telnyx to this Connection. Note that DTMF digits sent to Telnyx will be accepted in all formats.\n"
          },
          "encode_contact_header_enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Encode the SIP contact header sent by Telnyx to avoid issues for NAT or ALG scenarios.\n"
          },
          "encrypted_media": {
            "type": "string",
            "enum": [
              "SRTP",
              "ZRTP"
            ],
            "description": "Enable use of SRTP or ZRTP for encryption. Valid values are those listed or null. Cannot be set to non-null if the transport_portocol is TLS.\n"
          },
          "onnet_t38_passthrough_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable on-net T38 if you prefer the sender and receiver negotiating T38 directly if both are on the Telnyx network. If this is disabled, Telnyx will be able to use T38 on just one leg of the call depending on each leg's settings.\n"
          },
          "rtcp_settings": {
            "$ref": "#/components/schemas/ConnectionRTCPSettings"
          },
          "sip_reply_code": {
            "type": "integer"
          },
          "sip_reply_reason": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was created.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "updated_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was updated.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "inbound": {
            "$ref": "#/components/schemas/IPInbound"
          },
          "outbound": {
            "$ref": "#/components/schemas/IPOutbound"
          }
        }
      },
      "IPInbound": {
        "type": "object",
        "title": "Inbound configuration",
        "properties": {
          "ani_number_format": {
            "type": "string",
            "enum": [
              "+E.164",
              "E.164",
              "+E.164-national",
              "E.164-national"
            ],
            "default": "E.164-national",
            "description": "This setting allows you to set the format with which the caller's number (ANI) is sent for inbound phone calls.\n"
          },
          "dnis_number_format": {
            "type": "integer",
            "description": "0 = E.164<br/> 1 = Strip-1<br/> 2 = Strip-2\n",
            "default": 1
          },
          "codecs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Defines the list of codecs that Telnyx will send for inbound calls to a specific number on your portal account, in priority order. This only works when the Connection the number is assigned to uses Media Handling mode: default. OPUS and H.264 codecs are available only when using TCP or TLS transport for SIP.\n",
            "default": [
              "G722",
              "G711U",
              "G711A",
              "G729",
              "OPUS",
              "H.264"
            ]
          },
          "default_primary_ip_id": {
            "type": "string",
            "description": "The default primary IP to use for the number. Only settable if the connection is\n              of IP authentication type. Value must be the ID of an authorized IP set on the connection."
          },
          "default_secondary_ip_id": {
            "type": "string",
            "description": "The default secondary IP to use for the number. Only settable if the connection is\n              of IP authentication type. Value must be the ID of an authorized IP set on the connection."
          },
          "default_tertiary_ip_id": {
            "type": "string",
            "description": "The default tertiary IP to use for the number. Only settable if the connection is\n              of IP authentication type. Value must be the ID of an authorized IP set on the connection."
          },
          "default_routing_method": {
            "type": "string",
            "enum": [
              "sequential",
              "round-robin"
            ],
            "description": "Default routing method to be used when a number is associated with the connection. Must be one of the routing method types or left blank, other values are not allowed.\n"
          },
          "channel_limit": {
            "type": "integer",
            "default": null,
            "description": "When set, this will limit the total number of inbound calls to phone numbers associated with this connection.\n"
          },
          "generate_ringback_tone": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Generate ringback tone through 183 session progress message with early media.\n"
          },
          "isup_headers_enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "When set, inbound phone calls will receive ISUP parameters via SIP headers. (Only when available and only when using TCP or TLS transport.)\n"
          },
          "prack_enabled": {
            "type": "boolean",
            "description": "Enable PRACK messages as defined in RFC3262.",
            "default": false
          },
          "privacy_zone_enabled": {
            "type": "boolean",
            "description": "By default, Telnyx does not send caller-id information when the caller has chosen to hide this information. When this option is enabled, Telnyx will send the SIP header Privacy:id plus the caller-id information so that the receiver side can choose when to hide it.\n",
            "default": false
          },
          "sip_compact_headers_enabled": {
            "type": "boolean",
            "description": "Defaults to true.",
            "default": true
          },
          "sip_region": {
            "type": "string",
            "default": "US",
            "description": "Selects which `sip_region` to receive inbound calls from. If null, the default region (US) will be used.\n",
            "enum": [
              "US",
              "Europe",
              "Australia"
            ]
          },
          "sip_subdomain": {
            "type": "string",
            "description": "Specifies a subdomain that can be used to receive Inbound calls to a Connection, in the same way a phone number is used, from a SIP endpoint. Example: the subdomain \"example.sip.telnyx.com\" can be called from any SIP endpoint by using the SIP URI \"sip:@example.sip.telnyx.com\" where the user part can be any alphanumeric value. Please note TLS encrypted calls are not allowed for subdomain calls.\n"
          },
          "sip_subdomain_receive_settings": {
            "type": "string",
            "description": "This option can be enabled to receive calls from: \"Anyone\" (any SIP endpoint in the public Internet) or \"Only my connections\" (any connection assigned to the same Telnyx user).\n",
            "enum": [
              "only_my_connections",
              "from_anyone"
            ]
          },
          "timeout_1xx_secs": {
            "type": "integer",
            "description": "Time(sec) before aborting if connection is not made (min: 1, max: 20).\n",
            "default": 3
          },
          "timeout_2xx_secs": {
            "type": "integer",
            "description": "Time(sec) before aborting if call is unanswered (min: 1, max: 600).\n",
            "default": 90
          }
        }
      },
      "IPInboundCreate": {
        "type": "object",
        "title": "Inbound configuration",
        "properties": {
          "ani_number_format": {
            "type": "string",
            "enum": [
              "+E.164",
              "E.164",
              "+E.164-national",
              "E.164-national"
            ],
            "default": "E.164-national",
            "description": "This setting allows you to set the format with which the caller's number (ANI) is sent for inbound phone calls.\n"
          },
          "dnis_number_format": {
            "type": "integer",
            "description": "0 = E.164<br/> 1 = Strip-1<br/> 2 = Strip-2\n",
            "default": 1
          },
          "codecs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Defines the list of codecs that Telnyx will send for inbound calls to a specific number on your portal account, in priority order. This only works when the Connection the number is assigned to uses Media Handling mode: default. OPUS and H.264 codecs are available only when using TCP or TLS transport for SIP.\n",
            "default": [
              "G722",
              "G711U",
              "G711A",
              "G729",
              "OPUS",
              "H.264"
            ]
          },
          "default_routing_method": {
            "type": "string",
            "enum": [
              "sequential",
              "round-robin"
            ],
            "description": "Default routing method to be used when a number is associated with the connection. Must be one of the routing method types or left blank, other values are not allowed.\n"
          },
          "channel_limit": {
            "type": "integer",
            "default": null,
            "description": "When set, this will limit the total number of inbound calls to phone numbers associated with this connection.\n"
          },
          "generate_ringback_tone": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Generate ringback tone through 183 session progress message with early media.\n"
          },
          "isup_headers_enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "When set, inbound phone calls will receive ISUP parameters via SIP headers. (Only when available and only when using TCP or TLS transport.)\n"
          },
          "prack_enabled": {
            "type": "boolean",
            "description": "Enable PRACK messages as defined in RFC3262.",
            "default": false
          },
          "privacy_zone_enabled": {
            "type": "boolean",
            "description": "By default, Telnyx does not send caller-id information when the caller has chosen to hide this information. When this option is enabled, Telnyx will send the SIP header Privacy:id plus the caller-id information so that the receiver side can choose when to hide it.\n",
            "default": false
          },
          "sip_compact_headers_enabled": {
            "type": "boolean",
            "description": "Defaults to true.",
            "default": true
          },
          "sip_region": {
            "type": "string",
            "default": "US",
            "description": "Selects which `sip_region` to receive inbound calls from. If null, the default region (US) will be used.\n",
            "enum": [
              "US",
              "Europe",
              "Australia"
            ]
          },
          "sip_subdomain": {
            "type": "string",
            "description": "Specifies a subdomain that can be used to receive Inbound calls to a Connection, in the same way a phone number is used, from a SIP endpoint. Example: the subdomain \"example.sip.telnyx.com\" can be called from any SIP endpoint by using the SIP URI \"sip:@example.sip.telnyx.com\" where the user part can be any alphanumeric value. Please note TLS encrypted calls are not allowed for subdomain calls.\n"
          },
          "sip_subdomain_receive_settings": {
            "type": "string",
            "description": "This option can be enabled to receive calls from: \"Anyone\" (any SIP endpoint in the public Internet) or \"Only my connections\" (any connection assigned to the same Telnyx user).\n",
            "enum": [
              "only_my_connections",
              "from_anyone"
            ]
          },
          "timeout_1xx_secs": {
            "type": "integer",
            "description": "Time(sec) before aborting if connection is not made (min: 1, max: 20).\n",
            "default": 3
          },
          "timeout_2xx_secs": {
            "type": "integer",
            "description": "Time(sec) before aborting if call is unanswered (min: 1, max: 600).\n",
            "default": 90
          }
        }
      },
      "IPOutbound": {
        "type": "object",
        "title": "Outbound configuration",
        "properties": {
          "call_parking_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Forces all SIP calls originated on this connection to be \"parked\" instead of \"bridged\" to the destination specified on the URI. Parked calls will return ringback to the caller and will await for a Call Control command to define which action will be taken next.\n"
          },
          "ani_override": {
            "type": "string",
            "description": "Set a phone number as the ani_override value to override caller id number on outbound calls.\n",
            "default": ""
          },
          "ani_override_type": {
            "type": "string",
            "enum": [
              "always",
              "normal",
              "emergency"
            ],
            "description": "Specifies when we apply your ani_override setting. Only applies when ani_override is not blank.\n",
            "default": "always"
          },
          "channel_limit": {
            "type": "integer",
            "default": null,
            "description": "When set, this will limit the total number of outbound calls to phone numbers associated with this connection.\n"
          },
          "instant_ringback_enabled": {
            "type": "boolean",
            "default": true,
            "description": "When set, ringback will not wait for indication before sending ringback tone to calling party.\n"
          },
          "generate_ringback_tone": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Generate ringback tone through 183 session progress message with early media.\n"
          },
          "localization": {
            "type": "string",
            "default": null,
            "description": "A 2-character country code specifying the country whose national dialing rules should be used. For example, if set to `US` then any US number can be dialed without preprending +1 to the number. When left blank, Telnyx will try US and GB dialing rules, in that order, by default.\n"
          },
          "t38_reinvite_source": {
            "type": "string",
            "enum": [
              "telnyx",
              "customer",
              "disabled",
              "passthru",
              "caller-passthru",
              "callee-passthru"
            ],
            "description": "This setting only affects connections with Fax-type Outbound Profiles. The setting dictates whether or not Telnyx sends a t.38 reinvite.<br/><br/> By default, Telnyx will send the re-invite. If set to `customer`, the caller is expected to send the t.38 reinvite.\n",
            "default": "telnyx"
          },
          "tech_prefix": {
            "type": "string",
            "description": "Numerical chars only, exactly 4 characters.",
            "default": ""
          },
          "ip_authentication_method": {
            "type": "string",
            "default": "tech-prefix",
            "example": "tech-prefix",
            "enum": [
              "tech-prefixp-charge-info",
              "token"
            ]
          },
          "ip_authentication_token": {
            "type": "string",
            "default": null
          }
        }
      },
      "ConnectionRTCPSettings": {
        "type": "object",
        "properties": {
          "port": {
            "type": "string",
            "enum": [
              "rtcp-mux",
              "rtp+1"
            ],
            "default": "rtp+1",
            "description": "RTCP port by default is rtp+1, it can also be set to rtcp-mux"
          },
          "report_enabled": {
            "type": "boolean",
            "default": true,
            "description": "DEPRECATED - RTCP reports are always sent to customers/vendors. For backwards compatibility, the value is always true.\n"
          },
          "report_frequency_secs": {
            "type": "integer",
            "default": 10,
            "description": "RTCP reports are sent to customers based on the frequency set. Frequency is in seconds and it can be set to values from 5 to 3000 seconds.\n"
          }
        }
      },
      "CredentialConnection": {
        "type": "object",
        "title": "Credential Connection",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Identifies the type of resource.",
            "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
          },
          "record_type": {
            "type": "string",
            "description": "Identifies the type of the resource.",
            "example": "credential_connection"
          },
          "active": {
            "type": "boolean",
            "description": "Defaults to true"
          },
          "user_name": {
            "type": "string",
            "description": "The user name to be used as part of the credentials. Must be 4-32 characters long and alphanumeric values only (no spaces or special characters).",
            "example": "myusername123"
          },
          "password": {
            "type": "string",
            "description": "The password to be used as part of the credentials. Must be 8 to 128 characters long.",
            "example": "my123secure456password789"
          },
          "created_at": {
            "type": "string",
            "description": "ISO-8601 formatted date indicating when the resource was created.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "updated_at": {
            "type": "string",
            "description": "ISO-8601 formatted date indicating when the resource was updated.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "anchorsite_override": {
            "type": "string",
            "enum": [
              "Latency",
              "Chicago, IL",
              "Ashburn, VA",
              "San Jose, CA",
              "Sydney, Australia",
              "Amsterdam, Netherlands",
              "London, UK",
              "Toronto, Canada",
              "Vancouver, Canada"
            ],
            "description": "`Latency` directs Telnyx to route media through the site with the lowest round-trip time to the user's connection. Telnyx calculates this time using ICMP ping messages. This can be disabled by specifying a site to handle all media.\n"
          },
          "connection_name": {
            "type": "string"
          },
          "sip_uri_calling_preference": {
            "type": "string",
            "default": "disabled",
            "description": "This feature enables inbound SIP URI calls to your Credential Auth Connection. If enabled for all (unrestricted) then anyone who calls the SIP URI <your-username>@telnyx.com will be connected to your Connection. You can also choose to allow only calls that are originated on any Connections under your account (internal).\n",
            "enum": [
              "disabled",
              "unrestricted",
              "internal"
            ]
          },
          "transport_protocol": {
            "type": "string",
            "description": "One of UDP, TLS, or TCP. Applies only to connections with IP authentication or FQDN authentication.\n",
            "default": "UDP"
          },
          "default_on_hold_comfort_noise_enabled": {
            "type": "boolean",
            "default": false,
            "description": "When enabled, Telnyx will generate comfort noise when you place the call on hold. If disabled, you will need to generate comfort noise or on hold music to avoid RTP timeout.\n"
          },
          "dtmf_type": {
            "type": "string",
            "enum": [
              "RFC 2833",
              "Inband",
              "SIP INFO"
            ],
            "default": "RFC 2833",
            "description": "Sets the type of DTMF digits sent from Telnyx to this Connection. Note that DTMF digits sent to Telnyx will be accepted in all formats.\n"
          },
          "encode_contact_header_enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Encode the SIP contact header sent by Telnyx to avoid issues for NAT or ALG scenarios.\n"
          },
          "encrypted_media": {
            "type": "string",
            "enum": [
              "SRTP",
              "ZRTP"
            ],
            "description": "Enable use of SRTP or ZRTP for encryption. Valid values are those listed or null. Cannot be set to non-null if the transport_portocol is TLS.\n"
          },
          "onnet_t38_passthrough_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable on-net T38 if you prefer the sender and receiver negotiating T38 directly if both are on the Telnyx network. If this is disabled, Telnyx will be able to use T38 on just one leg of the call depending on each leg's settings.\n"
          },
          "rtcp_settings": {
            "type": "object",
            "properties": {
              "port": {
                "type": "string",
                "enum": [
                  "rtcp-mux",
                  "rtp+1"
                ],
                "default": "rtp+1",
                "description": "RTCP port by default is rtp+1, it can also be set to rtcp-mux"
              },
              "report_enabled": {
                "type": "boolean",
                "default": true,
                "description": "DEPRECATED - RTCP reports are always sent to customers/vendors. For backwards compatibility, the value is always true.\n"
              },
              "report_frequency_seconds": {
                "type": "integer",
                "default": 10,
                "description": "RTCP reports are sent to customers based on the frequency set. Frequency is in seconds and it can be set to values from 5 to 3000 seconds.\n"
              }
            }
          },
          "sip_reply_code": {
            "type": "integer"
          },
          "sip_reply_reason": {
            "type": "string"
          },
          "inbound": {
            "$ref": "#/components/schemas/CredentialInbound"
          },
          "outbound": {
            "$ref": "#/components/schemas/CredentialOutbound"
          }
        },
        "example": {
          "id": "6a09cdc3-8948-47f0-aa62-74ac943d6c58",
          "record_type": "credential_connection",
          "active": false,
          "user_name": "myusername123",
          "password": "my123secure456password789",
          "created_at": "2018-02-02T22:25:27.521Z",
          "updated_at": "2018-02-02T22:25:27.521Z",
          "anchorsite_override": "Latency",
          "connection_name": "string",
          "sip_uri_calling_preference": "disabled",
          "transport_protocol": "string",
          "default_on_hold_comfort_noise_enabled": false,
          "dtmf_type": "RFC 2833",
          "encode_contact_header_enabled": true,
          "encrypted_media": "SRTP",
          "onnet_t38_passthrough_enabled": false,
          "rtcp_settings": {
            "port": "rtcp-mux",
            "report_enabled": false,
            "report_frequency_seconds": 10
          },
          "sip_reply_code": 10,
          "sip_reply_reason": "string",
          "inbound": {
            "ani_number_format": "+E.164",
            "dnis_number_format": 10,
            "codecs": [
              "G722"
            ],
            "channel_limit": 10,
            "generate_ringback_tone": true,
            "isup_headers_enabled": true,
            "prack_enabled": false,
            "privacy_zone_enabled": false,
            "sip_compact_headers_enabled": false,
            "sip_region": "US",
            "timeout_1xx_secs": "string",
            "timeout_2xx_secs": "string"
          },
          "outbound": {
            "call_parking_enabled": false,
            "ani_override": "string",
            "ani_override_type": "always",
            "channel_limit": 10,
            "instant_ringback_enabled": false,
            "generate_ringback_tone": true,
            "localization": "string",
            "t38_reinvite_source": "telnyx"
            }
        }
      },
      "CredentialInbound": {
        "type": "object",
        "title": "Inbound configuration",
        "properties": {
          "ani_number_format": {
            "type": "string",
            "enum": [
              "+E.164",
              "E.164",
              "+E.164-national",
              "E.164-national"
            ],
            "default": "E.164-national",
            "description": "This setting allows you to set the format with which the caller's number (ANI) is sent for inbound phone calls.\n"
          },
          "dnis_number_format": {
            "type": "integer",
            "description": "0 = E.164<br/> 1 = Strip-1<br/> 2 = Strip-2\n",
            "default": 1
          },
          "codecs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Defines the list of codecs that Telnyx will send for inbound calls to a specific number on your portal account, in priority order. This only works when the Connection the number is assigned to uses Media Handling mode: default. OPUS and H.264 codecs are available only when using TCP or TLS transport for SIP.\n",
            "default": [
              "G722",
              "G711U",
              "G711A",
              "G729",
              "OPUS",
              "H.264"
            ]
          },
          "channel_limit": {
            "type": "integer",
            "default": null,
            "description": "When set, this will limit the total number of inbound calls to phone numbers associated with this connection.\n"
          },
          "generate_ringback_tone": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Generate ringback tone through 183 session progress message with early media.\n"
          },
          "isup_headers_enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "When set, inbound phone calls will receive ISUP parameters via SIP headers. (Only when available and only when using TCP or TLS transport.)\n"
          },
          "prack_enabled": {
            "type": "boolean",
            "description": "Enable PRACK messages as defined in RFC3262.",
            "default": false
          },
          "privacy_zone_enabled": {
            "type": "boolean",
            "description": "By default, Telnyx does not send caller-id information when the caller has chosen to hide this information. When this option is enabled, Telnyx will send the SIP header Privacy:id plus the caller-id information so that the receiver side can choose when to hide it.\n",
            "default": false
          },
          "sip_compact_headers_enabled": {
            "type": "boolean",
            "description": "Defaults to true.",
            "default": true
          },
          "sip_region": {
            "type": "string",
            "default": "US",
            "description": "Selects which `sip_region` to receive inbound calls from. If null, the default region (US) will be used.\n",
            "enum": [
              "US",
              "Europe",
              "Australia"
            ]
          },
          "timeout_1xx_secs": {
            "type": "string",
            "description": "Time(sec) before aborting if connection is not made (min: 1, max: 20).\n",
            "default": "3"
          },
          "timeout_2xx_secs": {
            "type": "string",
            "description": "Time(sec) before aborting if call is unanswered (min: 1, max: 600).\n",
            "default": "90"
          }
        }
      },
      "CredentialOutbound": {
        "type": "object",
        "title": "Outbound configuration",
        "properties": {
          "call_parking_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Forces all SIP calls originated on this connection to be \"parked\" instead of \"bridged\" to the destination specified on the URI. Parked calls will return ringback to the caller and will await for a Call Control command to define which action will be taken next.\n"
          },
          "ani_override": {
            "type": "string",
            "description": "Set a phone number as the ani_override value to override caller id number on outbound calls.\n",
            "default": ""
          },
          "ani_override_type": {
            "type": "string",
            "enum": [
              "always",
              "normal",
              "emergency"
            ],
            "description": "Specifies when we apply your ani_override setting. Only applies when ani_override is not blank.\n",
            "default": "always"
          },
          "channel_limit": {
            "type": "integer",
            "default": null,
            "description": "When set, this will limit the total number of outbound calls to phone numbers associated with this connection.\n"
          },
          "instant_ringback_enabled": {
            "type": "boolean",
            "default": true,
            "description": "When set, ringback will not wait for indication before sending ringback tone to calling party.\n"
          },
          "generate_ringback_tone": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Generate ringback tone through 183 session progress message with early media.\n"
          },
          "localization": {
            "type": "string",
            "default": null,
            "description": "A 2-character country code specifying the country whose national dialing rules should be used. For example, if set to `US` then any US number can be dialed without preprending +1 to the number. When left blank, Telnyx will try US and GB dialing rules, in that order, by default.\n"
          },
          "t38_reinvite_source": {
            "type": "string",
            "enum": [
              "telnyx",
              "customer",
              "disabled",
              "passthru",
              "caller-passthru",
              "callee-passthru"
            ],
            "description": "This setting only affects connections with Fax-type Outbound Profiles. The setting dictates whether or not Telnyx sends a t.38 reinvite.<br/><br/> By default, Telnyx will send the re-invite. If set to `customer`, the caller is expected to send the t.38 reinvite.\n",
            "default": "telnyx"
          }
        }
      },
      "CredentialConnectionUpdate": {
        "type": "object",
        "title": "CredentialConnectionUpdate",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Identifies the resource.",
            "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
          },
          "active": {
            "type": "boolean",
            "description": "Defaults to true"
          },
          "user_name": {
            "type": "string",
            "description": "The user name to be used as part of the credentials. Must be 4-32 characters long and alphanumeric values only (no spaces or special characters).",
            "example": "myusername123"
          },
          "password": {
            "type": "string",
            "description": "The password to be used as part of the credentials. Must be 8 to 128 characters long.",
            "example": "my123secure456password789"
          },
          "anchorsite_override": {
            "type": "string",
            "enum": [
              "Latency",
              "Chicago, IL",
              "Ashburn, VA",
              "San Jose, CA",
              "Sydney, Australia",
              "Amsterdam, Netherlands",
              "London, UK",
              "Toronto, Canada",
              "Vancouver, Canada"
            ],
            "description": "`Latency` directs Telnyx to route media through the site with the lowest round-trip time to the user's connection. Telnyx calculates this time using ICMP ping messages. This can be disabled by specifying a site to handle all media.\n"
          },
          "connection_name": {
            "type": "string"
          },
          "sip_uri_calling_preference": {
            "type": "string",
            "default": "disabled",
            "description": "This feature enables inbound SIP URI calls to your Credential Auth Connection. If enabled for all (unrestricted) then anyone who calls the SIP URI <your-username>@telnyx.com will be connected to your Connection. You can also choose to allow only calls that are originated on any Connections under your account (internal).\n",
            "enum": [
              "disabled",
              "unrestricted",
              "internal"
            ]
          },
          "transport_protocol": {
            "type": "string",
            "description": "One of UDP, TLS, or TCP. Applies only to connections with IP authentication or FQDN authentication.\n",
            "default": "UDP"
          },
          "default_on_hold_comfort_noise_enabled": {
            "type": "boolean",
            "default": false,
            "description": "When enabled, Telnyx will generate comfort noise when you place the call on hold. If disabled, you will need to generate comfort noise or on hold music to avoid RTP timeout.\n"
          },
          "dtmf_type": {
            "type": "string",
            "enum": [
              "RFC 2833",
              "Inband",
              "SIP INFO"
            ],
            "default": "RFC 2833",
            "description": "Sets the type of DTMF digits sent from Telnyx to this Connection. Note that DTMF digits sent to Telnyx will be accepted in all formats.\n"
          },
          "encode_contact_header_enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Encode the SIP contact header sent by Telnyx to avoid issues for NAT or ALG scenarios.\n"
          },
          "encrypted_media": {
            "type": "string",
            "enum": [
              "SRTP",
              "ZRTP"
            ],
            "description": "Enable use of SRTP or ZRTP for encryption. Valid values are those listed or null. Cannot be set to non-null if the transport_portocol is TLS.\n"
          },
          "onnet_t38_passthrough_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable on-net T38 if you prefer the sender and receiver negotiating T38 directly if both are on the Telnyx network. If this is disabled, Telnyx will be able to use T38 on just one leg of the call depending on each leg's settings.\n"
          },
          "rtcp_settings": {
            "type": "object",
            "properties": {
              "port": {
                "type": "string",
                "enum": [
                  "rtcp-mux",
                  "rtp+1"
                ],
                "default": "rtp+1",
                "description": "RTCP port by default is rtp+1, it can also be set to rtcp-mux"
              },
              "report_enabled": {
                "type": "boolean",
                "default": true,
                "description": "DEPRECATED - RTCP reports are always sent to customers/vendors. For backwards compatibility, the value is always true.\n"
              },
              "report_frequency_seconds": {
                "type": "integer",
                "default": 10,
                "description": "RTCP reports are sent to customers based on the frequency set. Frequency is in seconds and it can be set to values from 5 to 3000 seconds.\n"
              }
            }
          },
          "sip_reply_code": {
            "type": "integer"
          },
          "sip_reply_reason": {
            "type": "string"
          },
          "inbound": {
            "$ref": "#/components/schemas/CredentialInbound"
          },
          "outbound": {
            "$ref": "#/components/schemas/CredentialOutbound"
          }
        }
      },
      "CredentialConnectionCreate": {
        "type": "object",
        "title": "CredentialConnectionCreate",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Defaults to true"
          },
          "user_name": {
            "type": "string",
            "description": "The user name to be used as part of the credentials. Must be 4-32 characters long and alphanumeric values only (no spaces or special characters).",
            "example": "myusername123"
          },
          "password": {
            "type": "string",
            "description": "The password to be used as part of the credentials. Must be 8 to 128 characters long.",
            "example": "my123secure456password789"
          },
          "anchorsite_override": {
            "type": "string",
            "enum": [
              "Latency",
              "Chicago, IL",
              "Ashburn, VA",
              "San Jose, CA",
              "Sydney, Australia",
              "Amsterdam, Netherlands",
              "London, UK",
              "Toronto, Canada",
              "Vancouver, Canada"
            ],
            "description": "`Latency` directs Telnyx to route media through the site with the lowest round-trip time to the user's connection. Telnyx calculates this time using ICMP ping messages. This can be disabled by specifying a site to handle all media.\n"
          },
          "connection_name": {
            "type": "string"
          },
          "sip_uri_calling_preference": {
            "type": "string",
            "default": "disabled",
            "description": "This feature enables inbound SIP URI calls to your Credential Auth Connection. If enabled for all (unrestricted) then anyone who calls the SIP URI <your-username>@telnyx.com will be connected to your Connection. You can also choose to allow only calls that are originated on any Connections under your account (internal).\n",
            "enum": [
              "disabled",
              "unrestricted",
              "internal"
            ]
          },
          "transport_protocol": {
            "type": "string",
            "description": "One of UDP, TLS, or TCP. Applies only to connections with IP authentication or FQDN authentication.\n",
            "default": "UDP"
          },
          "default_on_hold_comfort_noise_enabled": {
            "type": "boolean",
            "default": false,
            "description": "When enabled, Telnyx will generate comfort noise when you place the call on hold. If disabled, you will need to generate comfort noise or on hold music to avoid RTP timeout.\n"
          },
          "dtmf_type": {
            "type": "string",
            "enum": [
              "RFC 2833",
              "Inband",
              "SIP INFO"
            ],
            "default": "RFC 2833",
            "description": "Sets the type of DTMF digits sent from Telnyx to this Connection. Note that DTMF digits sent to Telnyx will be accepted in all formats.\n"
          },
          "encode_contact_header_enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Encode the SIP contact header sent by Telnyx to avoid issues for NAT or ALG scenarios.\n"
          },
          "encrypted_media": {
            "type": "string",
            "enum": [
              "SRTP",
              "ZRTP"
            ],
            "description": "Enable use of SRTP or ZRTP for encryption. Valid values are those listed or null. Cannot be set to non-null if the transport_portocol is TLS.\n"
          },
          "onnet_t38_passthrough_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable on-net T38 if you prefer the sender and receiver negotiating T38 directly if both are on the Telnyx network. If this is disabled, Telnyx will be able to use T38 on just one leg of the call depending on each leg's settings.\n"
          },
          "rtcp_settings": {
            "type": "object",
            "properties": {
              "port": {
                "type": "string",
                "enum": [
                  "rtcp-mux",
                  "rtp+1"
                ],
                "default": "rtp+1",
                "description": "RTCP port by default is rtp+1, it can also be set to rtcp-mux"
              },
              "report_enabled": {
                "type": "boolean",
                "default": true,
                "description": "DEPRECATED - RTCP reports are always sent to customers/vendors. For backwards compatibility, the value is always true.\n"
              },
              "report_frequency_seconds": {
                "type": "integer",
                "default": 10,
                "description": "RTCP reports are sent to customers based on the frequency set. Frequency is in seconds and it can be set to values from 5 to 3000 seconds.\n"
              }
            }
          },
          "sip_reply_code": {
            "type": "integer"
          },
          "sip_reply_reason": {
            "type": "string"
          },
          "inbound": {
            "$ref": "#/components/schemas/CredentialInbound"
          },
          "outbound": {
            "$ref": "#/components/schemas/CredentialOutbound"
          }
        }
      },
      "IP": {
        "type": "object",
        "title": "IP",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Identifies the type of resource.",
            "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
          },
          "record_type": {
            "type": "string",
            "description": "Identifies the type of the resource.",
            "example": "ip"
          },
          "connection_id": {
            "type": "string",
            "description": "ID of the IPConnection to which this IP should be attached."
          },
          "ip_address": {
            "type": "string",
            "description": "IP adddress represented by this resource.",
            "example": "192.168.0.0"
          },
          "port": {
            "type": "integer",
            "description": "Port to use when connecting to this IP.",
            "default": 5060,
            "example": 5060
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was created.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "updated_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was updated.",
            "example": "2018-02-02T22:25:27.521Z"
          }
        },
        "example": {
          "id": "6a09cdc3-8948-47f0-aa62-74ac943d6c58",
          "record_type": "ip",
          "connection_id": "string",
          "ip_address": "192.168.0.0",
          "port": 5060,
          "created_at": "2018-02-02T22:25:27.521Z",
          "updated_at": "2018-02-02T22:25:27.521Z"
        }
      },
      "IPWritableSchema": {
        "type": "object",
        "required": [
          "ip_address"
        ],
        "properties": {
          "connection_id": {
            "type": "string",
            "description": "ID of the IPConnection to which this IP should be attached."
          },
          "ip_address": {
            "type": "string",
            "description": "IP adddress represented by this resource.",
            "example": "192.168.0.0"
          },
          "port": {
            "type": "integer",
            "description": "Port to use when connecting to this IP.",
            "default": 5060,
            "example": 5060
          }
        }
      },
      "FQDNConnection": {
        "type": "object",
        "title": "FQDN Connection",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Identifies the resource.",
            "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
          },
          "record_type": {
            "type": "string",
            "description": "Identifies the type of the resource.",
            "example": "fqdn_connection"
          },
          "active": {
            "type": "boolean",
            "description": "Defaults to true"
          },
          "anchorsite_override": {
            "type": "string",
            "enum": [
              "Latency",
              "Chicago, IL",
              "Ashburn, VA",
              "San Jose, CA",
              "Sydney, Australia",
              "Amsterdam, Netherlands",
              "London, UK",
              "Toronto, Canada",
              "Vancouver, Canada"
            ],
            "description": "`Latency` directs Telnyx to route media through the site with the lowest round-trip time to the user's connection. Telnyx calculates this time using ICMP ping messages. This can be disabled by specifying a site to handle all media."
          },
          "connection_name": {
            "type": "string"
          },
          "sip_uri_calling_preference": {
            "type": "string",
            "default": "disabled",
            "description": "This feature enables inbound SIP URI calls to your Credential Auth Connection. If enabled for all (unrestricted) then anyone who calls the SIP URI <your-username>@telnyx.com will be connected to your Connection. You can also choose to allow only calls that are originated on any Connections under your account (internal).\n",
            "enum": [
              "disabled",
              "unrestricted",
              "internal"
            ]
          },
          "transport_protocol": {
            "type": "string",
            "description": "One of UDP, TLS, or TCP.",
            "default": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS"
            ]
          },
          "default_on_hold_comfort_noise_enabled": {
            "type": "boolean",
            "default": true,
            "description": "When enabled, Telnyx will generate comfort noise when you place the call on hold. If disabled, you will need to generate comfort noise or on hold music to avoid RTP timeout.\n"
          },
          "dtmf_type": {
            "type": "string",
            "enum": [
              "RFC 2833",
              "Inband",
              "SIP INFO"
            ],
            "default": "RFC 2833",
            "description": "Sets the type of DTMF digits sent from Telnyx to this Connection. Note that DTMF digits sent to Telnyx will be accepted in all formats.\n"
          },
          "encode_contact_header_enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Encode the SIP contact header sent by Telnyx to avoid issues for NAT or ALG scenarios.\n"
          },
          "encrypted_media": {
            "type": "string",
            "enum": [
              "SRTP",
              "ZRTP"
            ],
            "description": "Enable use of SRTP or ZRTP for encryption. Valid values are those listed or null. Cannot be set to non-null if the transport_portocol is TLS.\n"
          },
          "onnet_t38_passthrough_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable on-net T38 if you prefer that the sender and receiver negotiate T38 directly when both are on the Telnyx network. If this is disabled, Telnyx will be able to use T38 on just one leg of the call according to each leg's settings.\n"
          },
          "rtcp_settings": {
            "$ref": "#/components/schemas/ConnectionRTCPSettings"
          },
          "last_registered_ip": {
            "type": "string",
            "description": "IP from the last successful registration attempt.",
            "example": "192.0.2.1"
          },
          "sip_reply_code": {
            "type": "integer"
          },
          "sip_reply_reason": {
            "type": "string"
          },
          "registration_status": {
            "type": "integer",
            "description": "0 = Not Applicable<br/> 1 = Not Registered<br/> 2 = Failed<br/> 3 = Expired<br/> 4 = Success<br/> 5 = Unregistered\n",
            "default": 0
          },
          "registration_status_updated_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was created.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "updated_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was updated.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "inbound": {
            "$ref": "#/components/schemas/FQDNInbound"
          }
        },
        "example": {
          "id": "6a09cdc3-8948-47f0-aa62-74ac943d6c58",
          "record_type": "fqdn_connection",
          "active": true,
          "anchorsite_override": "Latency",
          "connection_name": "string",
          "sip_uri_calling_preference": "disabled",
          "transport_protocol": "UDP",
          "default_on_hold_comfort_noise_enabled": false,
          "dtmf_type": "RFC 2833",
          "encode_contact_header_enabled": true,
          "encrypted_media": "SRTP",
          "onnet_t38_passthrough_enabled": false,
          "rtcp_settings": {
            "port": "rtcp-mux",
            "report_enabled": false,
            "report_frequency_secs": 10
          },
          "last_registered_ip": "192.0.2.1",
          "sip_reply_code": 10,
          "sip_reply_reason": "string",
          "registration_status": 10,
          "registration_status_updated_at": "string",
          "created_at": "2018-02-02T22:25:27.521Z",
          "updated_at": "2018-02-02T22:25:27.521Z",
          "inbound": {
            "ani_number_format": "+E.164",
            "dnis_number_format": 10,
            "codecs": [
              "G722"
            ],
            "default_routing_method": "sequential",
            "channel_limit": 10,
            "generate_ringback_tone": true,
            "isup_headers_enabled": true,
            "prack_enabled": false,
            "privacy_zone_enabled": false,
            "sip_compact_headers_enabled": false,
            "sip_region": "US",
            "sip_subdomain": "string",
            "sip_subdomain_receive_settings": "only_my_connections",
            "timeout_1xx_secs": 10,
            "timeout_2xx_secs": 10
          }
        }
      },
      "FQDNConnectionCreate": {
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Defaults to true"
          },
          "anchorsite_override": {
            "type": "string",
            "enum": [
              "Latency",
              "Chicago, IL",
              "Ashburn, VA",
              "San Jose, CA",
              "Sydney, Australia",
              "Amsterdam, Netherlands",
              "London, UK",
              "Toronto, Canada",
              "Vancouver, Canada"
            ],
            "description": "`Latency` directs Telnyx to route media through the site with the lowest round-trip time to the user's connection. Telnyx calculates this time using ICMP ping messages. This can be disabled by specifying a site to handle all media.\n"
          },
          "connection_name": {
            "type": "string"
          },
          "sip_uri_calling_preference": {
            "type": "string",
            "default": "disabled",
            "description": "This feature enables inbound SIP URI calls to your Credential Auth Connection. If enabled for all (unrestricted) then anyone who calls the SIP URI <your-username>@telnyx.com will be connected to your Connection. You can also choose to allow only calls that are originated on any Connections under your account (internal).\n",
            "enum": [
              "disabled",
              "unrestricted",
              "internal"
            ]
          },
          "transport_protocol": {
            "type": "string",
            "description": "One of UDP, TLS, or TCP. Applies only to connections with IP authentication or FQDN authentication.\n",
            "default": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS"
            ]
          },
          "default_on_hold_comfort_noise_enabled": {
            "type": "boolean",
            "default": true,
            "description": "When enabled, Telnyx will generate comfort noise when you place the call on hold. If disabled, you will need to generate comfort noise or on hold music to avoid RTP timeout.\n"
          },
          "dtmf_type": {
            "type": "string",
            "enum": [
              "RFC 2833",
              "Inband",
              "SIP INFO"
            ],
            "default": "RFC 2833",
            "description": "Sets the type of DTMF digits sent from Telnyx to this Connection. Note that DTMF digits sent to Telnyx will be accepted in all formats.\n"
          },
          "encode_contact_header_enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Encode the SIP contact header sent by Telnyx to avoid issues for NAT or ALG scenarios.\n"
          },
          "encrypted_media": {
            "type": "string",
            "enum": [
              "SRTP",
              "ZRTP"
            ],
            "description": "Enable use of SRTP or ZRTP for encryption. Valid values are those listed or null. Cannot be set to non-null if the transport_portocol is TLS.\n"
          },
          "onnet_t38_passthrough_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable on-net T38 if you prefer the sender and receiver negotiating T38 directly if both are on the Telnyx network. If this is disabled, Telnyx will be able to use T38 on just one leg of the call depending on each leg's settings.\n"
          },
          "rtcp_settings": {
            "$ref": "#/components/schemas/ConnectionRTCPSettings"
          },
          "sip_reply_code": {
            "type": "integer"
          },
          "sip_reply_reason": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was created.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "updated_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was updated.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "inbound": {
            "$ref": "#/components/schemas/FQDNInboundCreate"
          }
        }
      },
      "FQDNConnectionUpdate": {
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Defaults to true"
          },
          "anchorsite_override": {
            "type": "string",
            "enum": [
              "Latency",
              "Chicago, IL",
              "Ashburn, VA",
              "San Jose, CA",
              "Sydney, Australia",
              "Amsterdam, Netherlands",
              "London, UK",
              "Toronto, Canada",
              "Vancouver, Canada"
            ],
            "description": "`Latency` directs Telnyx to route media through the site with the lowest round-trip time to the user's connection. Telnyx calculates this time using ICMP ping messages. This can be disabled by specifying a site to handle all media."
          },
          "connection_name": {
            "type": "string"
          },
          "sip_uri_calling_preference": {
            "type": "string",
            "default": "disabled",
            "description": "This feature enables inbound SIP URI calls to your Credential Auth Connection. If enabled for all (unrestricted) then anyone who calls the SIP URI <your-username>@telnyx.com will be connected to your Connection. You can also choose to allow only calls that are originated on any Connections under your account (internal).\n",
            "enum": [
              "disabled",
              "unrestricted",
              "internal"
            ]
          },
          "transport_protocol": {
            "type": "string",
            "description": "One of UDP, TLS, or TCP.",
            "default": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS"
            ]
          },
          "default_on_hold_comfort_noise_enabled": {
            "type": "boolean",
            "default": true,
            "description": "When enabled, Telnyx will generate comfort noise when you place the call on hold. If disabled, you will need to generate comfort noise or on hold music to avoid RTP timeout.\n"
          },
          "dtmf_type": {
            "type": "string",
            "enum": [
              "RFC 2833",
              "Inband",
              "SIP INFO"
            ],
            "default": "RFC 2833",
            "description": "Sets the type of DTMF digits sent from Telnyx to this Connection. Note that DTMF digits sent to Telnyx will be accepted in all formats.\n"
          },
          "encode_contact_header_enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Encode the SIP contact header sent by Telnyx to avoid issues for NAT or ALG scenarios.\n"
          },
          "encrypted_media": {
            "type": "string",
            "enum": [
              "SRTP",
              "ZRTP"
            ],
            "description": "Enable use of SRTP or ZRTP for encryption. Valid values are those listed or null. Cannot be set to non-null if the transport_portocol is TLS.\n"
          },
          "onnet_t38_passthrough_enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable on-net T38 if you prefer that the sender and receiver negotiate T38 directly when both are on the Telnyx network. If this is disabled, Telnyx will be able to use T38 on just one leg of the call according to each leg's settings."
          },
          "rtcp_settings": {
            "$ref": "#/components/schemas/ConnectionRTCPSettings"
          },
          "sip_reply_code": {
            "type": "integer"
          },
          "sip_reply_reason": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was created.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "updated_at": {
            "type": "string",
            "description": "ISO 8601 formatted date indicating when the resource was updated.",
            "example": "2018-02-02T22:25:27.521Z"
          },
          "inbound": {
            "$ref": "#/components/schemas/FQDNInbound"
          }
        }
      },
      "FQDNInbound": {
        "type": "object",
        "title": "Inbound configuration",
        "properties": {
          "ani_number_format": {
            "type": "string",
            "enum": [
              "+E.164",
              "E.164",
              "+E.164-national",
              "E.164-national"
            ],
            "default": "E.164-national",
            "description": "This setting allows you to set the format with which the caller's number (ANI) is sent for inbound phone calls.\n"
          },
          "dnis_number_format": {
            "type": "integer",
            "description": "0 = E.164<br/> 1 = Strip-1<br/> 2 = Strip-2\n",
            "default": 1
          },
          "codecs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Defines the list of codecs that Telnyx will send for inbound calls to a specific number on your portal account, in priority order. OPUS and H.264 codecs are available only when using TCP or TLS transport for SIP.\n",
            "default": [
              "G722",
              "G711U",
              "G711A",
              "G729",
              "OPUS",
              "H.264"
            ]
          },
          "default_routing_method": {
            "type": "string",
            "enum": [
              "sequential",
              "round-robin"
            ],
            "description": "Default routing method to be used when a number is associated with the connection. Must be one of the routing method types or left blank, other values are not allowed.\n"
          },
          "channel_limit": {
            "type": "integer",
            "default": null,
            "description": "When set, this will limit the total number of inbound calls to phone numbers associated with this connection.\n"
          },
          "generate_ringback_tone": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Generate ringback tone through 183 session progress message with early media.\n"
          },
          "isup_headers_enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "When set, inbound phone calls will receive ISUP parameters via SIP headers. (Only when available and only when using TCP or TLS transport.)\n"
          },
          "prack_enabled": {
            "type": "boolean",
            "description": "Enable PRACK messages as defined in RFC3262.",
            "default": false
          },
          "privacy_zone_enabled": {
            "type": "boolean",
            "description": "By default, Telnyx does not send caller-id information when the caller has chosen to hide this information. When this option is enabled, Telnyx will send the SIP header Privacy:id plus the caller-id information so that the receiver side can choose when to hide it.\n",
            "default": false
          },
          "sip_compact_headers_enabled": {
            "type": "boolean",
            "description": "Defaults to true.",
            "default": true
          },
          "sip_region": {
            "type": "string",
            "default": "US",
            "description": "Selects which `sip_region` to receive inbound calls from. If null, the default region (US) will be used.\n",
            "enum": [
              "US",
              "Europe",
              "Australia"
            ]
          },
          "sip_subdomain": {
            "type": "string",
            "description": "Specifies a subdomain that can be used to receive Inbound calls to a Connection, in the same way a phone number is used, from a SIP endpoint. Example: the subdomain \"example.sip.telnyx.com\" can be called from any SIP endpoint by using the SIP URI \"sip:@example.sip.telnyx.com\" where the user part can be any alphanumeric value. Please note TLS encrypted calls are not allowed for subdomain calls.\n"
          },
          "sip_subdomain_receive_settings": {
            "type": "string",
            "description": "This option can be enabled to receive calls from: \"Anyone\" (any SIP endpoint in the public Internet) or \"Only my connections\" (any connection assigned to the same Telnyx user).\n",
            "enum": [
              "only_my_connections",
              "from_anyone"
            ]
          },
          "timeout_1xx_secs": {
            "type": "integer",
            "description": "Time(sec) before aborting if connection is not made (min: 1, max: 20).\n",
            "default": 3
          },
          "timeout_2xx_secs": {
            "type": "integer",
            "description": "Time(sec) before aborting if call is unanswered (min: 1, max: 600).\n",
            "default": 90
          }
        }
      },
      "FQDNInboundCreate": {
        "type": "object",
        "title": "Inbound configuration",
        "properties": {
          "ani_number_format": {
            "type": "string",
            "enum": [
              "+E.164",
              "E.164",
              "+E.164-national",
              "E.164-national"
            ],
            "default": "E.164-national",
            "description": "This setting allows you to set the format with which the caller's number (ANI) is sent for inbound phone calls.\n"
          },
          "dnis_number_format": {
            "type": "integer",
            "description": "0 = E.164<br/> 1 = Strip-1<br/> 2 = Strip-2\n",
            "default": 1
          },
          "codecs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Defines the list of codecs that Telnyx will send for inbound calls to a specific number on your portal account, in priority order. This only works when the Connection the number is assigned to uses Media Handling mode: default. OPUS and H.264 codecs are available only when using TCP or TLS transport for SIP.\n",
            "default": [
              "G722",
              "G711U",
              "G711A",
              "G729",
              "OPUS",
              "H.264"
            ]
          },
          "default_routing_method": {
            "type": "string",
            "enum": [
              "sequential",
              "round-robin"
            ],
            "description": "Default routing method to be used when a number is associated with the connection. Must be one of the routing method types or left blank, other values are not allowed.\n"
          },
          "channel_limit": {
            "type": "integer",
            "default": null,
            "description": "When set, this will limit the total number of inbound calls to phone numbers associated with this connection.\n"
          },
          "generate_ringback_tone": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "Generate ringback tone through 183 session progress message with early media.\n"
          },
          "isup_headers_enabled": {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "default": false,
            "description": "When set, inbound phone calls will receive ISUP parameters via SIP headers. (Only when available and only when using TCP or TLS transport.)\n"
          },
          "prack_enabled": {
            "type": "boolean",
            "description": "Enable PRACK messages as defined in RFC3262.",
            "default": false
          },
          "privacy_zone_enabled": {
            "type": "boolean",
            "description": "By default, Telnyx does not send caller-id information when the caller has chosen to hide this information. When this option is enabled, Telnyx will send the SIP header Privacy:id plus the caller-id information so that the receiver side can choose when to hide it.\n",
            "default": false
          },
          "sip_compact_headers_enabled": {
            "type": "boolean",
            "description": "Defaults to true.",
            "default": true
          },
          "sip_region": {
            "type": "string",
            "default": "US",
            "description": "Selects which `sip_region` to receive inbound calls from. If null, the default region (US) will be used.\n",
            "enum": [
              "US",
              "Europe",
              "Australia"
            ]
          },
          "sip_subdomain": {
            "type": "string",
            "description": "Specifies a subdomain that can be used to receive Inbound calls to a Connection, in the same way a phone number is used, from a SIP endpoint. Example: the subdomain \"example.sip.telnyx.com\" can be called from any SIP endpoint by using the SIP URI \"sip:@example.sip.telnyx.com\" where the user part can be any alphanumeric value. Please note TLS encrypted calls are not allowed for subdomain calls.\n"
          },
          "sip_subdomain_receive_settings": {
            "type": "string",
            "description": "This option can be enabled to receive calls from: \"Anyone\" (any SIP endpoint in the public Internet) or \"Only my connections\" (any connection assigned to the same Telnyx user).\n",
            "enum": [
              "only_my_connections",
              "from_anyone"
            ]
          },
          "timeout_1xx_secs": {
            "type": "integer",
            "description": "Time(sec) before aborting if connection is not made (min: 1, max: 20).\n",
            "default": 3
          },
          "timeout_2xx_secs": {
            "type": "integer",
            "description": "Time(sec) before aborting if call is unanswered (min: 1, max: 600).\n",
            "default": 90
          }
        }
      }
    },
    "responses": {
      "GenericErrorResponse": {
        "description": "unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Errors"
            }
          }
        }
      },
      "ListMessagingProfilesResponse": {
        "description": "A paginated array of Messaging Profiles",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessagingProfile"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "CreateMessagingProfileResponse": {
        "description": "Expected messaging profile response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/MessagingProfile"
                }
              }
            }
          }
        }
      },
      "RetrieveMessagingProfileResponse": {
        "description": "Expected messaging profile response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/MessagingProfile"
                }
              }
            }
          }
        }
      },
      "UpdateMessagingProfileResponse": {
        "description": "Expected messaging profile response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/MessagingProfile"
                }
              }
            }
          }
        }
      },
      "DeleteMessagingProfileResponse": {
        "description": "Expected messaging profile response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/MessagingProfile"
                }
              }
            }
          }
        }
      },
      "RetrieveMessagingProfilePhoneNumbersResponse": {
        "description": "Paginated array of phone numbers associated with the messaging profile",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessagingPhoneNumber"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "RetrieveMessagingProfileShortCodesResponse": {
        "description": "Paginated array of short codes associated with the messaging profile",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShortCode"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "RetrieveMessagingProfileAlphanumericSenderIdsResponse": {
        "description": "Paginated array of alphanumeric sender IDs associated with the messaging profile",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlphanumericSenderId"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "ListMessagingPhoneNumbersResponse": {
        "description": "A paginated array of the phone numbers",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessagingPhoneNumberListElement"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "RetrieveMessagingPhoneNumberResponse": {
        "description": "Expected phone number response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/MessagingPhoneNumber"
                }
              }
            }
          }
        }
      },
      "UpdateMessagingPhoneNumberResponse": {
        "description": "Expected update response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/MessagingPhoneNumber"
                }
              }
            }
          }
        }
      },
      "ListShortCodesResponse": {
        "description": "A paginated array of the short codes",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShortCode"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "RetrieveShortCodeResponse": {
        "description": "Expected short code detail response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/ShortCode"
                }
              }
            }
          }
        }
      },
      "UpdateShortCodeResponse": {
        "description": "Expected update response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/ShortCode"
                }
              }
            }
          }
        }
      },
      "CreateAlphanumericSenderIdResponse": {
        "description": "The created alphanumeric sender ID",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/AlphanumericSenderId"
                }
              }
            }
          }
        }
      },
      "ListAlphanumericSenderIdsResponse": {
        "description": "A paginated array of the alphanumeric sender IDs",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlphanumericSenderId"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "RetrieveAlphanumericSenderIdResponse": {
        "description": "The requested alphanumeric sender ID record",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/AlphanumericSenderId"
                }
              }
            }
          }
        }
      },
      "DeleteAlphanumericSenderIdResponse": {
        "description": "The deleted alphanumeric sender ID record",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/AlphanumericSenderId"
                }
              }
            }
          }
        }
      },
      "CreateMessageResponse": {
        "description": "Detailed message object",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/OutboundMessage"
                },
                "statistics": {
                  "$ref": "#/components/schemas/MessageQueueInfo"
                }
              }
            }
          }
        }
      },
      "RetrieveMessageResponse": {
        "description": "Detailed message object",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/OutboundMessage"
                }
              }
            }
          }
        }
      },
      "NumberOrdersResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NumberOrder"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "ListNumberReservationsResponse": {
        "description": "Returns a list of number reservations",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NumberReservation"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "NumberReservationCreatedResponse": {
        "description": "Number reservation has been created successfully.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/NumberReservation"
                }
              }
            }
          }
        }
      },
      "NumberOrdersDetailedResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/NumberOrderDetailed"
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "NumberReservationsResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/NumberReservation"
                }
              }
            }
          }
        }
      },
      "RetrieveNumberReservationResponse": {
        "description": "Number reservation was found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/NumberReservation"
                }
              }
            }
          }
        }
      },
      "NumberReservationsDetailedResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NumberReservationDetailed"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "NumberReservationActionsExtendResponse": {
        "description": "Number reservation was extended",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/NumberReservation"
                }
              }
            }
          }
        }
      },
      "ListAvailablePhoneNumbersResponse": {
        "description": "A paginated array of Phone Numbers",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailablePhoneNumber"
                  }
                },
                "metadata": {
                  "$ref": "#/components/schemas/AvailablePhoneNumbersMetadata"
                }
              }
            }
          }
        }
      },
      "PublicKeyResponse": {
        "description": "Successful response from public key endpoint",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/PublicKey"
                }
              }
            }
          }
        }
      },
      "CallControlCommandResponse": {
        "description": "Command response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/CallControlCommandResult"
                }
              }
            }
          }
        }
      },
      "RetrieveCallStatusResponse": {
        "description": "Retrieve call status response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          }
        }
      },
      "ListCallEventsResponse": {
        "description": "An array of call events",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallEvent"
                  }
                }
              }
            }
          }
        }
      },
      "CreateConferenceResponse": {
        "description": "Expected response to successful conference creation",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/Conference"
                }
              }
            }
          }
        }
      },
      "ListConferencesResponse": {
        "description": "A paginated array of conferences",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Conference"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "ConferenceCommandResponse": {
        "description": "Conference command response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/ConferenceCommandResult"
                }
              }
            }
          }
        }
      },
      "SearchSimCardsResponse": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SimpleSIMCard"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "GetSimCardResponse": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/SIMCard"
                }
              }
            }
          }
        }
      },
      "UpdateSimCardResponse": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/SIMCard"
                }
              }
            }
          }
        }
      },
      "DeactivateSimCardResponse": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Unprocessable entity. Check the 'detail' field in response for details.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      },
      "ActivateSimCardResponse": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        }
      },
      "RegisterSimCardsResponse": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "description": "Successfully registered SIM cards.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SimpleSIMCard"
                  }
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "ListPhoneNumbersResponse": {
        "description": "A paginated array of PhoneNumbers.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneNumberResponse"
                  }
                }
              }
            }
          }
        }
      },
      "RetrievePhoneNumberResponse": {
        "description": "The details for a single phone number.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/PhoneNumberResponse"
                }
              }
            }
          }
        }
      },
      "DeletePhoneNumberResponse": {
        "description": "The details for the phone number that was just deleted.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/PhoneNumberResponse"
                }
              }
            }
          }
        }
      },
      "RetrievePhoneNumberVoiceResponse": {
        "description": "The voice attributes and information for a phone number.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/PhoneNumberVoice"
                }
              }
            }
          }
        }
      },
      "ListPhoneNumberVoicesResponse": {
        "description": "A paginated array of phone number voice information.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneNumberVoice"
                  }
                }
              }
            }
          }
        }
      },
      "ListMessagingSettingsResponse": {
        "description": "A paginated array of the phone numbers",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessagingSettings"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "RetrieveMessagingSettingsResponse": {
        "description": "Expected phone number response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/MessagingSettings"
                }
              }
            }
          }
        }
      },
      "ListBillingGroupsResponse": {
        "description": "A paginated array of billing groups",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillingGroup"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "CreateBillingGroupResponse": {
        "description": "Expected billing group response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/BillingGroup"
                }
              }
            }
          }
        }
      },
      "UpdateBillingGroupResponse": {
        "description": "Expected billing group response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/BillingGroup"
                }
              }
            }
          }
        }
      },
      "DeleteBillingGroupResponse": {
        "description": "Expected billing group response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/BillingGroup"
                }
              }
            }
          }
        }
      },
      "RetrieveBillingGroupResponse": {
        "description": "Expected billing group response to a valid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/BillingGroup"
                }
              }
            }
          }
        }
      },
      "IPConnectionResponse": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/IPConnection"
                }
              }
            }
          }
        }
      },
      "GetAllIPConnectionResponse": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IPConnection"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "CredentialConnectionResponse": {
        "description": "Successful response with details about a credential connection",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/CredentialConnection"
                }
              }
            }
          }
        }
      },
      "GetAllCredentialConnectionResponse": {
        "description": "Successful response with multiple credential connections",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialConnection"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "IPSuccessfulResponse": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/IP"
                }
              }
            }
          }
        }
      },
      "IPSearchSuccessfulResponse": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IP"
                  }
                }
              }
            }
          }
        }
      },
      "FQDNConnectionResponse": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/FQDNConnection"
                }
              }
            }
          }
        }
      },
      "GetAllFQDNConnectionResponse": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FQDNConnection"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "ListNumberOrderDocumentsResponse": {
        "description": "Returns a list of number order documents",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NumberOrderDocument"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "CreateNumberOrderDocumentResponse": {
        "description": "Number order document has been uploaded successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/NumberOrderDocument"
                }
              }
            }
          }
        }
      },
      "UpdateNumberOrderDocumentResponse": {
        "description": "Number order document has been updated successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/NumberOrderDocument"
                }
              }
            }
          }
        }
      },
      "RetrieveNumberOrderDocumentResponse": {
        "description": "Number order document was found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/NumberOrderDocument"
                }
              }
            }
          }
        }
      },
      "ListNumberOrderRegulatoryRequirementsResponse": {
        "description": "Returns a list of number order regulatory requirements",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegulatoryRequirement"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      },
      "RetrieveNumberOrderRegulatoryRequirementResponse": {
        "description": "Number order regulatory requirement was found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/RegulatoryRequirement"
                }
              }
            }
          }
        }
      },
      "ListPhoneNumberRegulatoryRequirementsResponse": {
        "description": "Returns a list of number order regulatory requirements",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneNumberRegulatoryGroup"
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/PaginationMeta"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "PageSize": {
        "name": "page[size]",
        "in": "query",
        "description": "The size of the page",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 250,
          "default": 20
        }
      },
      "PageNumber": {
        "name": "page[number]",
        "in": "query",
        "description": "The page number to load",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "PageToken": {
        "name": "page[token]",
        "in": "query",
        "description": "Token to receive the next page. For guaranteed pagination that will not skip elements, use the token provided in a previous request.\n",
        "schema": {
          "type": "string"
        }
      },
      "AlphanumericSenderId": {
        "name": "id",
        "in": "path",
        "description": "The unique ID of the alphanumeric sender ID to retrieve",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "MessagingProfileId": {
        "name": "id",
        "in": "path",
        "description": "The id of the messaging profile to retrieve",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "NumberOrderId": {
        "in": "path",
        "name": "number_order_id",
        "description": "The number order id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "NumberReservationId": {
        "name": "number_reservation_id",
        "in": "path",
        "description": "The number reservation id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "MessagingPhoneNumberId": {
        "name": "id",
        "in": "path",
        "description": "The id of the phone number",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ShortCodeId": {
        "name": "id",
        "in": "path",
        "description": "The id of the short code",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "CallControlId": {
        "name": "call_control_id",
        "description": "Unique identifier and token for controlling the call",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ConferenceId": {
        "name": "id",
        "description": "Unique identifier of the conference",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "WirelessId": {
        "name": "id",
        "description": "Uniquely identifies the resource or object.",
        "in": "path",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string",
          "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
        }
      },
      "BillingGroupId": {
        "name": "id",
        "in": "path",
        "description": "The id of the billing group",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "FilterConnectionName": {
        "name": "filter[connection_name][contains]",
        "in": "query",
        "required": false,
        "description": "If present, connections with <code>connection_name</code> containing the given value will be returned. Matching is not case-sensitive. Requires at least three characters.\n",
        "schema": {
          "type": "string",
          "default": "null"
        }
      },
      "Sort": {
        "name": "sort",
        "in": "query",
        "required": false,
        "description": "Specifies the sort order for results. By default sorting direction is ascending. To have the results sorterd in descending order add the <code> -</code> prefix.<br/><br/>\nThat is: <ul>\n  <li>\n    <code>connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in ascending order.\n  </li>\n\n  <li>\n    <code>-connection_name</code>: sorts the result by the\n    <code>connection_name</code> field in descending order.\n  </li>\n</ul> <br/> If not given, results are sorted by <code>created_at</code> in descending order.\n",
        "schema": {
          "type": "string",
          "enum": [
            "created_at",
            "connection_name",
            "active"
          ],
          "example": "connection_name",
          "default": "created_at"
        }
      },
      "IPId": {
        "name": "id",
        "description": "Identifies the type of resource.",
        "in": "path",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string",
          "example": "6a09cdc3-8948-47f0-aa62-74ac943d6c58"
        }
      }
    },
    "examples": {},
    "links": {},
    "requestBodies": {}
  }
}
